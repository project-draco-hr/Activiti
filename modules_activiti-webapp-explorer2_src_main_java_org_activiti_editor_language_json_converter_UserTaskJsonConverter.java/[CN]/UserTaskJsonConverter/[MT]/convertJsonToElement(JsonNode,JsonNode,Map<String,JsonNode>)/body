{
  UserTask task=new UserTask();
  String priority=getPropertyValueAsString(PROPERTY_USERTASK_PRIORITY,elementNode);
  if (StringUtils.isNotEmpty(priority)) {
    try {
      task.setPriority(Integer.valueOf(priority));
    }
 catch (    Exception e) {
      LOGGER.log(Level.INFO,"priority is not a number " + priority);
    }
  }
  task.setFormKey(getPropertyValueAsString(PROPERTY_USERTASK_FORMKEY,elementNode));
  task.setDueDate(getPropertyValueAsString(PROPERTY_USERTASK_DUEDATE,elementNode));
  JsonNode assignmentNode=getProperty(PROPERTY_USERTASK_ASSIGNMENT,elementNode);
  JsonNode itemsNode=assignmentNode.get(EDITOR_PROPERTIES_GENERAL_ITEMS);
  if (itemsNode != null) {
    Iterator<JsonNode> assignmentIterator=itemsNode.getElements();
    while (assignmentIterator.hasNext()) {
      JsonNode assignmentItemNode=assignmentIterator.next();
      if (assignmentItemNode.get(PROPERTY_USERTASK_ASSIGNMENT_TYPE) != null && assignmentItemNode.get(PROPERTY_USERTASK_ASSIGNMENT_EXPRESSION) != null) {
        String assignmentType=assignmentItemNode.get(PROPERTY_USERTASK_ASSIGNMENT_TYPE).asText();
        if (PROPERTY_USERTASK_ASSIGNEE.equals(assignmentType)) {
          task.setAssignee(assignmentItemNode.get(PROPERTY_USERTASK_ASSIGNMENT_EXPRESSION).asText());
        }
 else         if (PROPERTY_USERTASK_CANDIDATE_USERS.equals(assignmentType)) {
          task.setCandidateUsers(convertPropertyToList(PROPERTY_USERTASK_ASSIGNMENT_EXPRESSION,assignmentItemNode));
        }
 else         if (PROPERTY_USERTASK_CANDIDATE_GROUPS.equals(assignmentType)) {
          task.setCandidateGroups(convertPropertyToList(PROPERTY_USERTASK_ASSIGNMENT_EXPRESSION,assignmentItemNode));
        }
      }
    }
  }
  convertJsonToFormProperties(elementNode,task);
  return task;
}
