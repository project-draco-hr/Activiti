{
  String appContextResource="org/activiti/spring/test/SpringAutoDeployTest-context.xml";
  ClassPathXmlApplicationContext applicationContext=new ClassPathXmlApplicationContext(appContextResource);
  RepositoryService repositoryService=(RepositoryService)applicationContext.getBean("repositoryService");
  DeploymentQuery deploymentQuery=repositoryService.createDeploymentQuery();
  assertEquals(1,deploymentQuery.count());
  ProcessDefinitionQuery processDefinitionQuery=repositoryService.createProcessDefinitionQuery();
  assertEquals(3,processDefinitionQuery.count());
  String appContextResourceNoDrop="org/activiti/spring/test/SpringAutoDeployTest-no-drop-context.xml";
  applicationContext=new ClassPathXmlApplicationContext(appContextResourceNoDrop);
  repositoryService=(RepositoryService)applicationContext.getBean("repositoryService");
  assertEquals(1,deploymentQuery.count());
  assertEquals(3,processDefinitionQuery.count());
  applicationContext.destroy();
  String filePath="org/activiti/spring/test/autodeploy.a.bpmn20.xml";
  String originalBpmnFileContent=readFileAsString(filePath);
  String updatedBpmnFileContent=originalBpmnFileContent.replace("flow1","fromStartToEndFlow");
  writeStringToFile(updatedBpmnFileContent,filePath);
  waitUntilFileIsWritten(filePath,updatedBpmnFileContent.length());
  applicationContext=new ClassPathXmlApplicationContext(appContextResourceNoDrop);
  repositoryService=(RepositoryService)applicationContext.getBean("repositoryService");
  writeStringToFile(originalBpmnFileContent,filePath);
  assertEquals(2,deploymentQuery.count());
  assertEquals(6,processDefinitionQuery.count());
  for (  Deployment deployment : repositoryService.createDeploymentQuery().list()) {
    repositoryService.deleteDeploymentCascade(deployment.getId());
  }
}
