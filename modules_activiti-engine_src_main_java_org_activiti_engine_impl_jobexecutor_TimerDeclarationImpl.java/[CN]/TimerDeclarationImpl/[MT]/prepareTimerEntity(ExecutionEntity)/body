{
  BusinessCalendar businessCalendar=Context.getProcessEngineConfiguration().getBusinessCalendarManager().getBusinessCalendar(type.calendarName);
  if (description == null) {
    throw new ActivitiException("Timer '" + executionEntity.getActivityId() + "' was not configured with a valid duration/time");
  }
  String dueDateString=null;
  Date duedate=null;
  VariableScope scopeForExpression=executionEntity;
  if (scopeForExpression == null) {
    scopeForExpression=StartProcessVariableScope.getSharedInstance();
  }
  Object dueDateValue=description.getValue(scopeForExpression);
  if (dueDateValue instanceof String) {
    dueDateString=(String)dueDateValue;
  }
 else   if (dueDateValue instanceof Date) {
    duedate=(Date)dueDateValue;
  }
 else {
    throw new ActivitiException("Timer '" + executionEntity.getActivityId() + "' was not configured with a valid duration/time, either hand in a java.util.Date or a String in format 'yyyy-MM-dd'T'hh:mm:ss'");
  }
  if (duedate == null) {
    duedate=businessCalendar.resolveDuedate(dueDateString);
  }
  TimerEntity timer=new TimerEntity(this);
  timer.setDuedate(duedate);
  if (executionEntity != null) {
    timer.setExecution(executionEntity);
  }
  if (type == TimerDeclarationType.CYCLE) {
    String prepared=prepareRepeat(dueDateString);
    timer.setRepeat(prepared);
  }
  return timer;
}
