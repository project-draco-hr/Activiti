{
  int width=0;
  int maxNrOfTasksInOneBlock=1;
  List<StartEvent> startEvents=BpmnModelUtil.findFlowElementsOfType(process,StartEvent.class);
  if (startEvents.size() != 1) {
    throw new ActivitiException("Invalid number of start events: " + startEvents.size() + " found, but only 1 is supported");
  }
  FlowElement currentFlowElement=startEvents.get(0);
  while (currentFlowElement != null) {
    if (currentFlowElement instanceof StartEvent) {
      width+=EVENT_WIDTH + SEQUENCE_FLOW_WIDTH;
      currentFlowElement=process.getFlowElement(outgoingSequenceFlowMapping.get(currentFlowElement.getId()).get(0).getTargetRef());
    }
 else     if (currentFlowElement instanceof EndEvent) {
      width+=EVENT_WIDTH;
      currentFlowElement=null;
    }
 else     if (currentFlowElement instanceof ParallelGateway) {
      width+=TASK_BLOCK_WIDTH + SEQUENCE_FLOW_WIDTH;
      String nextTaskId=outgoingSequenceFlowMapping.get(currentFlowElement.getId()).get(0).getTargetRef();
      String joinGatewayId=outgoingSequenceFlowMapping.get(nextTaskId).get(0).getTargetRef();
      int nrOfStepsAfterGateway=outgoingSequenceFlowMapping.get(currentFlowElement.getId()).size();
      if (nrOfStepsAfterGateway > maxNrOfTasksInOneBlock) {
        maxNrOfTasksInOneBlock=nrOfStepsAfterGateway;
      }
      currentFlowElement=process.getFlowElement(outgoingSequenceFlowMapping.get(joinGatewayId).get(0).getTargetRef());
    }
 else {
      width+=TASK_WIDTH + SEQUENCE_FLOW_WIDTH;
      currentFlowElement=process.getFlowElement(outgoingSequenceFlowMapping.get(currentFlowElement.getId()).get(0).getTargetRef());
    }
  }
  maximumWidth=width;
  int extra=0;
  if (maxNrOfTasksInOneBlock % 2 == 0) {
    extra=2 * TASK_HEIGHT;
  }
  maxiumHeight=(maxNrOfTasksInOneBlock * (TASK_HEIGHT + TASK_HEIGHT_SPACING)) + extra;
}
