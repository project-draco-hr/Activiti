{
  if (repositoryArtifactLink instanceof RepositoryArtifactLinkEntity) {
    linkDao.insertArtifactLink((RepositoryArtifactLinkEntity)repositoryArtifactLink);
  }
 else {
    RepositoryArtifactLinkEntity cycleLink=new RepositoryArtifactLinkEntity();
    cycleLink.setId(repositoryArtifactLink.getId());
    cycleLink.setSourceConnectorId(repositoryArtifactLink.getSourceArtifact().getConnectorId());
    cycleLink.setSourceArtifactId(repositoryArtifactLink.getSourceArtifact().getNodeId());
    cycleLink.setSourceElementId(repositoryArtifactLink.getSourceElementId());
    cycleLink.setSourceElementName(repositoryArtifactLink.getSourceElementName());
    cycleLink.setSourceRevision(repositoryArtifactLink.getSourceArtifact().getArtifactType().getRevision());
    cycleLink.setTargetConnectorId(repositoryArtifactLink.getTargetArtifact().getConnectorId());
    cycleLink.setTargetArtifactId(repositoryArtifactLink.getTargetArtifact().getNodeId());
    cycleLink.setTargetElementId(repositoryArtifactLink.getTargetElementId());
    cycleLink.setTargetElementName(repositoryArtifactLink.getTargetElementName());
    cycleLink.setTargetRevision(repositoryArtifactLink.getTargetArtifact().getArtifactType().getRevision());
    cycleLink.setLinkType(repositoryArtifactLink.getLinkType());
    cycleLink.setComment(repositoryArtifactLink.getComment());
    cycleLink.setLinkedBothWays(false);
    linkDao.insertArtifactLink(cycleLink);
  }
}
