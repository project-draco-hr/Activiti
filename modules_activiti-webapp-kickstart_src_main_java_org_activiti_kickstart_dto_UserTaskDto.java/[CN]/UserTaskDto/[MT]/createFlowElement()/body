{
  UserTask userTask=new UserTask();
  if (getAssignee() != null && !"".equals(getAssignee())) {
    HumanPerformer humanPerformer=new HumanPerformer();
    humanPerformer.setId(userTask.getId() + "_humanPerformer");
    ResourceAssignmentExpression assignmentExpression=new ResourceAssignmentExpression();
    assignmentExpression.setId(userTask.getId() + "_humanPerformer_assignmentExpression");
    FormalExpression formalExpression=new FormalExpression(getAssignee());
    formalExpression.setId(userTask.getId() + "_humanPerformer_formalExpressions");
    assignmentExpression.setExpression(formalExpression);
    humanPerformer.setResourceAssignmentExpression(assignmentExpression);
    userTask.getActivityResource().add(humanPerformer);
  }
  if (getGroups() != null && !"".equals(getGroups())) {
    PotentialOwner potentialOwner=new PotentialOwner();
    potentialOwner.setId(userTask.getId() + "_potentialOwner");
    ResourceAssignmentExpression assignmentExpression=new ResourceAssignmentExpression();
    assignmentExpression.setId(userTask.getId() + "_potentialOwner_assignmentExpression");
    StringBuilder groups=new StringBuilder();
    for (    String group : getGroups().split(",")) {
      groups.append(group + ",");
    }
    groups.deleteCharAt(groups.length() - 1);
    FormalExpression formalExpression=new FormalExpression(groups.toString());
    formalExpression.setId(userTask.getId() + "_potentialOwner_formalExpressions");
    assignmentExpression.setExpression(formalExpression);
    potentialOwner.setResourceAssignmentExpression(assignmentExpression);
    userTask.getActivityResource().add(potentialOwner);
  }
  if (getForm() != null) {
    List<ActivitiFormProperty> formProperties=new ArrayList<ActivitiFormProperty>();
    for (    FormPropertyDto formPropertyDto : getForm().getFormProperties()) {
      ActivitiFormProperty formProperty=new ActivitiFormProperty();
      formProperty.setId(formPropertyDto.getProperty());
      formProperty.setName(formPropertyDto.getProperty());
      formProperty.setRequired(formPropertyDto.isRequired() ? "true" : "false");
      String dtoType=formPropertyDto.getType();
      String type="string";
      if ("number".equals(dtoType)) {
        type="long";
      }
 else       if ("date".equals(dtoType)) {
        type="date";
      }
      formProperty.setType(type);
      formProperties.add(formProperty);
    }
    if (formProperties.size() > 0) {
      userTask.setExtensionElements(new ExtensionElements());
      for (      ActivitiFormProperty formProperty : formProperties) {
        userTask.getExtensionElements().add(formProperty);
      }
    }
  }
  return userTask;
}
