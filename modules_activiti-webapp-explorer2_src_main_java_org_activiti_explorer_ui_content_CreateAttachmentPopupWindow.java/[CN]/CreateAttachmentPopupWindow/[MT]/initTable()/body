{
  attachmentTypes=new Table();
  attachmentTypes.setSizeUndefined();
  attachmentTypes.setColumnHeaderMode(Table.COLUMN_HEADER_MODE_HIDDEN);
  attachmentTypes.setSelectable(true);
  attachmentTypes.setImmediate(true);
  attachmentTypes.setNullSelectionAllowed(false);
  attachmentTypes.setWidth(200,UNITS_PIXELS);
  attachmentTypes.setHeight(100,UNITS_PERCENTAGE);
  attachmentTypes.setCellStyleGenerator(new CellStyleGenerator(){
    private static final long serialVersionUID=1L;
    public String getStyle(    Object itemId,    Object propertyId){
      if ("name".equals(propertyId)) {
        return ExplorerLayout.STYLE_RELATED_CONTENT_CREATE_LIST_LAST_COLUMN;
      }
      return null;
    }
  }
);
  attachmentTypes.addStyleName(ExplorerLayout.STYLE_RELATED_CONTENT_CREATE_LIST);
  attachmentTypes.addContainerProperty("type",Embedded.class,null);
  attachmentTypes.setColumnWidth("type",16);
  attachmentTypes.addContainerProperty("name",String.class,null);
  for (  AttachmentEditor editor : AttachmentRenderers.getAttachmentEditors()) {
    String name=editor.getTitle(i18nManager);
    Embedded image=null;
    Resource resource=editor.getImage();
    if (resource != null) {
      image=new Embedded(null,resource);
    }
    Item item=attachmentTypes.addItem(editor.getName());
    item.getItemProperty("type").setValue(image);
    item.getItemProperty("name").setValue(name);
  }
  attachmentTypes.addListener(new ValueChangeListener(){
    private static final long serialVersionUID=1L;
    public void valueChange(    ValueChangeEvent event){
      String type=(String)event.getProperty().getValue();
      selectType(type);
    }
  }
);
  layout.addComponent(attachmentTypes);
}
