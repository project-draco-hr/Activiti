{
  if (!authenticate()) {
    return null;
  }
  if (request.getProcessDefinitionId() == null && request.getProcessDefinitionKey() == null && request.getMessage() == null) {
    throw new ActivitiIllegalArgumentException("Either processDefinitionId, processDefinitionKey or message is required.");
  }
  int paramsSet=((request.getProcessDefinitionId() != null) ? 1 : 0) + ((request.getProcessDefinitionKey() != null) ? 1 : 0) + ((request.getMessage() != null) ? 1 : 0);
  if (paramsSet > 1) {
    throw new ActivitiIllegalArgumentException("Only one of processDefinitionId, processDefinitionKey or message should be set.");
  }
  if (request.isCustomTenantSet()) {
    if (request.getProcessDefinitionId() != null) {
      throw new ActivitiIllegalArgumentException("TenantId can only be used with either processDefinitionKey or message.");
    }
  }
  RestResponseFactory factory=getApplication(ActivitiRestServicesApplication.class).getRestResponseFactory();
  Map<String,Object> startVariables=null;
  if (request.getVariables() != null) {
    startVariables=new HashMap<String,Object>();
    for (    RestVariable variable : request.getVariables()) {
      if (variable.getName() == null) {
        throw new ActivitiIllegalArgumentException("Variable name is required.");
      }
      startVariables.put(variable.getName(),factory.getVariableValue(variable));
    }
  }
  try {
    ProcessInstance instance=null;
    if (request.getProcessDefinitionId() != null) {
      instance=ActivitiUtil.getRuntimeService().startProcessInstanceById(request.getProcessDefinitionId(),request.getBusinessKey(),startVariables);
    }
 else     if (request.getProcessDefinitionKey() != null) {
      if (request.isCustomTenantSet()) {
        instance=ActivitiUtil.getRuntimeService().startProcessInstanceByKeyAndTenantId(request.getProcessDefinitionKey(),request.getBusinessKey(),startVariables,request.getTenantId());
      }
 else {
        instance=ActivitiUtil.getRuntimeService().startProcessInstanceByKey(request.getProcessDefinitionKey(),request.getBusinessKey(),startVariables);
      }
    }
 else {
      if (request.isCustomTenantSet()) {
      }
 else {
        instance=ActivitiUtil.getRuntimeService().startProcessInstanceByMessage(request.getMessage(),request.getBusinessKey(),startVariables);
      }
    }
    setStatus(Status.SUCCESS_CREATED);
    return factory.createProcessInstanceResponse(this,instance);
  }
 catch (  ActivitiObjectNotFoundException aonfe) {
    throw new ActivitiIllegalArgumentException(aonfe.getMessage(),aonfe);
  }
}
