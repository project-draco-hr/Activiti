{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess");
  runtimeService.setVariable(processInstance.getId(),"stringVariable","initialValue");
  ArrayNode requestNode=objectMapper.createArrayNode();
  ObjectNode stringVarNode=requestNode.addObject();
  stringVarNode.put("name","stringVariable");
  stringVarNode.put("value","simple string value");
  stringVarNode.put("type","string");
  ObjectNode anotherVariable=requestNode.addObject();
  anotherVariable.put("name","stringVariable2");
  anotherVariable.put("value","another string value");
  anotherVariable.put("type","string");
  HttpPut httpPut=new HttpPut(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_VARIABLE_COLLECTION,processInstance.getId()));
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  CloseableHttpResponse response=executeRequest(httpPut,HttpStatus.SC_CREATED);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertTrue(responseNode.isArray());
  assertEquals(2,responseNode.size());
  Map<String,Object> variables=runtimeService.getVariablesLocal(processInstance.getId());
  assertEquals(2,variables.size());
  assertEquals("simple string value",variables.get("stringVariable"));
  assertEquals("another string value",variables.get("stringVariable2"));
}
