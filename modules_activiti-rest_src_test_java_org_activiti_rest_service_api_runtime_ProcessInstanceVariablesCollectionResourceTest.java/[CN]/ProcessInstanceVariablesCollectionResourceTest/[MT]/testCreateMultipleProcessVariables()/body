{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess");
  ArrayNode requestNode=objectMapper.createArrayNode();
  ObjectNode stringVarNode=requestNode.addObject();
  stringVarNode.put("name","stringVariable");
  stringVarNode.put("value","simple string value");
  stringVarNode.put("type","string");
  ObjectNode integerVarNode=requestNode.addObject();
  integerVarNode.put("name","integerVariable");
  integerVarNode.put("value",1234);
  integerVarNode.put("type","integer");
  ObjectNode shortVarNode=requestNode.addObject();
  shortVarNode.put("name","shortVariable");
  shortVarNode.put("value",123);
  shortVarNode.put("type","short");
  ObjectNode longVarNode=requestNode.addObject();
  longVarNode.put("name","longVariable");
  longVarNode.put("value",4567890L);
  longVarNode.put("type","long");
  ObjectNode doubleVarNode=requestNode.addObject();
  doubleVarNode.put("name","doubleVariable");
  doubleVarNode.put("value",123.456);
  doubleVarNode.put("type","double");
  ObjectNode booleanVarNode=requestNode.addObject();
  booleanVarNode.put("name","booleanVariable");
  booleanVarNode.put("value",Boolean.TRUE);
  booleanVarNode.put("type","boolean");
  Calendar varCal=Calendar.getInstance();
  String isoString=getISODateString(varCal.getTime());
  ObjectNode dateVarNode=requestNode.addObject();
  dateVarNode.put("name","dateVariable");
  dateVarNode.put("value",isoString);
  dateVarNode.put("type","date");
  HttpPost httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_VARIABLE_COLLECTION,processInstance.getId()));
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  HttpResponse response=executeHttpRequest(httpPost,HttpStatus.SC_CREATED);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  assertNotNull(responseNode);
  assertTrue(responseNode.isArray());
  assertEquals(7,responseNode.size());
  Map<String,Object> variables=runtimeService.getVariablesLocal(processInstance.getId());
  assertEquals(7,variables.size());
  assertEquals("simple string value",variables.get("stringVariable"));
  assertEquals(1234,variables.get("integerVariable"));
  assertEquals((short)123,variables.get("shortVariable"));
  assertEquals(4567890L,variables.get("longVariable"));
  assertEquals(123.456,variables.get("doubleVariable"));
  assertEquals(Boolean.TRUE,variables.get("booleanVariable"));
  assertEquals(dateFormat.parse(isoString),variables.get("dateVariable"));
}
