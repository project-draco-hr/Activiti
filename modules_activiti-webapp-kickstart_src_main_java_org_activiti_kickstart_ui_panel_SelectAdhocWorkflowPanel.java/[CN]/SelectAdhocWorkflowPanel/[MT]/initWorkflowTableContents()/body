{
  List<AdhocWorkflowInfo> processDefinitions=adhocWorkflowService.findAdhocWorkflowInformation();
  for (  final AdhocWorkflowInfo infoDto : processDefinitions) {
    Item workflowItem=workflowTable.getItem(workflowTable.addItem());
    Button nameButton=new Button(infoDto.getName());
    nameButton.setStyleName("link");
    nameButton.addListener(new Button.ClickListener(){
      private static final long serialVersionUID=5671158538486627690L;
      public void buttonClick(      ClickEvent event){
        viewManager.showPopupWindow(new ProcessImagePopupWindow(viewManager,infoDto.getId()));
      }
    }
);
    workflowItem.getItemProperty("name").setValue(nameButton);
    workflowItem.getItemProperty("key").setValue(infoDto.getKey());
    workflowItem.getItemProperty("version").setValue(infoDto.getVersion());
    workflowItem.getItemProperty("createTime").setValue(infoDto.getCreateTime());
    workflowItem.getItemProperty("nrOfRunningInstance").setValue(infoDto.getNrOfRuntimeInstances());
    workflowItem.getItemProperty("nrOfHistoricInstances").setValue(infoDto.getNrOfHistoricInstances());
    HorizontalLayout actions=new HorizontalLayout();
    actions.setSpacing(true);
    Button editButton=new Button("edit");
    editButton.setStyleName("link");
    editButton.setData(infoDto.getId());
    editButton.addListener(new EditExistingAdhocWorkflowClickListener(viewManager,adhocWorkflowService));
    actions.addComponent(editButton);
    StreamResource.StreamSource streamSource=new StreamSource(){
      private static final long serialVersionUID=-8875067466181823014L;
      public InputStream getStream(){
        return ServiceLocator.getAdhocWorkflowService().getProcessBpmnXml(infoDto.getId());
      }
    }
;
    Link bpmnXmlLink=new Link("get xml",new StreamResource(streamSource,infoDto.getKey() + ".bpmn20.xml",viewManager.getApplication()));
    actions.addComponent(bpmnXmlLink);
    workflowItem.getItemProperty("actions").setValue(actions);
  }
  workflowTable.setPageLength(workflowTable.size());
}
