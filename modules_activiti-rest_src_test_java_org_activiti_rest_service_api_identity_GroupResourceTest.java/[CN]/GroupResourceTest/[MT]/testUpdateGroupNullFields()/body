{
  try {
    Group testGroup=identityService.newGroup("testgroup");
    testGroup.setName("Test group");
    testGroup.setType("Test type");
    identityService.saveGroup(testGroup);
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_GROUP,"testgroup"));
    ObjectNode requestNode=objectMapper.createObjectNode();
    requestNode.put("name",(JsonNode)null);
    requestNode.put("type",(JsonNode)null);
    Representation response=client.put(requestNode);
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    JsonNode responseNode=objectMapper.readTree(response.getStream());
    assertNotNull(responseNode);
    assertEquals("testgroup",responseNode.get("id").textValue());
    assertNull(responseNode.get("name").textValue());
    assertNull(responseNode.get("type").textValue());
    assertTrue(responseNode.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_GROUP,testGroup.getId())));
    Group createdGroup=identityService.createGroupQuery().groupId("testgroup").singleResult();
    assertNotNull(createdGroup);
    assertNull(createdGroup.getName());
    assertNull(createdGroup.getType());
  }
  finally {
    try {
      identityService.deleteGroup("testgroup");
    }
 catch (    Throwable ignore) {
    }
  }
}
