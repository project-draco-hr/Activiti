{
  if (UpgradeUtil.getProcessEngineVersion(processEngine) == 11) {
    ProcessDefinition processDefinition=processEngine.getRepositoryService().createProcessDefinitionQuery().processDefinitionKey("suspendAndActivate").singleResult();
    assertNotNull(processDefinition);
    assertFalse(processDefinition.isSuspended());
    assertEquals(Activiti_5_10_DataGenerator.NR_OF_INSTANCES_FOR_SUSPENSION,processEngine.getRuntimeService().createProcessInstanceQuery().processDefinitionId(processDefinition.getId()).active().count());
    assertEquals(0,processEngine.getRuntimeService().createProcessInstanceQuery().processDefinitionId(processDefinition.getId()).suspended().count());
    ProcessInstance processInstance=processEngine.getRuntimeService().createProcessInstanceQuery().processDefinitionId(processDefinition.getId()).list().get(0);
    assertFalse(processInstance.isSuspended());
    processEngine.getRuntimeService().suspendProcessInstanceById(processInstance.getId());
    assertEquals(Activiti_5_10_DataGenerator.NR_OF_INSTANCES_FOR_SUSPENSION - 1,processEngine.getRuntimeService().createProcessInstanceQuery().processDefinitionId(processDefinition.getId()).active().count());
    assertEquals(1,processEngine.getRuntimeService().createProcessInstanceQuery().processDefinitionId(processDefinition.getId()).suspended().count());
    try {
      Task task=processEngine.getTaskService().createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
      processEngine.getTaskService().complete(task.getId());
    }
 catch (    ActivitiException e) {
      assertTrue(e.getMessage().toLowerCase().contains("suspend"));
    }
    processEngine.getRuntimeService().activateProcessInstanceById(processInstance.getId());
  }
}
