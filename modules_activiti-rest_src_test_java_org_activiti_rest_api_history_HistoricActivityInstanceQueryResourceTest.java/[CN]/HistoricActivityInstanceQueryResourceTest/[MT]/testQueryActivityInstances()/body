{
  HashMap<String,Object> processVariables=new HashMap<String,Object>();
  processVariables.put("stringVar","Azerty");
  processVariables.put("intVar",67890);
  processVariables.put("booleanVar",false);
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess",processVariables);
  Task task=taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
  taskService.complete(task.getId());
  ProcessInstance processInstance2=runtimeService.startProcessInstanceByKey("oneTaskProcess",processVariables);
  String url=RestUrls.createRelativeResourceUrl(RestUrls.URL_HISTORIC_ACTIVITY_INSTANCE_QUERY);
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("activityId","processTask");
  assertResultsPresentInDataResponse(url,requestNode,2,"processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityId","processTask");
  requestNode.put("finished",true);
  assertResultsPresentInDataResponse(url,requestNode,1,"processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityId","processTask");
  requestNode.put("finished",false);
  assertResultsPresentInDataResponse(url,requestNode,1,"processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityId","processTask2");
  assertResultsPresentInDataResponse(url,requestNode,1,"processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityId","processTask3");
  assertResultsPresentInDataResponse(url,requestNode,0);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityName","Process task");
  assertResultsPresentInDataResponse(url,requestNode,2,"processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityName","Process task2");
  assertResultsPresentInDataResponse(url,requestNode,1,"processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityName","Process task3");
  assertResultsPresentInDataResponse(url,requestNode,0);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityType","userTask");
  assertResultsPresentInDataResponse(url,requestNode,3,"processTask","processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityType","startEvent");
  assertResultsPresentInDataResponse(url,requestNode,2,"theStart");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("activityType","receiveTask");
  assertResultsPresentInDataResponse(url,requestNode,0);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("processInstanceId",processInstance.getId());
  assertResultsPresentInDataResponse(url,requestNode,3,"theStart","processTask","processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("processInstanceId",processInstance2.getId());
  assertResultsPresentInDataResponse(url,requestNode,2,"theStart","processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("processDefinitionId",processInstance.getProcessDefinitionId());
  assertResultsPresentInDataResponse(url,requestNode,5,"theStart","processTask","processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("taskAssignee","kermit");
  assertResultsPresentInDataResponse(url,requestNode,2,"processTask");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("taskAssignee","fozzie");
  assertResultsPresentInDataResponse(url,requestNode,1,"processTask2");
  requestNode=objectMapper.createObjectNode();
  requestNode.put("taskAssignee","fozzie2");
  assertResultsPresentInDataResponse(url,requestNode,0);
}
