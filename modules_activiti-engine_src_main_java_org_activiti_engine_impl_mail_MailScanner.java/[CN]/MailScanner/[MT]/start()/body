{
  if (isActive) {
    log.info("Ignoring duplicate MailScanner start invocation");
    return;
  }
 else {
    isActive=true;
    if (mailScanSchedulerThread == null) {
      mailScanSchedulerThread=new MailScanSchedulerThread(this);
    }
    if (threadPoolQueue == null) {
      threadPoolQueue=new ArrayBlockingQueue<Runnable>(queueSize);
    }
    if (threadPoolExecutor == null) {
      threadPoolExecutor=new ThreadPoolExecutor(corePoolSize,maxPoolSize,0L,TimeUnit.MILLISECONDS,threadPoolQueue);
      threadPoolExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
    }
    log.fine("MailScanner is starting the " + MailScanSchedulerThread.class.getName());
    mailScanSchedulerThread.start();
  }
}
