{
  Class<?> clazz=null;
  if (obj instanceof Class) {
    clazz=(Class<?>)obj;
  }
 else   if (obj instanceof String) {
    try {
      clazz=ReflectUtil.loadClass((String)obj);
    }
 catch (    ActivitiException ae) {
      throw new ELException(ae);
    }
  }
 else {
    throw new ELException("Class or class name is missing");
  }
  Method[] methods=clazz.getMethods();
  for (  Method m : methods) {
    int mod=m.getModifiers();
    if (Modifier.isStatic(mod) && Modifier.isPublic(mod)) {
      String name=namespace + ":" + m.getName();
      ctx.setAttribute(name,m,ScriptContext.ENGINE_SCOPE);
    }
  }
}
