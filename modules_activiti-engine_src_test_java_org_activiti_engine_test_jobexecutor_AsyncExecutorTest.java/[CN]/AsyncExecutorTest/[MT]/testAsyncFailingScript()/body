{
  final ProcessEngine processEngine=createProcessEngine(true);
  processEngine.getProcessEngineConfiguration().getClock().reset();
  deploy(processEngine,"AsyncExecutorTest.testAsyncFailingScript.bpmn20.xml");
  processEngine.getRuntimeService().startProcessInstanceByKey("asyncScript");
  processEngine.getProcessEngineConfiguration().setAsyncFailedJobWaitTime(1);
  JobTestHelper.waitForJobExecutorOnCondition(processEngine.getProcessEngineConfiguration(),10000L,2000L,new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return processEngine.getManagementService().createJobQuery().withRetriesLeft().count() == 0;
    }
  }
);
  Assert.assertEquals(0,processEngine.getTaskService().createTaskQuery().taskName("Task after script").count());
  Assert.assertEquals(1,processEngine.getManagementService().createJobQuery().count());
  Assert.assertEquals(0,processEngine.getManagementService().createJobQuery().withRetriesLeft().count());
  Assert.assertEquals(1,processEngine.getManagementService().createJobQuery().noRetriesLeft().count());
  Assert.assertEquals(1,processEngine.getManagementService().createJobQuery().withException().count());
  Assert.assertEquals(3,getAsyncExecutorJobCount(processEngine));
  cleanup(processEngine);
}
