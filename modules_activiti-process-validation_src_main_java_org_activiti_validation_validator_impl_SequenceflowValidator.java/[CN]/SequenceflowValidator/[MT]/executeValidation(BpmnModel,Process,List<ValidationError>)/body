{
  List<SequenceFlow> sequenceFlows=process.findFlowElementsOfType(SequenceFlow.class);
  for (  SequenceFlow sequenceFlow : sequenceFlows) {
    String sourceRef=sequenceFlow.getSourceRef();
    String targetRef=sequenceFlow.getTargetRef();
    if (StringUtils.isEmpty(sourceRef)) {
      addError(errors,Problems.SEQ_FLOW_INVALID_SRC,process,sequenceFlow,"Invalid source for sequenceflow");
    }
    if (StringUtils.isEmpty(targetRef)) {
      addError(errors,Problems.SEQ_FLOW_INVALID_TARGET,process,sequenceFlow,"Invalid target for sequenceflow");
    }
    FlowElement source=process.getFlowElementRecursive(sourceRef);
    FlowElement target=process.getFlowElementRecursive(targetRef);
    if (source == null) {
      addError(errors,Problems.SEQ_FLOW_INVALID_SRC,process,sequenceFlow,"Invalid source for sequenceflow");
    }
    if (target == null) {
      addError(errors,Problems.SEQ_FLOW_INVALID_TARGET,process,sequenceFlow,"Invalid target for sequenceflow");
    }
    if (source != null && target != null) {
      FlowElementsContainer sourceContainer=process.getFlowElementsContainerRecursive(source.getId());
      FlowElementsContainer targetContainer=process.getFlowElementsContainerRecursive(target.getId());
      if (sourceContainer == null) {
        addError(errors,Problems.SEQ_FLOW_INVALID_SRC,process,sequenceFlow,"Invalid source for sequenceflow");
      }
      if (targetContainer == null) {
        addError(errors,Problems.SEQ_FLOW_INVALID_TARGET,process,sequenceFlow,"Invalid target for sequenceflow");
      }
      if (sourceContainer != null && targetContainer != null && sourceContainer.equals(targetContainer) == false) {
        addError(errors,Problems.SEQ_FLOW_INVALID_TARGET,process,sequenceFlow,"Invalid target for sequenceflow, the target isn't defined in the same scope as the source");
      }
    }
  }
}
