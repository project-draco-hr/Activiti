{
  if (definitions != null) {
    return definitions;
  }
  definitions=new Definitions();
  definitions.setTargetNamespace("adhoc");
  String processName=getName().replace(" ","_");
  org.activiti.kickstart.bpmn20.model.Process process=new org.activiti.kickstart.bpmn20.model.Process();
  process.setId("adhoc_" + processName);
  process.setName(getName());
  Documentation processDocumentation=new Documentation();
  processDocumentation.setId(process.getId() + "_documentation");
  processDocumentation.setText(getDescription());
  process.getDocumentation().add(processDocumentation);
  definitions.getRootElement().add(process);
  BPMNDiagram diagram=new BPMNDiagram();
  diagram.setId(processName + "_diagram");
  definitions.getDiagram().add(diagram);
  BPMNPlane plane=new BPMNPlane();
  plane.setId(processName + "_plane");
  plane.setBpmnElement(process);
  diagram.setBPMNPlane(plane);
  StartEvent startEvent=new StartEvent();
  startEvent.setId(START_NAME);
  startEvent.setInitiator("initiator");
  process.getFlowElement().add(startEvent);
  List<List<FlowElement>> TaskBlockList=new ArrayList<List<FlowElement>>();
  int index=1;
  List<TaskBlock> taskBlocks=getTaskBlocks();
  for (  TaskBlock taskBlock : taskBlocks) {
    List<FlowElement> TaskBlock=new ArrayList<FlowElement>();
    TaskBlockList.add(TaskBlock);
    for (    BaseTaskDto baseTask : taskBlock.getTasks()) {
      FlowElement generatedTask=baseTask.createFlowElement();
      generatedTask.setId("task_" + index++);
      generatedTask.setName(baseTask.getName());
      if (baseTask.getDescription() != null) {
        Documentation taskDocumentation=new Documentation(ExpressionUtil.replaceWhiteSpaces(baseTask.getDescription()));
        taskDocumentation.setId(generatedTask.getId() + "_documentation");
        generatedTask.getDocumentation().add(taskDocumentation);
      }
      TaskBlock.add(generatedTask);
    }
  }
  AtomicInteger flowIndex=new AtomicInteger(1);
  AtomicInteger gatewayIndex=new AtomicInteger(1);
  List<FlowElement> lastFlowElementOfBlockStack=new ArrayList<FlowElement>();
  lastFlowElementOfBlockStack.add(startEvent);
  for (int i=0; i < taskBlocks.size(); i++) {
    convertTaskBlockToBpmn20(process,flowIndex,gatewayIndex,TaskBlockList.get(i),lastFlowElementOfBlockStack);
  }
  EndEvent endEvent=new EndEvent();
  endEvent.setId(END_NAME);
  process.getFlowElement().add(endEvent);
  createSequenceFlow(process,flowIndex,getLast(lastFlowElementOfBlockStack),endEvent);
  return definitions;
}
