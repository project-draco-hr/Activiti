{
  List<Resource> procDefResources=this.discoverProcessDefinitionResources(this.resourceLoader,this.activitiProperties.getProcessDefinitionLocationPrefix(),this.activitiProperties.getProcessDefinitionLocationSuffixes(),this.activitiProperties.isCheckProcessDefinitions());
  SpringProcessEngineConfiguration conf=super.processEngineConfigurationBean(procDefResources.toArray(new Resource[procDefResources.size()]),dataSource,platformTransactionManager,springAsyncExecutor);
  conf.setDeploymentName(defaultText(activitiProperties.getDeploymentName(),conf.getDeploymentName()));
  conf.setDatabaseSchema(defaultText(activitiProperties.getDatabaseSchema(),conf.getDatabaseSchema()));
  conf.setDatabaseSchemaUpdate(defaultText(activitiProperties.getDatabaseSchemaUpdate(),conf.getDatabaseSchemaUpdate()));
  conf.setDbIdentityUsed(activitiProperties.isDbIdentityUsed());
  conf.setDbHistoryUsed(activitiProperties.isDbHistoryUsed());
  conf.setJobExecutorActivate(activitiProperties.isJobExecutorActivate());
  conf.setAsyncExecutorEnabled(activitiProperties.isAsyncExecutorEnabled());
  conf.setAsyncExecutorActivate(activitiProperties.isAsyncExecutorActivate());
  conf.setMailServerHost(activitiProperties.getMailServerHost());
  conf.setMailServerPort(activitiProperties.getMailServerPort());
  conf.setMailServerUsername(activitiProperties.getMailServerUserName());
  conf.setMailServerPassword(activitiProperties.getMailServerPassword());
  conf.setMailServerDefaultFrom(activitiProperties.getMailServerDefaultFrom());
  conf.setMailServerUseSSL(activitiProperties.isMailServerUseSsl());
  conf.setMailServerUseTLS(activitiProperties.isMailServerUseTls());
  conf.setHistoryLevel(activitiProperties.getHistoryLevel());
  if (activitiProperties.getCustomMybatisMappers() != null) {
    conf.setCustomMybatisMappers(getCustomMybatisMapperClasses(activitiProperties.getCustomMybatisMappers()));
  }
  if (activitiProperties.getCustomMybatisXMLMappers() != null) {
    conf.setCustomMybatisXMLMappers(new HashSet<String>(activitiProperties.getCustomMybatisXMLMappers()));
  }
  if (processEngineConfigurationConfigurer != null) {
    processEngineConfigurationConfigurer.configure(conf);
  }
  return conf;
}
