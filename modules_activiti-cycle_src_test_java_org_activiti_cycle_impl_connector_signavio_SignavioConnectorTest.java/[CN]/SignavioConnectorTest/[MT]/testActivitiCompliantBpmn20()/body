{
  List<JsonTransformation> transformations=new ArrayList<JsonTransformation>();
  transformations.add(new BpmnPoolExtraction(BpmnPoolExtraction.DEFAULT_ENGINE_POOL_NAME));
  transformations.add(new AdjustShapeNamesTransformation());
  SignavioConnectorConfiguration conf=new SignavioConnectorConfiguration("editor-url with ending slash");
  conf.setLoginRequired(true);
  conf.setUser("user");
  conf.setPassword("xxx");
  SignavioConnector connector=(SignavioConnector)conf.createConnector();
  connector.login(conf.getUser(),conf.getPassword());
  String sourceJson=connector.getJsonResponse(conf.getModelUrl("modelId/json")).getEntity().getText();
  System.out.println(sourceJson);
  String jsonXmlBeforeTransformation=connector.transformJsonToBpmn20Xml(sourceJson);
  System.out.println("JSONXmlBeforeTransformation:\n" + jsonXmlBeforeTransformation);
  JSONObject jsonObj=new JSONObject(sourceJson);
  for (  JsonTransformation trafo : transformations) {
    jsonObj=trafo.transform(jsonObj);
    System.out.println("Transformation(" + trafo.getClass().getSimpleName() + "):\n"+ jsonObj);
  }
  System.out.println("After working transformations:\n" + jsonObj.toString());
  String processEngineBpmnXml=connector.transformJsonToBpmn20Xml(jsonObj.toString());
  System.out.println("ProcessEngineBpmnXml:\n" + processEngineBpmnXml);
}
