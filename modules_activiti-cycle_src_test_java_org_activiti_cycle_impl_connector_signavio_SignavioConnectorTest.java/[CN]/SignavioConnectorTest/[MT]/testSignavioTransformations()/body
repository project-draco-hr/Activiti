{
  List<JsonTransformation> transformations=new ArrayList<JsonTransformation>();
  transformations.add(new BpmnPoolExtraction("Process Engine"));
  transformations.add(new ExchangeSignavioUuidWithNameTransformation());
  transformations.add(new AdjustShapeNamesTransformation());
  String file="c:/Process Engine Pool.oryx.xml";
  FileInputStream fis=new FileInputStream(file);
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  DocumentBuilder db=dbf.newDocumentBuilder();
  Document document=db.parse(fis);
  fis.close();
  NodeList list=document.getElementsByTagName("json-representation");
  Node jsonNode=list.item(0);
  String sourceJson=jsonNode.getTextContent();
  System.out.println("SourceJSON:\n" + sourceJson);
  SignavioConnectorConfiguration conf=new SignavioConnectorConfiguration("http://localhost:8080/activiti-modeler/");
  SignavioConnector connector=new SignavioConnector(conf);
  String jsonXmlBeforeTransformation=connector.transformJsonToBpmn20Xml(sourceJson);
  System.out.println("JSONXmlBeforeTransformation:\n" + jsonXmlBeforeTransformation);
  JSONObject jsonObj=new JSONObject(sourceJson);
  for (  JsonTransformation trafo : transformations) {
    jsonObj=trafo.transform(jsonObj);
    System.out.println("Transformation(" + trafo.getClass().getSimpleName() + "):\n"+ jsonObj);
  }
  System.out.println("After working transformations:\n" + jsonObj.toString());
  String processEngineBpmnXml=connector.transformJsonToBpmn20Xml(jsonObj.toString());
  System.out.println("ProcessEngineBpmnXml:\n" + processEngineBpmnXml);
}
