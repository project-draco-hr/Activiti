{
  ExecutionEntity processInstance=commandContext.getExecutionManager().findExecutionById(processInstanceId);
  if (processInstance == null) {
    throw new ActivitiException("No process instance found for id = '" + processInstanceId + "'.");
  }
  ProcessDefinitionImpl currentProcessDefinitionImpl=processInstance.getProcessDefinition();
  DeploymentCache deploymentCache=Context.getProcessEngineConfiguration().getDeploymentCache();
  ProcessDefinitionEntity currentProcessDefinition;
  if (currentProcessDefinitionImpl instanceof ProcessDefinitionEntity) {
    currentProcessDefinition=(ProcessDefinitionEntity)currentProcessDefinitionImpl;
  }
 else {
    currentProcessDefinition=deploymentCache.findDeployedProcessDefinitionById(currentProcessDefinitionImpl.getId());
  }
  ProcessDefinitionEntity newProcessDefinition=deploymentCache.findDeployedProcessDefinitionById(newProcessDefinitionId);
  if (newProcessDefinition == null) {
    throw new ActivitiException("No process definition found for id = '" + newProcessDefinitionId + "'.");
  }
  if (!newProcessDefinition.getKey().equals(currentProcessDefinition.getKey())) {
    throw new ActivitiException("The key of the new process definition " + "(key = '" + newProcessDefinition.getKey() + "') "+ "is not equal to that of the process definition "+ "(key = '"+ currentProcessDefinition.getKey()+ "') "+ "currently used by the process instance "+ "(id = '"+ processInstanceId+ "').");
  }
  if (!newProcessDefinition.contains(processInstance.getActivity())) {
    throw new ActivitiException("The new process definition " + "(key = '" + newProcessDefinition.getKey() + "') "+ "does not contain the current activity "+ "(id = '"+ processInstance.getActivity().getId()+ "') "+ "of the process instance "+ "(id = '"+ processInstanceId+ "').");
  }
  processInstance.setProcessDefinition(newProcessDefinition);
  HistoricProcessInstanceManager historicProcessInstanceManager=commandContext.getHistoricProcessInstanceManager();
  if (historicProcessInstanceManager.isHistoryEnabled()) {
    HistoricProcessInstanceEntity historicProcessInstance=historicProcessInstanceManager.findHistoricProcessInstance(processInstanceId);
    historicProcessInstance.setProcessDefinitionId(newProcessDefinitionId);
  }
  return null;
}
