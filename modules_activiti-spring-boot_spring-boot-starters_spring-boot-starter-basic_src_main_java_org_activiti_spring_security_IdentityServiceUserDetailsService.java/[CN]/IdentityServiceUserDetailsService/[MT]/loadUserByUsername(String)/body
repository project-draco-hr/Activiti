{
  User user=null;
  try {
    user=this.identityService.createUserQuery().userId(userId).singleResult();
  }
 catch (  ActivitiException ex) {
  }
  if (null == user) {
    throw new UsernameNotFoundException(String.format("user (%s) could not be found",userId));
  }
  boolean active=true;
  List<GrantedAuthority> grantedAuthorityList=new ArrayList<GrantedAuthority>();
  List<Group> groupsForUser=identityService.createGroupQuery().groupMember(user.getId()).list();
  for (  Group g : groupsForUser) {
    grantedAuthorityList.add(new GroupGrantedAuthority(g));
  }
  return new org.springframework.security.core.userdetails.User(user.getId(),user.getPassword(),active,active,active,active,grantedAuthorityList);
}
