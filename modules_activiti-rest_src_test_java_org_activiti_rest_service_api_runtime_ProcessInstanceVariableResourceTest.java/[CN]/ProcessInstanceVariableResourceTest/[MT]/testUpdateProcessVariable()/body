{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess",Collections.singletonMap("overlappingVariable",(Object)"processValue"));
  runtimeService.setVariable(processInstance.getId(),"myVar","value");
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("name","myVar");
  requestNode.put("value","updatedValue");
  requestNode.put("type","string");
  HttpPut httpPut=new HttpPut(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_VARIABLE,processInstance.getId(),"myVar"));
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  CloseableHttpResponse response=executeRequest(httpPut,HttpStatus.SC_OK);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertEquals("updatedValue",responseNode.get("value").asText());
  requestNode.put("name","unexistingVariable");
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  closeResponse(executeRequest(httpPut,HttpStatus.SC_BAD_REQUEST));
  requestNode.put("name","unexistingVariable");
  httpPut=new HttpPut(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_VARIABLE,processInstance.getId(),"unexistingVariable"));
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  closeResponse(executeRequest(httpPut,HttpStatus.SC_NOT_FOUND));
}
