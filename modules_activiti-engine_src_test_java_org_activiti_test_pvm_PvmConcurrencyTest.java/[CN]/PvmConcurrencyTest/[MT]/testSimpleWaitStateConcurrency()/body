{
  ObjectProcessDefinition processDefinition=ProcessDefinitionBuilder.createProcessDefinitionBuilder().createActivity("start").initial().behavior(new Automatic()).transition("fork").endActivity().createActivity("fork").behavior(new ParallelGateway()).transition("c1").transition("c2").endActivity().createActivity("c1").behavior(new WaitState()).transition("join").endActivity().createActivity("c2").behavior(new WaitState()).transition("join").endActivity().createActivity("join").behavior(new ParallelGateway()).transition("end").endActivity().createActivity("end").behavior(new WaitState()).endActivity().build();
  ObjectProcessInstance processInstance=processDefinition.createProcessInstance();
  processInstance.start();
  ObjectExecution executionC1=processInstance.findExecution("c1");
  assertNotNull(executionC1);
  ObjectExecution executionC2=processInstance.findExecution("c2");
  assertNotNull(executionC2);
  executionC1.event(null);
  executionC2.event(null);
  List<String> activityNames=processInstance.getActivityNames();
  List<String> expectedActivityNames=new ArrayList<String>();
  expectedActivityNames.add("end");
  assertEquals(expectedActivityNames,activityNames);
}
