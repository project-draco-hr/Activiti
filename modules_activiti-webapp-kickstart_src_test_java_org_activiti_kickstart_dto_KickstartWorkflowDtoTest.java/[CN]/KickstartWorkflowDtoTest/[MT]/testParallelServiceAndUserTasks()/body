{
  KickstartWorkflowDto dto=new KickstartWorkflowDto();
  dto.setName("One Service Task Workflow");
  dto.setDescription("Simple workflow definition containing one service task");
  ServiceTaskDto task1=new ServiceTaskDto();
  task1.setId("myFirstId");
  task1.setName("My First Service task");
  task1.setDescription("Desc first Service task");
  task1.setDelegateExpression("#{myFirstDelegateExpression}");
  task1.setClassName("de.test.MyFirstClass");
  task1.setExpression("#{my.favorite.first.expression}");
  dto.addTask(task1);
  UserTaskDto task2=new UserTaskDto();
  task2.setId("mySecondId");
  task2.setName("My Second Service task");
  task2.setDescription("Desc Second Service task");
  task2.setAssignee("myAssignee");
  task2.setStartWithPrevious(true);
  dto.addTask(task2);
  Definitions def=dto.toBpmn20Xml();
  BPMNPlane bpmnPlane=def.getDiagram().get(0).getBPMNPlane();
  List<FlowElement> flowElements=((Process)bpmnPlane.getBpmnElement()).getFlowElement();
  assertEquals(12,flowElements.size());
  ServiceTask serviceTask=null;
  UserTask userTask=null;
  for (  FlowElement flowElement : flowElements) {
    if (flowElement instanceof ServiceTask) {
      serviceTask=(ServiceTask)flowElement;
    }
 else     if (flowElement instanceof UserTask) {
      userTask=(UserTask)flowElement;
    }
  }
  assertEquals("#{myFirstDelegateExpression}",serviceTask.getDelegateExpression());
  assertEquals("de.test.MyFirstClass",serviceTask.getClassName());
  assertEquals("#{my.favorite.first.expression}",serviceTask.getExpression());
  assertEquals("myAssignee",userTask.getActivityResource().get(0).getResourceAssignmentExpression().getExpression().getContent().get(0));
}
