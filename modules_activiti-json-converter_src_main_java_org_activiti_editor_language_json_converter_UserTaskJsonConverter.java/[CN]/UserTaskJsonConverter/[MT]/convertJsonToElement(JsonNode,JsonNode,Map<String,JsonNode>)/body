{
  UserTask task=new UserTask();
  task.setPriority(getPropertyValueAsString(PROPERTY_USERTASK_PRIORITY,elementNode));
  String formKey=getPropertyValueAsString(PROPERTY_FORMKEY,elementNode);
  if (StringUtils.isNotEmpty(formKey)) {
    task.setFormKey(formKey);
  }
  task.setDueDate(getPropertyValueAsString(PROPERTY_USERTASK_DUEDATE,elementNode));
  task.setCategory(getPropertyValueAsString(PROPERTY_USERTASK_CATEGORY,elementNode));
  JsonNode assignmentNode=getProperty(PROPERTY_USERTASK_ASSIGNMENT,elementNode);
  if (assignmentNode != null) {
    JsonNode assignmentDefNode=assignmentNode.get("assignment");
    if (assignmentDefNode != null) {
      JsonNode assigneeNode=assignmentDefNode.get(PROPERTY_USERTASK_ASSIGNEE);
      if (assigneeNode != null && assigneeNode.isNull() == false) {
        task.setAssignee(assigneeNode.asText());
      }
      JsonNode ownerNode=assignmentDefNode.get(PROPERTY_USERTASK_OWNER);
      if (ownerNode != null && ownerNode.isNull() == false) {
        task.setOwner(ownerNode.asText());
      }
      task.setCandidateUsers(getValueAsList(PROPERTY_USERTASK_CANDIDATE_USERS,assignmentDefNode));
      task.setCandidateGroups(getValueAsList(PROPERTY_USERTASK_CANDIDATE_GROUPS,assignmentDefNode));
    }
  }
  convertJsonToFormProperties(elementNode,task);
  return task;
}
