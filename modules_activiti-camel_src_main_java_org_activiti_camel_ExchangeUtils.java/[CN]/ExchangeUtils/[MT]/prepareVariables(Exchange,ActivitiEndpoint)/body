{
  Map<String,Object> camelVarMap=new HashMap<String,Object>();
  if (!StringUtils.isEmpty(activitiEndpoint.getCopyVariablesFromProperties()) && (!activitiEndpoint.isCopyVariablesFromPropertiesBoolean() || activitiEndpoint.CopyVariablesFromPropertiesAsBoolean())) {
    Pattern pattern=createPattern(activitiEndpoint.getCopyVariablesFromProperties(),activitiEndpoint.CopyVariablesFromPropertiesAsBoolean());
    Map<String,Object> exchangeVarMap=exchange.getProperties();
    for (    String s : exchangeVarMap.keySet()) {
      if (IGNORE_MESSAGE_PROPERTY.equalsIgnoreCase(s) == false) {
        if (pattern == null || pattern.matcher(s).matches())         camelVarMap.put(s,exchangeVarMap.get(s));
      }
    }
  }
  if (!StringUtils.isEmpty(activitiEndpoint.getCopyVariablesFromHeader()) && (!activitiEndpoint.isCopyVariablesFromHeaderBoolean() || activitiEndpoint.copyVariablesFromHeaderAsBoolean())) {
    Pattern pattern=createPattern(activitiEndpoint.getCopyVariablesFromHeader(),activitiEndpoint.copyVariablesFromHeaderAsBoolean());
    boolean isSetProcessInitiator=activitiEndpoint.isSetProcessInitiator();
    for (    Map.Entry<String,Object> header : exchange.getIn().getHeaders().entrySet()) {
      if ((!isSetProcessInitiator || activitiEndpoint.getProcessInitiatorHeaderName().equals(header.getKey())) && (pattern == null || pattern.matcher(header.getKey()).matches())) {
        camelVarMap.put(header.getKey(),header.getValue());
      }
    }
  }
  Object camelBody=null;
  if (exchange.hasOut()) {
    camelBody=exchange.getOut().getBody();
  }
 else {
    camelBody=exchange.getIn().getBody();
  }
  if (camelBody instanceof Map<?,?>) {
    Map<?,?> camelBodyMap=(Map<?,?>)camelBody;
    for (    @SuppressWarnings("rawtypes") Map.Entry e : camelBodyMap.entrySet()) {
      if (e.getKey() instanceof String) {
        camelVarMap.put((String)e.getKey(),e.getValue());
      }
    }
  }
 else {
    if (activitiEndpoint.isCopyCamelBodyToBodyAsString() && !(camelBody instanceof String)) {
      camelBody=exchange.getContext().getTypeConverter().convertTo(String.class,exchange,camelBody);
    }
    if (camelBody != null) {
      camelVarMap.put(CAMELBODY,camelBody);
    }
  }
  return camelVarMap;
}
