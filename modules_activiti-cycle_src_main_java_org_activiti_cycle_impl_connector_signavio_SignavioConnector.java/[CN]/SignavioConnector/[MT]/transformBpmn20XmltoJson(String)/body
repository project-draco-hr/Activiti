{
  File tmpfile=null;
  try {
    HttpClient client=new DefaultHttpClient();
    client.getParams().setParameter(CoreProtocolPNames.PROTOCOL_VERSION,HttpVersion.HTTP_1_1);
    String postUrl=getConfiguration().getBpmn20XmlImportServletUrl();
    HttpPost post=new HttpPost(postUrl);
    post.addHeader("token",getSecurityToken());
    MultipartEntity entity=new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);
    tmpfile=File.createTempFile(UUID.randomUUID().toString(),".xml");
    OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpfile));
    InputStream is=new ByteArrayInputStream(xml.getBytes(Charset.forName("utf-8")));
    IoUtils.copyBytes(is,os);
    os.flush();
    os.close();
    entity.addPart("bpmn2_0file",new FileBody(tmpfile));
    entity.addPart("directory",new StringBody("/directory",Charset.forName("UTF-8")));
    post.setEntity(entity);
    String response=EntityUtils.toString(client.execute(post).getEntity(),"UTF-8");
    String artifactId=response.substring(2);
    artifactId=artifactId.substring(0,artifactId.length() - 2);
    HttpGet get=new HttpGet(getConfiguration().getEditorUrl(artifactId) + "&data");
    get.addHeader("token",getSecurityToken());
    get.addHeader("User-Agent","Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13");
    response=EntityUtils.toString(client.execute(get).getEntity(),"UTF-8");
    client.getConnectionManager().shutdown();
    JSONObject jsonObj=new JSONObject(response);
    return jsonObj.getString("model");
  }
 catch (  Exception ex) {
    throw new RepositoryException("Error while transforming BPMN2_0_XML to BPMN2_0_JSON",ex);
  }
 finally {
    if (tmpfile != null) {
      tmpfile.delete();
    }
  }
}
