{
  try {
    ObjectNode requestNode=objectMapper.createObjectNode();
    requestNode.put("id","testgroup");
    requestNode.put("name","Test group");
    requestNode.put("type","Test type");
    HttpPost httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_GROUP_COLLECTION));
    httpPost.setEntity(new StringEntity(requestNode.toString()));
    HttpResponse response=executeHttpRequest(httpPost,HttpStatus.SC_CREATED);
    JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
    assertNotNull(responseNode);
    assertEquals("testgroup",responseNode.get("id").textValue());
    assertEquals("Test group",responseNode.get("name").textValue());
    assertEquals("Test type",responseNode.get("type").textValue());
    assertTrue(responseNode.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_GROUP,"testgroup")));
    assertNotNull(identityService.createGroupQuery().groupId("testgroup").singleResult());
  }
  finally {
    try {
      identityService.deleteGroup("testgroup");
    }
 catch (    Throwable t) {
    }
  }
}
