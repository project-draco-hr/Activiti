{
  if (sessionFactories == null) {
    sessionFactories=new HashMap<Class<?>,SessionFactory>();
    addSessionFactory(new DbManagementSessionFactory());
    addSessionFactory(new JobExecutorTimerSessionFactory());
    addSessionFactory(new DbHistorySessionFactory());
    JobExecutorMessageSessionFactory jobExecutorMessageSessionFactory=new JobExecutorMessageSessionFactory();
    addSessionFactory(jobExecutorMessageSessionFactory);
    dbSqlSessionFactory=new DbSqlSessionFactory();
    dbSqlSessionFactory.setDatabaseType(databaseType);
    dbSqlSessionFactory.setIdGenerator(idGenerator);
    dbSqlSessionFactory.setSqlSessionFactory(sqlSessionFactory);
    dbSqlSessionFactory.setDbIdentityUsed(isDbIdentityUsed);
    dbSqlSessionFactory.setDbHistoryUsed(isDbHistoryUsed);
    dbSqlSessionFactory.setDbCycleUsed(isDbCycleUsed);
    addSessionFactory(dbSqlSessionFactory);
    addSessionFactory(new GenericManagerFactory(DeploymentManager.class));
    addSessionFactory(new GenericManagerFactory(ResourceManager.class));
    addSessionFactory(new GenericManagerFactory(ProcessDefinitionManager.class));
    addSessionFactory(new GenericManagerFactory(ExecutionManager.class));
    addSessionFactory(new GenericManagerFactory(TaskManager.class));
    addSessionFactory(new GenericManagerFactory(IdentityLinkManager.class));
    addSessionFactory(new GenericManagerFactory(VariableInstanceManager.class));
    addSessionFactory(new GenericManagerFactory(HistoricProcessInstanceManager.class));
    addSessionFactory(new GenericManagerFactory(HistoricActivityInstanceManager.class));
    addSessionFactory(new GenericManagerFactory(HistoricTaskInstanceManager.class));
    addSessionFactory(new GenericManagerFactory(HistoricDetailManager.class));
    addSessionFactory(new GenericManagerFactory(JobManager.class));
    addSessionFactory(new GenericManagerFactory(UserManager.class));
    addSessionFactory(new GenericManagerFactory(GroupManager.class));
    addSessionFactory(new GenericManagerFactory(IdentityInfoManager.class));
    addSessionFactory(new GenericManagerFactory(MembershipManager.class));
    addSessionFactory(new GenericManagerFactory(AttachmentManager.class));
  }
  if (customSessionFactories != null) {
    for (    SessionFactory sessionFactory : customSessionFactories) {
      addSessionFactory(sessionFactory);
    }
  }
}
