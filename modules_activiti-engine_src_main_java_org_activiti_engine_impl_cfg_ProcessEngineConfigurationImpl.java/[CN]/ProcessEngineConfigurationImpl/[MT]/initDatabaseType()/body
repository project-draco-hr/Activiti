{
  InputStream stream;
  if (databaseTypeMappings == null) {
    stream=ReflectUtil.getResourceAsStream("org/activiti/db/default.type.mapping.properties");
    try {
      databaseTypeMappings=new Properties();
      databaseTypeMappings.load(stream);
    }
 catch (    Exception e) {
      throw new ActivitiException("couldn't read org/activiti/db/default.type.mapping.properties",e);
    }
 finally {
      if (stream != null) {
        try {
          stream.close();
        }
 catch (        Exception e) {
          log.log(Level.SEVERE,"problem closing stream",e);
        }
      }
    }
  }
  Connection connection=null;
  try {
    connection=dataSource.getConnection();
    DatabaseMetaData databaseMetaData=connection.getMetaData();
    String databaseProductName=databaseMetaData.getDatabaseProductName();
    log.fine("database product name: '" + databaseProductName + "'");
    databaseType=databaseTypeMappings.getProperty(databaseProductName);
    if (databaseType == null) {
      throw new ActivitiException("couldn't deduct database type from database product name '" + databaseProductName + "'");
    }
    log.fine("using database type: " + databaseType);
  }
 catch (  SQLException e) {
    e.printStackTrace();
  }
 finally {
    try {
      if (connection != null) {
        connection.close();
      }
    }
 catch (    SQLException e) {
      e.printStackTrace();
    }
  }
}
