{
  try {
    Calendar yesterday=Calendar.getInstance();
    yesterday.add(Calendar.DAY_OF_MONTH,-1);
    processEngineConfiguration.getClock().setCurrentTime(yesterday.getTime());
    Deployment firstDeployment=repositoryService.createDeployment().name("Deployment 1").category("DEF").addClasspathResource("org/activiti/rest/service/api/repository/oneTaskProcess.bpmn20.xml").deploy();
    processEngineConfiguration.getClock().setCurrentTime(Calendar.getInstance().getTime());
    Deployment secondDeployment=repositoryService.createDeployment().name("Deployment 2").category("ABC").addClasspathResource("org/activiti/rest/service/api/repository/oneTaskProcess.bpmn20.xml").deploy();
    ClientResource client=getAuthenticatedClient("deployments?sort=name&order=asc");
    Representation response=client.get();
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    JsonNode dataNode=objectMapper.readTree(response.getStream()).get("data");
    assertEquals(2L,dataNode.size());
    assertEquals(firstDeployment.getId(),dataNode.get(0).get("id").getTextValue());
    assertEquals(secondDeployment.getId(),dataNode.get(1).get("id").getTextValue());
  }
  finally {
    List<Deployment> deployments=repositoryService.createDeploymentQuery().list();
    for (    Deployment deployment : deployments) {
      repositoryService.deleteDeployment(deployment.getId(),true);
    }
  }
}
