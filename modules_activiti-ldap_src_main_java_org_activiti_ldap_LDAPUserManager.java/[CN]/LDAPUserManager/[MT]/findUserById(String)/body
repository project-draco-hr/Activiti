{
  LDAPTemplate ldapTemplate=new LDAPTemplate(ldapConfigurator);
  return ldapTemplate.execute(new LDAPCallBack<UserEntity>(){
    public UserEntity executeInContext(    InitialDirContext initialDirContext){
      try {
        String searchExpression=ldapConfigurator.getLdapQueryBuilder().buildQueryByUserId(ldapConfigurator,userId);
        NamingEnumeration<?> namingEnum=initialDirContext.search(ldapConfigurator.getBaseDn(),searchExpression,createSearchControls());
        UserEntity user=new UserEntity();
        while (namingEnum.hasMore()) {
          SearchResult result=(SearchResult)namingEnum.next();
          user.setId(userId);
          if (ldapConfigurator.getUserFirstNameAttribute() != null) {
            user.setFirstName(result.getAttributes().get(ldapConfigurator.getUserFirstNameAttribute()).get().toString());
          }
          if (ldapConfigurator.getUserLastNameAttribute() != null) {
            user.setLastName(result.getAttributes().get(ldapConfigurator.getUserLastNameAttribute()).get().toString());
          }
        }
        namingEnum.close();
        return user;
      }
 catch (      NamingException ne) {
        logger.debug("Could not find user " + userId + " : "+ ne.getMessage(),ne);
        return null;
      }
    }
  }
);
}
