{
  if (configurationClass == null) {
    throw new IllegalArgumentException("configurationClass must not be null");
  }
  if (configurationId == null) {
    throw new IllegalArgumentException("configurationId must not be null");
  }
  if (values == null) {
    throw new IllegalArgumentException("values must not be null");
  }
  String currentUserId=getCurrentUserId();
  try {
    List<RepositoryConnectorConfiguration> configurations=getConnectorConfigurations();
    RepositoryConnectorConfiguration repositoryConnectorConfiguration=null;
    for (    RepositoryConnectorConfiguration thisConfiguration : configurations) {
      if (!configurationId.equals(thisConfiguration.getConnectorId())) {
        continue;
      }
      if (!currentUserId.equals(thisConfiguration.getUserId())) {
        continue;
      }
      repositoryConnectorConfiguration=thisConfiguration;
      break;
    }
    if (repositoryConnectorConfiguration == null) {
      RepositoryConnectorConfigurationImpl newConfig=new RepositoryConnectorConfigurationImpl();
      newConfig.setUserId(currentUserId);
      newConfig.setPluginId(configurationClass);
      repositoryConnectorConfiguration=newConfig;
    }
    RepositoryConfigurationHandler.setConfigurationfields(values,repositoryConnectorConfiguration);
    cycleConfigurationDao.saveConfiguration(repositoryConnectorConfiguration);
    RuntimeConnectorList runtimeConnectorList=CycleSessionContext.get(RuntimeConnectorList.class);
    runtimeConnectorList.discardConnectors();
  }
 catch (  Exception e) {
    throw new RepositoryException("Error while storing config for user " + e.getMessage(),e);
  }
}
