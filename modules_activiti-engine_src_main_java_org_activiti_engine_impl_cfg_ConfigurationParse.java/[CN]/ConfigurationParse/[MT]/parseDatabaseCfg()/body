{
  Element databaseElement=rootElement.element("database");
  if (databaseElement != null) {
    this.databaseType=databaseElement.attribute("type");
    this.databaseSchemaStrategy=databaseElement.attribute("schema-strategy");
    Element jdbcElement=databaseElement.element("jdbc");
    if (jdbcElement != null) {
      this.isJdbcConfigured=true;
      this.jdbcUrl=jdbcElement.attribute("url");
      this.jdbcDriver=jdbcElement.attribute("driver");
      this.jdbcUsername=jdbcElement.attribute("username");
      this.jdbcPassword=jdbcElement.attribute("password");
      if (jdbcUrl == null || jdbcDriver == null || jdbcUsername == null || jdbcPassword == null) {
        addError("Invalid jdbc configuration: need to provide url, driver, username and password",jdbcElement);
      }
      this.maxActiveConnections=stringToInteger(jdbcElement,"max-active",jdbcElement.attribute("max-active"));
      this.maxIdleConnections=stringToInteger(jdbcElement,"max-idle",jdbcElement.attribute("max-idle"));
      this.maxCheckoutTime=stringToInteger(jdbcElement,"max-checkout",jdbcElement.attribute("max-checkout"));
      this.maxWaitTime=stringToInteger(jdbcElement,"max-wait",jdbcElement.attribute("max-wait"));
    }
  }
 else {
    addError("Could not find required element 'database'",rootElement);
  }
}
