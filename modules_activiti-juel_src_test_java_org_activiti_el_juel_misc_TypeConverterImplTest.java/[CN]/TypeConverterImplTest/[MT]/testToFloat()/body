{
  Number zero=Float.valueOf(0);
  Number ninetynine=Float.valueOf(99);
  assertEquals(zero,converter.coerceToFloat(null));
  assertEquals(zero,converter.coerceToFloat(""));
  assertEquals(ninetynine,converter.coerceToFloat(Character.valueOf('c')));
  assertEquals(ninetynine,converter.coerceToFloat(new Byte((byte)99)));
  assertEquals(ninetynine,converter.coerceToFloat(new Short((short)99)));
  assertEquals(ninetynine,converter.coerceToFloat(new Integer(99)));
  assertEquals(ninetynine,converter.coerceToFloat(new Long(99)));
  assertEquals(ninetynine,converter.coerceToFloat(new Float(99)));
  assertEquals(ninetynine,converter.coerceToFloat(new Double(99)));
  assertEquals(ninetynine,converter.coerceToFloat(new BigDecimal(99)));
  assertEquals(ninetynine,converter.coerceToFloat(new BigInteger("99")));
  assertEquals(ninetynine,converter.coerceToFloat(ninetynine.toString()));
  try {
    converter.coerceToFloat("foo");
    fail();
  }
 catch (  ELException e) {
  }
}
