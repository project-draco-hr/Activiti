{
  this.resolver=new OsgiClassPathStoreResourceResolver(applicationContext);
  try {
    Resource[] resources=resolver.getResources("classpath*:" + classPath + "/**/*");
    if (resources.length != 0) {
      exists=true;
    }
 else {
      resources=resolver.getResources("classpath*:" + classPath + "/*");
      if (resources.length != 0) {
        exists=true;
      }
    }
    try {
      Resource rootResource=null;
      resources=applicationContext.getResources("classpath*:" + classPath + "*");
      List<String> storeDirList=new ArrayList<String>(resources.length);
      for (      Resource resource : resources) {
        String externalForm=resource.getURL().toExternalForm();
        if (externalForm.endsWith(classPath) || externalForm.endsWith(classPath + "/")) {
          String directoryPath=resource.getFile().getAbsolutePath();
          if (resource.getFile().isDirectory() && !directoryPath.endsWith("/")) {
            directoryPath+="/";
          }
          if (new FileSystemResource(directoryPath).exists()) {
            storeDirList.add(resource.getFile().toURI().toURL().toExternalForm());
          }
        }
      }
      this.storeDirs=storeDirList.toArray(new String[storeDirList.size()]);
    }
 catch (    IOException ioErr) {
      if (logger.isDebugEnabled())       logger.debug("Unable to resolve storeDir for base path " + classPath);
    }
  }
 catch (  IOException ioe) {
    throw new WebScriptException("Failed to initialise Web Script Store classpath: " + classPath,ioe);
  }
  if (!exists && mustExist) {
    throw new WebScriptException("Web Script Store classpath:" + classPath + " must exist; it was not found");
  }
}
