{
  if (flowElement instanceof SubProcess) {
    SubProcess subProcess=(SubProcess)flowElement;
    xtw.writeStartElement(ELEMENT_SUBPROCESS);
    xtw.writeAttribute(ATTRIBUTE_ID,subProcess.getId());
    if (StringUtils.isNotEmpty(subProcess.getName())) {
      xtw.writeAttribute(ATTRIBUTE_NAME,subProcess.getName());
    }
 else {
      xtw.writeAttribute(ATTRIBUTE_NAME,"subProcess");
    }
    if (subProcess instanceof EventSubProcess) {
      xtw.writeAttribute(ATTRIBUTE_TRIGGERED_BY,ATTRIBUTE_VALUE_TRUE);
    }
    if (StringUtils.isNotEmpty(subProcess.getDocumentation())) {
      xtw.writeStartElement(ELEMENT_DOCUMENTATION);
      xtw.writeCharacters(subProcess.getDocumentation());
      xtw.writeEndElement();
    }
    boolean didWriteExtensionStartElement=ActivitiListenerExport.writeListeners(subProcess,false,xtw);
    didWriteExtensionStartElement=BpmnXMLUtil.writeExtensionElements(subProcess,didWriteExtensionStartElement,xtw);
    if (didWriteExtensionStartElement) {
      xtw.writeEndElement();
    }
    MultiInstanceExport.writeMultiInstance(subProcess,xtw);
    for (    FlowElement subElement : subProcess.getFlowElements()) {
      createXML(subElement,model,xtw);
    }
    for (    Artifact artifact : subProcess.getArtifacts()) {
      createXML(artifact,model,xtw);
    }
    xtw.writeEndElement();
  }
 else {
    BaseBpmnXMLConverter converter=convertersToXMLMap.get(flowElement.getClass());
    if (converter == null) {
      throw new XMLException("No converter for " + flowElement.getClass() + " found");
    }
    converter.convertToXML(xtw,flowElement,model);
  }
}
