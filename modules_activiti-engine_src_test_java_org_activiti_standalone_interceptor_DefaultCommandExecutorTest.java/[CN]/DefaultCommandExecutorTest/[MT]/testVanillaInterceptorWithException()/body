{
  CommandContextFactory commandContextFactory=mock(CommandContextFactory.class);
  CommandContext commandContext=mock(CommandContext.class);
  DefaultCommandExecutor chain=new DefaultCommandExecutor();
  chain.setCommandContextFactory(commandContextFactory);
  Command<String> command=new Command<String>(){
    public String execute(    CommandContext commandContext){
      return builder.append("c").toString();
    }
  }
;
  when(commandContextFactory.createCommandContext(command)).thenReturn(commandContext);
  chain.addCommandInterceptor(new CommandInterceptor(){
    public <T>T invoke(    CommandExecutor next,    Command<T> command){
      builder.append("a");
      throw new RuntimeException("Planned failure");
    }
  }
);
  expectedException.expect(RuntimeException.class);
  expectedException.expectMessage("Planned failure");
  String result=null;
  try {
    result=chain.execute(command);
  }
  finally {
    assertEquals(null,result);
    assertEquals("a",builder.toString());
  }
}
