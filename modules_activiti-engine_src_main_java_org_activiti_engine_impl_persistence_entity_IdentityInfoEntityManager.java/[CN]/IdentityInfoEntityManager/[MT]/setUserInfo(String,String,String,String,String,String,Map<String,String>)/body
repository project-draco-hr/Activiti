{
  byte[] storedPassword=null;
  if (accountPassword != null) {
    storedPassword=encryptPassword(accountPassword,userPassword);
  }
  IdentityInfoEntity identityInfoEntity=findUserInfoByUserIdAndKey(userId,key);
  if (identityInfoEntity != null) {
    identityInfoEntity.setValue(value);
    identityInfoEntity.setPasswordBytes(storedPassword);
    if (accountDetails == null) {
      accountDetails=new HashMap<String,String>();
    }
    Set<String> newKeys=new HashSet<String>(accountDetails.keySet());
    List<IdentityInfoEntity> identityInfoDetails=findIdentityInfoDetails(identityInfoEntity.getId());
    for (    IdentityInfoEntity identityInfoDetail : identityInfoDetails) {
      String detailKey=identityInfoDetail.getKey();
      newKeys.remove(detailKey);
      String newDetailValue=accountDetails.get(detailKey);
      if (newDetailValue == null) {
        deleteIdentityInfo(identityInfoDetail);
      }
 else {
        identityInfoDetail.setValue(newDetailValue);
      }
    }
    insertAccountDetails(identityInfoEntity,accountDetails,newKeys);
  }
 else {
    identityInfoEntity=new IdentityInfoEntity();
    identityInfoEntity.setUserId(userId);
    identityInfoEntity.setType(type);
    identityInfoEntity.setKey(key);
    identityInfoEntity.setValue(value);
    identityInfoEntity.setPasswordBytes(storedPassword);
    getDbSqlSession().insert(identityInfoEntity);
    if (accountDetails != null) {
      insertAccountDetails(identityInfoEntity,accountDetails,accountDetails.keySet());
    }
  }
}
