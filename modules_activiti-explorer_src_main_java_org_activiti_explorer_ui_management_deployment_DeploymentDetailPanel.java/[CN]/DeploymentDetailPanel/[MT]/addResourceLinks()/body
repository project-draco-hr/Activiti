{
  List<String> resourceNames=repositoryService.getDeploymentResourceNames(deployment.getId());
  Collections.sort(resourceNames);
  if (!resourceNames.isEmpty()) {
    Label resourceHeader=new Label(i18nManager.getMessage(Messages.DEPLOYMENT_HEADER_RESOURCES));
    resourceHeader.setWidth("95%");
    resourceHeader.addStyleName(ExplorerLayout.STYLE_H3);
    resourceHeader.addStyleName(ExplorerLayout.STYLE_DETAIL_BLOCK);
    addDetailComponent(resourceHeader);
    VerticalLayout resourceLinksLayout=new VerticalLayout();
    resourceLinksLayout.setSpacing(true);
    resourceLinksLayout.setMargin(true,false,false,false);
    addDetailComponent(resourceLinksLayout);
    for (    final String resourceName : resourceNames) {
      StreamResource.StreamSource streamSource=new StreamSource(){
        public InputStream getStream(){
          return repositoryService.getResourceAsStream(deployment.getId(),resourceName);
        }
      }
;
      Link resourceLink=new Link(resourceName,new StreamResource(streamSource,resourceName,ExplorerApp.get()));
      resourceLinksLayout.addComponent(resourceLink);
    }
  }
}
