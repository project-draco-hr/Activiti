{
  listener=new ActivitiListener();
  if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_CLASS))) {
    listener.setImplementation(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_CLASS));
    listener.setImplementationType(ImplementationType.IMPLEMENTATION_TYPE_CLASS);
  }
 else   if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_EXPRESSION))) {
    listener.setImplementation(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_EXPRESSION));
    listener.setImplementationType(ImplementationType.IMPLEMENTATION_TYPE_EXPRESSION);
  }
 else   if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_DELEGATEEXPRESSION))) {
    listener.setImplementation(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_DELEGATEEXPRESSION));
    listener.setImplementationType(ImplementationType.IMPLEMENTATION_TYPE_DELEGATEEXPRESSION);
  }
 else {
    model.addProblem("Element 'class' or 'expression' is mandatory on executionListener",xtr);
  }
  listener.setEvent(xtr.getAttributeValue(null,ATTRIBUTE_LISTENER_EVENT));
  parseChildElements(xtr,listener,model,new FieldExtensionParser());
}
