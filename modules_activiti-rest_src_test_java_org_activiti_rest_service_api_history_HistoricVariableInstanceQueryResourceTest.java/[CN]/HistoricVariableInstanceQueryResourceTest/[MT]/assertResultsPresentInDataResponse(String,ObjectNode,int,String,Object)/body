{
  HttpPost httpPost=new HttpPost(SERVER_URL_PREFIX + url);
  httpPost.setEntity(new StringEntity(body.toString()));
  CloseableHttpResponse response=executeRequest(httpPost,HttpStatus.SC_OK);
  JsonNode dataNode=objectMapper.readTree(response.getEntity().getContent()).get("data");
  closeResponse(response);
  assertEquals(numberOfResultsExpected,dataNode.size());
  if (variableName != null) {
    boolean variableFound=false;
    Iterator<JsonNode> it=dataNode.iterator();
    while (it.hasNext()) {
      JsonNode dataElementNode=it.next();
      JsonNode variableNode=dataElementNode.get("variable");
      String name=variableNode.get("name").textValue();
      if (variableName.equals(name)) {
        variableFound=true;
        if (variableValue instanceof Boolean) {
          assertTrue("Variable value is not equal",variableNode.get("value").asBoolean() == (Boolean)variableValue);
        }
 else         if (variableValue instanceof Integer) {
          assertTrue("Variable value is not equal",variableNode.get("value").asInt() == (Integer)variableValue);
        }
 else {
          assertTrue("Variable value is not equal",variableNode.get("value").asText().equals((String)variableValue));
        }
      }
    }
    assertTrue("Variable " + variableName + " is missing",variableFound);
  }
}
