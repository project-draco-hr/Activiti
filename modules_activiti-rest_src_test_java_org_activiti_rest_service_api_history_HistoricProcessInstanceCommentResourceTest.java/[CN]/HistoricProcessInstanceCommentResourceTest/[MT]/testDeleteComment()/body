{
  ProcessInstance pi=null;
  try {
    pi=runtimeService.startProcessInstanceByKey("oneTaskProcess");
    identityService.setAuthenticatedUserId("kermit");
    Comment comment=taskService.addComment(null,pi.getId(),"This is a comment...");
    identityService.setAuthenticatedUserId(null);
    executeHttpRequest(new HttpDelete(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_HISTORIC_PROCESS_INSTANCE_COMMENT,pi.getId(),comment.getId())),HttpStatus.SC_NO_CONTENT);
    executeHttpRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_HISTORIC_PROCESS_INSTANCE_COMMENT,"unexistinginstance","123")),HttpStatus.SC_NOT_FOUND);
    executeHttpRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_HISTORIC_PROCESS_INSTANCE_COMMENT,pi.getId(),"unexistingcomment")),HttpStatus.SC_NOT_FOUND);
  }
  finally {
    if (pi != null) {
      List<Comment> comments=taskService.getProcessInstanceComments(pi.getId());
      for (      Comment c : comments) {
        taskService.deleteComment(c.getId());
      }
    }
  }
}
