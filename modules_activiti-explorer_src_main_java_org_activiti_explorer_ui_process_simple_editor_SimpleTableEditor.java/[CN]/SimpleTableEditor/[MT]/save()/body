{
  WorkflowDefinition workflowDefinition=createWorkflow();
  final ProcessEngineImpl defaultProcessEngine=(ProcessEngineImpl)ProcessEngines.getDefaultProcessEngine();
  RepositoryService repositoryService=defaultProcessEngine.getRepositoryService();
  ProcessDiagramGenerator diagramGenerator=defaultProcessEngine.getProcessEngineConfiguration().getProcessDiagramGenerator();
  Model model=null;
  if (modelId == null) {
    model=repositoryService.newModel();
  }
 else {
    model=repositoryService.getModel(modelId);
  }
  model.setName(workflowDefinition.getName());
  model.setCategory(SimpleTableEditorConstants.TABLE_EDITOR_CATEGORY);
  repositoryService.saveModel(model);
  WorkflowDefinitionConversion conversion=ExplorerApp.get().getWorkflowDefinitionConversionFactory().createWorkflowDefinitionConversion(workflowDefinition);
  conversion.convert();
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ExplorerApp.get().getSimpleWorkflowJsonConverter().writeWorkflowDefinition(workflowDefinition,new OutputStreamWriter(baos));
    repositoryService.addModelEditorSource(model.getId(),baos.toByteArray());
    repositoryService.addModelEditorSourceExtra(model.getId(),IOUtils.toByteArray(diagramGenerator.generatePngDiagram(conversion.getBpmnModel())));
  }
 catch (  IOException e) {
    logger.warn("Could not generate process image. Image is not stored and will not be shown.",e);
  }
  ExplorerApp.get().getViewManager().showEditorProcessDefinitionPage(model.getId());
}
