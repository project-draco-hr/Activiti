{
  KickstartWorkflowDto dto=createSimpleEmailTaskWorkflow();
  KickstartServiceImpl service=new KickstartServiceImpl(processEngine);
  String deploymentId=service.deployKickstartWorkflow(dto);
  String pid=getDeployedProcessDefinitionId(deploymentId);
  KickstartWorkflowDto deployedDto=service.findKickstartWorkflowById(pid);
  assertEquals(dto.getName(),deployedDto.getName());
  assertEquals(dto.getDescription(),deployedDto.getDescription());
  assertTrue("Task should be a MailTaskDto",deployedDto.getTasks().get(0) instanceof MailTaskDto);
  MailTaskDto task=(MailTaskDto)deployedDto.getTasks().get(0);
  assertEquals("task_1",task.getId());
  assertEquals("test@mycompany.com",task.getTo().getStringValue());
  assertEquals("My text content",task.getText().getStringValue());
  assertEquals(null,task.getFrom().getStringValue());
  assertEquals(null,task.getFrom().getExpression());
  assertEquals(null,task.getSubject().getStringValue());
  assertEquals(null,task.getSubject().getExpression());
  assertEquals(null,task.getCc().getStringValue());
  assertEquals(null,task.getCc().getExpression());
  assertEquals(null,task.getBcc().getStringValue());
  assertEquals(null,task.getBcc().getExpression());
  assertEquals(null,task.getHtml().getStringValue());
  assertEquals(null,task.getHtml().getExpression());
}
