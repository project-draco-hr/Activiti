{
  Execution signalExecution=runtimeService.startProcessInstanceByKey("processOne");
  assertNotNull(signalExecution);
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("action","signalEventReceived");
  requestNode.put("signalName","unexisting");
  Execution waitingExecution=runtimeService.createExecutionQuery().activityId("waitState").singleResult();
  assertNotNull(waitingExecution);
  HttpPut httpPut=new HttpPut(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION,waitingExecution.getId()));
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPut,HttpStatus.SC_INTERNAL_SERVER_ERROR);
  requestNode.put("signalName","alert");
  httpPut.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPut,HttpStatus.SC_NO_CONTENT);
  waitingExecution=runtimeService.createExecutionQuery().activityId("anotherWaitState").singleResult();
  assertNotNull(waitingExecution);
  assertEquals(signalExecution.getId(),waitingExecution.getId());
}
