{
  List<EventSubProcess> eventSubprocesses=process.findFlowElementsOfType(EventSubProcess.class);
  for (  EventSubProcess eventSubprocess : eventSubprocesses) {
    List<StartEvent> startEvents=process.findFlowElementsInSubProcessOfType(eventSubprocess,StartEvent.class);
    for (    StartEvent startEvent : startEvents) {
      if (startEvent.getEventDefinitions() != null && !startEvent.getEventDefinitions().isEmpty()) {
        EventDefinition eventDefinition=startEvent.getEventDefinitions().get(0);
        if (!(eventDefinition instanceof org.activiti.bpmn.model.ErrorEventDefinition) && !(eventDefinition instanceof MessageEventDefinition) && !(eventDefinition instanceof SignalEventDefinition)) {
          addError(errors,Problems.EVENT_SUBPROCESS_INVALID_START_EVENT_DEFINITION,process,eventSubprocess,"start event of event subprocess must be of type 'error', 'message' or 'signal'");
        }
      }
    }
  }
}
