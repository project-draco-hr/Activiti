{
  processImageContainer=new VerticalLayout();
  Label processTitle=new Label(i18nManager.getMessage(Messages.PROCESS_HEADER_DIAGRAM));
  processTitle.addStyleName(ExplorerLayout.STYLE_H3);
  processImageContainer.addComponent(processTitle);
  StreamSource streamSource=null;
  byte[] editorSourceExtra=repositoryService.getModelEditorSourceExtra(modelData.getId());
  if (editorSourceExtra != null) {
    InputStream svgStream=new ByteArrayInputStream(editorSourceExtra);
    TranscoderInput input=new TranscoderInput(svgStream);
    PNGTranscoder transcoder=new PNGTranscoder();
    try {
      ByteArrayOutputStream outStream=new ByteArrayOutputStream();
      TranscoderOutput output=new TranscoderOutput(outStream);
      transcoder.transcode(input,output);
      final byte[] result=outStream.toByteArray();
      outStream.close();
      streamSource=new StreamSource(){
        private static final long serialVersionUID=1L;
        public InputStream getStream(){
          InputStream inStream=null;
          if (result != null) {
            try {
              inStream=new ByteArrayInputStream(result);
            }
 catch (            Exception e) {
              LOGGER.warn("Error reading PNG in StreamSource",e);
            }
          }
          return inStream;
        }
      }
;
    }
 catch (    Exception e) {
      LOGGER.warn("Error transforming SVG to PNG",e);
    }
  }
  if (streamSource != null) {
    Embedded embedded=new Embedded(null,new ImageStreamSource(streamSource,ExplorerApp.get()));
    embedded.setType(Embedded.TYPE_IMAGE);
    embedded.setSizeUndefined();
    Panel imagePanel=new Panel();
    imagePanel.addStyleName(Reindeer.PANEL_LIGHT);
    imagePanel.setWidth(100,UNITS_PERCENTAGE);
    imagePanel.setHeight(700,UNITS_PIXELS);
    HorizontalLayout panelLayout=new HorizontalLayout();
    panelLayout.setSizeUndefined();
    imagePanel.setContent(panelLayout);
    imagePanel.addComponent(embedded);
    processImageContainer.addComponent(imagePanel);
  }
 else {
    Label noImageAvailable=new Label(i18nManager.getMessage(Messages.PROCESS_NO_DIAGRAM));
    processImageContainer.addComponent(noImageAvailable);
  }
  addComponent(processImageContainer);
}
