{
  processImageContainer=new VerticalLayout();
  Label processTitle=new Label(i18nManager.getMessage(Messages.PROCESS_HEADER_DIAGRAM));
  processTitle.addStyleName(ExplorerLayout.STYLE_H3);
  processImageContainer.addComponent(processTitle);
  StreamSource streamSource=null;
  final byte[] editorSourceExtra=repositoryService.getModelEditorSourceExtra(modelData.getId());
  if (editorSourceExtra != null) {
    streamSource=new StreamSource(){
      private static final long serialVersionUID=1L;
      public InputStream getStream(){
        InputStream inStream=null;
        try {
          inStream=new ByteArrayInputStream(editorSourceExtra);
        }
 catch (        Exception e) {
          LOGGER.warn("Error reading PNG in StreamSource",e);
        }
        return inStream;
      }
    }
;
  }
  if (streamSource != null) {
    Embedded embedded=new Embedded(null,new ImageStreamSource(streamSource,ExplorerApp.get()));
    embedded.setType(Embedded.TYPE_IMAGE);
    embedded.setSizeUndefined();
    Panel imagePanel=new Panel();
    imagePanel.addStyleName(Reindeer.PANEL_LIGHT);
    imagePanel.setWidth(100,UNITS_PERCENTAGE);
    imagePanel.setHeight(700,UNITS_PIXELS);
    HorizontalLayout panelLayout=new HorizontalLayout();
    panelLayout.setSizeUndefined();
    imagePanel.setContent(panelLayout);
    imagePanel.addComponent(embedded);
    processImageContainer.addComponent(imagePanel);
  }
 else {
    Label noImageAvailable=new Label(i18nManager.getMessage(Messages.PROCESS_NO_DIAGRAM));
    processImageContainer.addComponent(noImageAvailable);
  }
  addComponent(processImageContainer);
}
