{
  try {
    HttpPost httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_DEPLOYMENT_COLLECTION));
    httpPost.setEntity(HttpMultipartHelper.getMultiPartEntity("oneTaskProcess.bpmn20.xml","application/xml",ReflectUtil.getResourceAsStream("org/activiti/rest/service/api/repository/oneTaskProcess.bpmn20.xml"),null));
    CloseableHttpResponse response=executeBinaryRequest(httpPost,HttpStatus.SC_CREATED);
    JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
    closeResponse(response);
    String deploymentId=responseNode.get("id").textValue();
    String name=responseNode.get("name").textValue();
    String category=responseNode.get("category").textValue();
    String deployTime=responseNode.get("deploymentTime").textValue();
    String url=responseNode.get("url").textValue();
    String tenantId=responseNode.get("tenantId").textValue();
    assertEquals("",tenantId);
    assertNotNull(deploymentId);
    assertEquals(1L,repositoryService.createDeploymentQuery().deploymentId(deploymentId).count());
    assertNotNull(name);
    assertEquals("oneTaskProcess.bpmn20.xml",name);
    assertNotNull(url);
    assertTrue(url.endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_DEPLOYMENT,deploymentId)));
    assertNull(category);
    assertNotNull(deployTime);
    List<String> resources=repositoryService.getDeploymentResourceNames(deploymentId);
    assertEquals(1L,resources.size());
    assertEquals("oneTaskProcess.bpmn20.xml",resources.get(0));
    assertEquals(1L,repositoryService.createProcessDefinitionQuery().deploymentId(deploymentId).count());
  }
  finally {
    List<Deployment> deployments=repositoryService.createDeploymentQuery().list();
    for (    Deployment deployment : deployments) {
      repositoryService.deleteDeployment(deployment.getId(),true);
    }
  }
}
