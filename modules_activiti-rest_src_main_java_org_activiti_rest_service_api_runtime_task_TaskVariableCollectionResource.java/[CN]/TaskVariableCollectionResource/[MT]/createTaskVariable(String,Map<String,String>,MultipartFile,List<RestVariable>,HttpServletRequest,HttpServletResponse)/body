{
  Task task=getTaskFromRequest(taskId);
  String serverRootUrl=request.getRequestURL().toString();
  serverRootUrl=serverRootUrl.substring(0,serverRootUrl.indexOf("/runtime/tasks/"));
  Object result=null;
  if (file != null) {
    result=setBinaryVariable(file,allRequestParams,task,true,serverRootUrl);
  }
 else {
    List<RestVariable> variables=new ArrayList<RestVariable>();
    result=variables;
    if (restVariables == null || restVariables.size() == 0) {
      throw new ActivitiIllegalArgumentException("Request didn't contain a list of variables to create.");
    }
    RestVariableScope sharedScope=null;
    RestVariableScope varScope=null;
    Map<String,Object> variablesToSet=new HashMap<String,Object>();
    for (    RestVariable var : restVariables) {
      varScope=var.getVariableScope();
      if (var.getName() == null) {
        throw new ActivitiIllegalArgumentException("Variable name is required");
      }
      if (varScope == null) {
        varScope=RestVariableScope.LOCAL;
      }
      if (sharedScope == null) {
        sharedScope=varScope;
      }
      if (varScope != sharedScope) {
        throw new ActivitiIllegalArgumentException("Only allowed to update multiple variables in the same scope.");
      }
      if (hasVariableOnScope(task,var.getName(),varScope)) {
        throw new ActivitiException("Variable '" + var.getName() + "' is already present on task '"+ task.getId()+ "'.");
      }
      Object actualVariableValue=restResponseFactory.getVariableValue(var);
      variablesToSet.put(var.getName(),actualVariableValue);
      variables.add(restResponseFactory.createRestVariable(var.getName(),actualVariableValue,varScope,task.getId(),RestResponseFactory.VARIABLE_TASK,false,serverRootUrl));
    }
    if (!variablesToSet.isEmpty()) {
      if (sharedScope == RestVariableScope.LOCAL) {
        taskService.setVariablesLocal(task.getId(),variablesToSet);
      }
 else {
        if (task.getExecutionId() != null) {
          runtimeService.setVariables(task.getExecutionId(),variablesToSet);
        }
 else {
          throw new ActivitiIllegalArgumentException("Cannot set global variables on task '" + task.getId() + "', task is not part of process.");
        }
      }
    }
  }
  response.setStatus(HttpStatus.SC_CREATED);
  return result;
}
