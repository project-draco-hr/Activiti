{
  xtw.writeStartElement(ELEMENT_PROCESS);
  xtw.writeAttribute(ATTRIBUTE_ID,process.getId());
  if (StringUtils.isNotEmpty(process.getName())) {
    xtw.writeAttribute(ATTRIBUTE_NAME,process.getName());
  }
  xtw.writeAttribute(ATTRIBUTE_PROCESS_EXECUTABLE,Boolean.toString(process.isExecutable()));
  if (process.getCandidateStarterUsers().size() > 0) {
    xtw.writeAttribute(ACTIVITI_EXTENSIONS_PREFIX,ACTIVITI_EXTENSIONS_NAMESPACE,ATTRIBUTE_PROCESS_CANDIDATE_USERS,BpmnXMLUtil.convertToDelimitedString(process.getCandidateStarterUsers()));
  }
  if (process.getCandidateStarterGroups().size() > 0) {
    xtw.writeAttribute(ACTIVITI_EXTENSIONS_PREFIX,ACTIVITI_EXTENSIONS_NAMESPACE,ATTRIBUTE_PROCESS_CANDIDATE_GROUPS,BpmnXMLUtil.convertToDelimitedString(process.getCandidateStarterGroups()));
  }
  BpmnXMLUtil.writeAttribute(process.getAttributes().values(),xtw,defaultAttributes);
  if (StringUtils.isNotEmpty(process.getDocumentation())) {
    xtw.writeStartElement(ELEMENT_DOCUMENTATION);
    xtw.writeCharacters(process.getDocumentation());
    xtw.writeEndElement();
  }
  boolean didWriteExtensionStartElement=ActivitiListenerExport.writeListeners(process,false,xtw);
  didWriteExtensionStartElement=BpmnXMLUtil.writeExtensionElements(process,didWriteExtensionStartElement,xtw);
  if (didWriteExtensionStartElement) {
    xtw.writeEndElement();
  }
  LaneExport.writeLanes(process,xtw);
}
