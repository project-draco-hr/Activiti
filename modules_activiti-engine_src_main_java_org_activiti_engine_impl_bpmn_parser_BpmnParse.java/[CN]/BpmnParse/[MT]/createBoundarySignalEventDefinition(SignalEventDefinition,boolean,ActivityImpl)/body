{
  signalActivity.setProperty("type","boundarySignal");
  if (bpmnModel.containsSignalId(signalEventDefinition.getSignalRef())) {
    String signalName=bpmnModel.getSignal(signalEventDefinition.getSignalRef()).getName();
    if (StringUtils.isEmpty(signalName)) {
      bpmnModel.addProblem("signalName is required for a signal event",signalEventDefinition);
    }
    signalEventDefinition.setSignalRef(signalName);
  }
  EventSubscriptionDeclaration signalDefinition=new EventSubscriptionDeclaration(signalEventDefinition.getSignalRef(),"signal");
  signalDefinition.setActivityId(signalActivity.getId());
  addEventSubscriptionDeclaration(signalDefinition,signalEventDefinition,signalActivity.getParent());
  if (signalActivity.getParent() instanceof ActivityImpl) {
    ((ActivityImpl)signalActivity.getParent()).setScope(true);
  }
  for (  BpmnParseListener parseListener : parseListeners) {
    parseListener.parseBoundarySignalEventDefinition(signalEventDefinition,interrupting,signalActivity);
  }
}
