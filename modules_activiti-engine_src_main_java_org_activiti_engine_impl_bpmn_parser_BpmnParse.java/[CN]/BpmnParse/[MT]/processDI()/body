{
  if (bpmnModel.getLocationMap().size() > 0) {
    for (    String bpmnReference : bpmnModel.getLocationMap().keySet()) {
      if (bpmnModel.getFlowElement(bpmnReference) == null) {
        if (bpmnModel.getArtifact(bpmnReference) == null) {
          if (bpmnModel.getPool(bpmnReference) == null && bpmnModel.getLane(bpmnReference) == null) {
            LOGGER.warn("Invalid reference in diagram interchange definition: could not find " + bpmnReference);
          }
        }
      }
 else       if (!(bpmnModel.getFlowElement(bpmnReference) instanceof FlowNode)) {
        LOGGER.warn("Invalid reference in diagram interchange definition: " + bpmnReference + " does not reference a flow node");
      }
    }
    for (    String bpmnReference : bpmnModel.getFlowLocationMap().keySet()) {
      if (bpmnModel.getFlowElement(bpmnReference) == null) {
        if (bpmnModel.getArtifact(bpmnReference) == null) {
          LOGGER.warn("Invalid reference in diagram interchange definition: could not find " + bpmnReference);
        }
      }
 else       if (!(bpmnModel.getFlowElement(bpmnReference) instanceof SequenceFlow)) {
        LOGGER.warn("Invalid reference in diagram interchange definition: " + bpmnReference + " does not reference a sequence flow");
      }
    }
    for (    Process process : bpmnModel.getProcesses()) {
      if (!process.isExecutable()) {
        continue;
      }
      ProcessDefinitionEntity processDefinition=getProcessDefinition(process.getId());
      if (processDefinition != null) {
        processDefinition.setGraphicalNotationDefined(true);
        for (        String shapeId : bpmnModel.getLocationMap().keySet()) {
          if (processDefinition.findActivity(shapeId) != null) {
            createBPMNShape(shapeId,bpmnModel.getGraphicInfo(shapeId),processDefinition);
          }
        }
        for (        String edgeId : bpmnModel.getFlowLocationMap().keySet()) {
          if (bpmnModel.getFlowElement(edgeId) != null) {
            createBPMNEdge(edgeId,bpmnModel.getFlowLocationGraphicInfo(edgeId));
          }
        }
      }
    }
  }
}
