{
  String assignee=taskElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,ASSIGNEE_EXTENSION);
  if (assignee != null) {
    if (taskDefinition.getAssigneeExpression() == null) {
      taskDefinition.setAssigneeExpression(expressionManager.createExpression(assignee));
    }
 else {
      addError("Invalid usage: duplicate assignee declaration for task " + taskDefinition.getNameExpression(),taskElement);
    }
  }
  String candidateUsersString=taskElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,CANDIDATE_USERS_EXTENSION);
  if (candidateUsersString != null) {
    String[] candidateUsers=candidateUsersString.split(",");
    for (    String candidateUser : candidateUsers) {
      taskDefinition.addCandidateUserIdExpression(expressionManager.createExpression(candidateUser.trim()));
    }
  }
  String candidateGroupsString=taskElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,CANDIDATE_GROUPS_EXTENSION);
  if (candidateGroupsString != null) {
    String[] candidateGroups=candidateGroupsString.split(",");
    for (    String candidateGroup : candidateGroups) {
      taskDefinition.addCandidateGroupIdExpression(expressionManager.createExpression(candidateGroup.trim()));
    }
  }
}
