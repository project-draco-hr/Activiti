{
  ActivityImpl activity=createActivityOnScope(eventBasedGwElement,scope);
  activity.setActivityBehavior(new EventBasedGatewayActivityBehavior());
  activity.setScope(true);
  parseExecutionListenersOnScope(eventBasedGwElement,activity);
  for (  BpmnParseListener parseListener : parseListeners) {
    parseListener.parseEventBasedGateway(eventBasedGwElement,scope,activity);
  }
  List<Element> sequenceFlows=parentElement.elements("sequenceFlow");
  Map<String,Element> siblingsMap=new HashMap<String,Element>();
  List<Element> siblings=parentElement.elements();
  for (  Element sibling : siblings) {
    siblingsMap.put(sibling.attribute("id"),sibling);
  }
  for (  Element sequenceFlow : sequenceFlows) {
    String sourceRef=sequenceFlow.attribute("sourceRef");
    String targetRef=sequenceFlow.attribute("targetRef");
    if (activity.getId().equals(sourceRef)) {
      Element sibling=siblingsMap.get(targetRef);
      if (sibling != null) {
        if (sibling.getTagName().equals("intermediateCatchEvent")) {
          parseIntermediateCatchEvent(sibling,activity,true);
        }
 else {
          addError("Event based gateway can only be connected to elements of type intermediateCatchEvent",sibling);
        }
      }
    }
  }
  return activity;
}
