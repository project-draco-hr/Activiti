{
  ProcessDefinitionEntity processDefinition=new ProcessDefinitionEntity();
  processDefinition.setKey(process.getId());
  processDefinition.setName(process.getName());
  processDefinition.setCategory(bpmnModel.getTargetNamespace());
  processDefinition.setDescription(process.getDocumentation());
  processDefinition.setProperty(PROPERTYNAME_DOCUMENTATION,process.getDocumentation());
  processDefinition.setTaskDefinitions(new HashMap<String,TaskDefinition>());
  processDefinition.setDeploymentId(deployment.getId());
  createExecutionListenersOnScope(process.getExecutionListeners(),processDefinition);
  for (  String candidateUser : process.getCandidateStarterUsers()) {
    processDefinition.addCandidateStarterUserIdExpression(expressionManager.createExpression(candidateUser));
  }
  for (  String candidateGroup : process.getCandidateStarterGroups()) {
    processDefinition.addCandidateStarterGroupIdExpression(expressionManager.createExpression(candidateGroup));
  }
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug("Parsing process {}",processDefinition.getKey());
  }
  processFlowElements(process.getFlowElements(),processDefinition,null);
  processArtifacts(process.getArtifacts(),processDefinition);
  if (process.getIoSpecification() != null) {
    IOSpecification ioSpecification=createIOSpecification(process.getIoSpecification());
    processDefinition.setIoSpecification(ioSpecification);
  }
  for (  BpmnParseListener parseListener : parseListeners) {
    parseListener.parseProcess(process,processDefinition);
  }
  return processDefinition;
}
