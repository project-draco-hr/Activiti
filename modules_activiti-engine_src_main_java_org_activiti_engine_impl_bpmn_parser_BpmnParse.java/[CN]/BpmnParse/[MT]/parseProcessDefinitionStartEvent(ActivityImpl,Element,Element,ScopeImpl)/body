{
  ProcessDefinitionEntity processDefinition=(ProcessDefinitionEntity)scope;
  String initiatorVariableName=startEventElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,"initiator");
  if (initiatorVariableName != null) {
    processDefinition.setProperty(PROPERTYNAME_INITIATOR_VARIABLE_NAME,initiatorVariableName);
  }
  startEventActivity.setActivityBehavior(new NoneStartEventActivityBehavior());
  Element timerEventDefinition=startEventElement.element("timerEventDefinition");
  Element messageEventDefinition=startEventElement.element("messageEventDefinition");
  if (timerEventDefinition != null) {
    parseTimerStartEventDefinition(timerEventDefinition,startEventActivity,processDefinition);
  }
 else   if (messageEventDefinition != null) {
    EventDefinition messageDefinition=parseMessageEventDefinition(messageEventDefinition);
    startEventActivity.setProperty("type","messageStartEvent");
    messageDefinition.setActivityId(startEventActivity.getId());
    messageDefinition.setStartEvent(true);
    addEventDefinition(messageDefinition,processDefinition,startEventElement);
  }
}
