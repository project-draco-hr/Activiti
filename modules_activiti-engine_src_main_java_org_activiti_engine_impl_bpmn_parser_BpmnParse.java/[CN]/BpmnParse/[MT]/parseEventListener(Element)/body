{
  EventListener eventListener=null;
  String className=eventListenerElement.attribute("class");
  String expression=eventListenerElement.attribute("expression");
  if (className != null && className.trim().length() > 0) {
    Object delegateInstance=instantiateDelegate(className,parseFieldDeclarations(eventListenerElement));
    if (delegateInstance instanceof EventListener) {
      eventListener=(EventListener)delegateInstance;
    }
 else     if (delegateInstance instanceof JavaDelegation) {
      eventListener=new JavaDelegationDelegate((JavaDelegation)delegateInstance);
    }
 else {
      addError(delegateInstance.getClass().getName() + " doesn't implement " + JavaDelegation.class.getName()+ " nor "+ EventListener.class.getName(),eventListenerElement);
    }
  }
 else   if (expression != null && expression.trim().length() > 0) {
    eventListener=new ExpressionEventListener(expressionManager.createExpression(expression));
  }
 else {
    addError("Element 'class' or 'expression' is mandatory on event-listener",eventListenerElement);
  }
  return eventListener;
}
