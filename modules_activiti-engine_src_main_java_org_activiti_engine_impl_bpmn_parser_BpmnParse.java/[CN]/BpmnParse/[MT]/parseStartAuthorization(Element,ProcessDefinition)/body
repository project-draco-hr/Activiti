{
  ProcessDefinitionEntity processDefinition=(ProcessDefinitionEntity)definition;
  Element extentionsElement=scopeElement.element("extensionElements");
  if (extentionsElement != null) {
    List<Element> potentialStarterElements=extentionsElement.elementsNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,POTENTIAL_STARTER);
    for (    Element potentialStarterElement : potentialStarterElements) {
      parsePotentialStarterResourceAssignment(potentialStarterElement,processDefinition);
    }
  }
  String candidateUsersString=scopeElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,CANDIDATE_STARTER_USERS_EXTENSION);
  if (candidateUsersString != null) {
    List<String> candidateUsers=parseCommaSeparatedList(candidateUsersString);
    for (    String candidateUser : candidateUsers) {
      processDefinition.addCandidateStarterUserIdExpression(expressionManager.createExpression(candidateUser.trim()));
    }
  }
  String candidateGroupsString=scopeElement.attributeNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,CANDIDATE_STARTER_GROUPS_EXTENSION);
  if (candidateGroupsString != null) {
    List<String> candidateGroups=parseCommaSeparatedList(candidateGroupsString);
    for (    String candidateGroup : candidateGroups) {
      processDefinition.addCandidateStarterGroupIdExpression(expressionManager.createExpression(candidateGroup.trim()));
    }
  }
}
