{
  for (  Element sequenceFlowElement : processElement.elements("sequenceFlow")) {
    String id=sequenceFlowElement.attribute("id");
    String sourceRef=sequenceFlowElement.attribute("sourceRef");
    String destinationRef=sequenceFlowElement.attribute("targetRef");
    ActivityImpl sourceActivity=scope.findActivity(sourceRef);
    ActivityImpl destinationActivity=scope.findActivity(destinationRef);
    if (sourceActivity != null && destinationActivity != null) {
      TransitionImpl transition=sourceActivity.createOutgoingTransition(id);
      transition.setProperty("name",sequenceFlowElement.attribute("name"));
      transition.setProperty("documentation",parseDocumentation(sequenceFlowElement));
      transition.setDestination(destinationActivity);
      parseSequenceFlowConditionExpression(sequenceFlowElement,transition);
      parseExecutionListenersOnTransition(sequenceFlowElement,transition);
      for (      BpmnParseListener parseListener : parseListeners) {
        parseListener.parseSequenceFlow(sequenceFlowElement,scope,transition);
      }
    }
 else     if (sourceActivity == null) {
      addError("Invalid source '" + sourceRef + "' of sequence flow '"+ id+ "'",sequenceFlowElement);
    }
 else     if (destinationActivity == null) {
      addError("Invalid destination '" + destinationRef + "' of sequence flow '"+ id+ "'",sequenceFlowElement);
    }
  }
}
