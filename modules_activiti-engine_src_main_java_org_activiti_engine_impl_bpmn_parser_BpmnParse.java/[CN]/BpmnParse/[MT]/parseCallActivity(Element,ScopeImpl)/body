{
  ActivityImpl activity=createActivityOnScope(callActivityElement,scope);
  String calledElement=callActivityElement.attribute("calledElement");
  if (calledElement == null) {
    addError("Missing attribute 'calledElement'",callActivityElement);
  }
  CallActivityBehavior callActivityBehaviour=new CallActivityBehavior(calledElement);
  Element extentionsElement=callActivityElement.element("extensionElements");
  if (extentionsElement != null) {
    for (    Element listenerElement : extentionsElement.elementsNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,"in")) {
      String sourceExpression=listenerElement.attribute("sourceExpression");
      String target=listenerElement.attribute("target");
      if (sourceExpression != null) {
        Expression expression=expressionManager.createExpression(sourceExpression.trim());
        callActivityBehaviour.addDataInputAssociation(new SimpleDataInputAssociation(expression,target));
      }
 else {
        String source=listenerElement.attribute("source");
        callActivityBehaviour.addDataInputAssociation(new SimpleDataInputAssociation(source,target));
      }
    }
    for (    Element listenerElement : extentionsElement.elementsNS(BpmnParser.ACTIVITI_BPMN_EXTENSIONS_NS,"out")) {
      String sourceExpression=listenerElement.attribute("sourceExpression");
      String target=listenerElement.attribute("target");
      if (sourceExpression != null) {
        Expression expression=expressionManager.createExpression(sourceExpression.trim());
        callActivityBehaviour.addDataOutputAssociation(new MessageImplicitDataOutputAssociation(target,expression));
      }
 else {
        String source=listenerElement.attribute("source");
        callActivityBehaviour.addDataOutputAssociation(new MessageImplicitDataOutputAssociation(target,source));
      }
    }
  }
  activity.setScope(true);
  activity.setActivityBehavior(callActivityBehaviour);
  parseExecutionListenersOnScope(callActivityElement,activity);
  for (  BpmnParseListener parseListener : parseListeners) {
    parseListener.parseCallActivity(callActivityElement,scope,activity);
  }
  return activity;
}
