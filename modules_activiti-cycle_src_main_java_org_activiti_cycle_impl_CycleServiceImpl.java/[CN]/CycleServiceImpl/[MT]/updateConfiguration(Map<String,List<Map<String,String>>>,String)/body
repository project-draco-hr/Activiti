{
  try {
    ConfigurationContainer configurationContainer=getConfigurationContainer(currentUserId);
    Map<String,RepositoryConnectorConfiguration> currentConfigMap=new HashMap<String,RepositoryConnectorConfiguration>();
    for (    RepositoryConnectorConfiguration configuration : configurationContainer.getConnectorConfigurations()) {
      currentConfigMap.put(configuration.getId(),configuration);
    }
    for (    RepositoryConnectorConfiguration config : currentConfigMap.values()) {
      configurationContainer.removeRepositoryConnectorConfiguration(config);
    }
    for (    Entry<String,List<Map<String,String>>> configsForThisClass : connectorConfigMap.entrySet()) {
      for (      Map<String,String> valueMap : configsForThisClass.getValue()) {
        RepositoryConnectorConfiguration configurationObject=currentConfigMap.get(valueMap.get("id"));
        if (configurationObject == null) {
          Class<? extends RepositoryConnectorConfiguration> clazz=(Class<? extends RepositoryConnectorConfiguration>)Class.forName(configsForThisClass.getKey());
          configurationObject=clazz.newInstance();
        }
        RepositoryConfigurationHandler.setConfigurationfields(valueMap,configurationObject);
        configurationContainer.addRepositoryConnectorConfiguration(configurationObject);
      }
    }
    CycleConfigurationService configService=new CycleConfigurationServiceImpl(null);
    configService.saveConfiguration(configurationContainer);
  }
 catch (  Exception e) {
    throw new RepositoryException("Error while storing config for user " + e.getMessage(),e);
  }
}
