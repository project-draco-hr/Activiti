{
  if (configurationClass == null)   throw new IllegalArgumentException("configurationClass must not be null");
  if (configurationId == null)   throw new IllegalArgumentException("configurationId must not be null");
  if (values == null)   throw new IllegalArgumentException("values must not be null");
  if (currentUserId == null)   throw new IllegalArgumentException("currentUserId must not be null");
  try {
    ConfigurationContainer configurationContainer=getConfigurationContainer(currentUserId);
    RepositoryConnectorConfiguration repositoryConnectorConfiguration=null;
    for (    RepositoryConnectorConfiguration thisConfiguration : configurationContainer.getConnectorConfigurations()) {
      if (!configurationId.equals(thisConfiguration.getId()))       continue;
      repositoryConnectorConfiguration=thisConfiguration;
      break;
    }
    if (repositoryConnectorConfiguration != null && !repositoryConnectorConfiguration.getClass().getCanonicalName().equals(configurationClass)) {
      throw new RepositoryException("Cannot store connectorconfiguration of type '" + configurationClass + "' with id '"+ configurationId+ "'. A connector with this id and of type '"+ repositoryConnectorConfiguration.getClass().getCanonicalName().equals(configurationClass)+ "' already exists.");
    }
    if (repositoryConnectorConfiguration == null) {
      @SuppressWarnings("unchecked") Class<? extends RepositoryConnectorConfiguration> clazz=(Class<? extends RepositoryConnectorConfiguration>)Class.forName(configurationClass);
      repositoryConnectorConfiguration=clazz.newInstance();
      configurationContainer.addRepositoryConnectorConfiguration(repositoryConnectorConfiguration);
    }
    RepositoryConfigurationHandler.setConfigurationfields(values,repositoryConnectorConfiguration);
    CycleConfigurationService configService=new CycleConfigurationServiceImpl(null);
    configService.saveConfiguration(configurationContainer);
  }
 catch (  Exception e) {
    throw new RepositoryException("Error while storing config for user " + e.getMessage(),e);
  }
}
