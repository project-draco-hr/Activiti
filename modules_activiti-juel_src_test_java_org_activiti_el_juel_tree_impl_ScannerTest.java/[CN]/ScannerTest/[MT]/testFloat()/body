{
  Symbol[] expected={START_EVAL_DYNAMIC,FLOAT,END_EVAL};
  assertEquals(expected,symbols("${0.}"));
  assertEquals(expected,symbols("${023456789.}"));
  assertEquals(expected,symbols("${.0}"));
  assertEquals(expected,symbols("${.023456789}"));
  assertEquals(expected,symbols("${0.0}"));
  assertEquals(expected,symbols("${0e0}"));
  assertEquals(expected,symbols("${0E0}"));
  assertEquals(expected,symbols("${0e+0}"));
  assertEquals(expected,symbols("${0E+0}"));
  assertEquals(expected,symbols("${0e+0}"));
  assertEquals(expected,symbols("${0E+0}"));
  assertEquals(expected,symbols("${.0e0}"));
  assertEquals(expected,symbols("${.0E0}"));
  assertEquals(expected,symbols("${.0e+0}"));
  assertEquals(expected,symbols("${.0E+0}"));
  assertEquals(expected,symbols("${.0e-0}"));
  assertEquals(expected,symbols("${.0E-0}"));
  assertEquals(expected,symbols("${0.e0}"));
  assertEquals(expected,symbols("${0.E0}"));
  assertEquals(expected,symbols("${0.e+0}"));
  assertEquals(expected,symbols("${0.E+0}"));
  assertEquals(expected,symbols("${0.e-0}"));
  assertEquals(expected,symbols("${0.E-0}"));
  assertEquals(expected,symbols("${0.0e0}"));
  assertEquals(expected,symbols("${0.0E0}"));
  assertEquals(expected,symbols("${0.0e+0}"));
  assertEquals(expected,symbols("${0.0E+0}"));
  assertEquals(expected,symbols("${0.0e-0}"));
  assertEquals(expected,symbols("${0.0E-0}"));
}
