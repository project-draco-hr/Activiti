{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("CompetingJoinsProcess");
  Execution execution1=runtimeService.createExecutionQuery().processInstanceId(processInstance.getId()).activityId("wait1").singleResult();
  Execution execution2=runtimeService.createExecutionQuery().processInstanceId(processInstance.getId()).activityId("wait2").singleResult();
  log.fine("test thread starts thread one");
  SignalThread threadOne=new SignalThread(execution1.getId());
  threadOne.startAndWaitUntilControlIsReturned();
  log.fine("test thread continues to start thread two");
  SignalThread threadTwo=new SignalThread(execution2.getId());
  threadTwo.startAndWaitUntilControlIsReturned();
  log.fine("test thread notifies thread 1");
  threadOne.proceedAndWaitTillDone();
  assertNull(threadOne.exception);
  log.fine("test thread notifies thread 2");
  threadTwo.proceedAndWaitTillDone();
  assertNotNull(threadTwo.exception);
  assertTextPresent("was updated by another transaction concurrently",threadTwo.exception.getMessage());
}
