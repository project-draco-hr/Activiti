{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("timerProcess");
  Job timerJob=managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();
  assertNotNull(timerJob);
  Calendar now=Calendar.getInstance();
  now.set(Calendar.MILLISECOND,0);
  ClockUtil.setCurrentTime(now.getTime());
  ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_JOB,timerJob.getId()));
  Representation response=client.get();
  assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
  JsonNode responseNode=objectMapper.readTree(response.getStream());
  assertNotNull(responseNode);
  assertEquals(timerJob.getId(),responseNode.get("id").getTextValue());
  assertEquals(timerJob.getExceptionMessage(),responseNode.get("exceptionMessage").getTextValue());
  assertEquals(timerJob.getExecutionId(),responseNode.get("executionId").getTextValue());
  assertEquals(timerJob.getProcessDefinitionId(),responseNode.get("processDefinitionId").getTextValue());
  assertEquals(timerJob.getProcessInstanceId(),responseNode.get("processInstanceId").getTextValue());
  assertEquals(timerJob.getRetries(),responseNode.get("retries").getIntValue());
  assertEquals(timerJob.getDuedate(),getDateFromISOString(responseNode.get("dueDate").getTextValue()));
}
