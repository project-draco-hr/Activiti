{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("boundaryEventProcess");
  Task task=taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
  assertNotNull(task);
  taskService.complete(task.getId());
  assertEquals(0L,runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());
  HistoricActivityInstance historicActivityInstance=historyService.createHistoricActivityInstanceQuery().activityId("boundary").processInstanceId(processInstance.getId()).singleResult();
  assertNull(historicActivityInstance);
  processInstance=runtimeService.startProcessInstanceByKey("boundaryEventProcess");
  task=taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
  runtimeService.signalEventReceived("alert",task.getExecutionId());
  assertEquals(0L,runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());
  historicActivityInstance=historyService.createHistoricActivityInstanceQuery().activityId("boundary").processInstanceId(processInstance.getId()).singleResult();
  assertNotNull(historicActivityInstance);
}
