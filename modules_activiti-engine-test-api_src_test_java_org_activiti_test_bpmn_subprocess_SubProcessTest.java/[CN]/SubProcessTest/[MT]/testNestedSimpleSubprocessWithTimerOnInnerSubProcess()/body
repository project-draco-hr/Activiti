{
  Clock.setCurrentTime(new Date(0L));
  ProcessInstance pi=deployer.getProcessService().startProcessInstanceByKey("nestedSubProcessWithTimer");
  Task subProcessTask=deployer.getTaskService().createTaskQuery().processInstance(pi.getId()).singleResult();
  assertEquals("Task in subprocess",subProcessTask.getName());
  Clock.setCurrentTime(new Date((60 * 60 * 1000) + 1000));
  new JobExecutorPoller(deployer.getJobExecutor(),deployer.getCommandExecutor()).waitForJobExecutorToProcessAllJobs(5000L,25L);
  Task escalationTask=deployer.getTaskService().createTaskQuery().processInstance(pi.getId()).singleResult();
  assertEquals("Escalated task",escalationTask.getName());
  deployer.getTaskService().complete(escalationTask.getId());
  Task taskAfterSubProcess=deployer.getTaskService().createTaskQuery().processInstance(pi.getId()).singleResult();
  assertEquals("Task after subprocesses",taskAfterSubProcess.getName());
}
