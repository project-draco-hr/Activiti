{
  ProcessInstance pi=deployer.getProcessService().startProcessInstanceByKey("twoSubProcessInParallelWithinSubProcess");
  TaskQuery taskQuery=deployer.getTaskService().createTaskQuery().processInstance(pi.getId()).orderAsc(TaskQuery.PROPERTY_NAME);
  List<Task> tasks=taskQuery.list();
  Task taskA=tasks.get(0);
  Task taskB=tasks.get(1);
  assertEquals("Task in subprocess A",taskA.getName());
  assertEquals("Task in subprocess B",taskB.getName());
  deployer.getTaskService().complete(taskA.getId());
  deployer.getTaskService().complete(taskB.getId());
  Task taskAfterSubProcess=taskQuery.singleResult();
  assertEquals("Task after subprocess",taskAfterSubProcess.getName());
  deployer.getTaskService().complete(taskAfterSubProcess.getId());
  deployer.assertProcessEnded(pi.getId());
}
