{
  JsonNode formPropertiesNode=getProperty(PROPERTY_FORM_PROPERTIES,objectNode);
  if (formPropertiesNode != null) {
    formPropertiesNode=BpmnJsonConverterUtil.validateIfNodeIsTextual(formPropertiesNode);
    JsonNode propertiesArray=formPropertiesNode.get("formProperties");
    if (propertiesArray != null) {
      for (      JsonNode formNode : propertiesArray) {
        JsonNode formIdNode=formNode.get(PROPERTY_FORM_ID);
        if (formIdNode != null && StringUtils.isNotEmpty(formIdNode.asText())) {
          FormProperty formProperty=new FormProperty();
          formProperty.setId(formIdNode.asText());
          formProperty.setName(getValueAsString(PROPERTY_FORM_NAME,formNode));
          formProperty.setType(getValueAsString(PROPERTY_FORM_TYPE,formNode));
          formProperty.setExpression(getValueAsString(PROPERTY_FORM_EXPRESSION,formNode));
          formProperty.setVariable(getValueAsString(PROPERTY_FORM_VARIABLE,formNode));
          if ("date".equalsIgnoreCase(formProperty.getType())) {
            formProperty.setDatePattern(getValueAsString(PROPERTY_FORM_DATE_PATTERN,formNode));
          }
 else           if ("enum".equalsIgnoreCase(formProperty.getType())) {
            JsonNode enumValuesNode=formNode.get(PROPERTY_FORM_ENUM_VALUES);
            if (enumValuesNode != null) {
              List<FormValue> formValueList=new ArrayList<FormValue>();
              for (              JsonNode enumNode : enumValuesNode) {
                if (enumNode.get(PROPERTY_FORM_ENUM_VALUES_ID) != null && enumNode.get(PROPERTY_FORM_ENUM_VALUES_ID).isNull() == false && enumNode.get(PROPERTY_FORM_ENUM_VALUES_NAME) != null && enumNode.get(PROPERTY_FORM_ENUM_VALUES_NAME).isNull() == false) {
                  FormValue formValue=new FormValue();
                  formValue.setId(enumNode.get(PROPERTY_FORM_ENUM_VALUES_ID).asText());
                  formValue.setName(enumNode.get(PROPERTY_FORM_ENUM_VALUES_NAME).asText());
                  formValueList.add(formValue);
                }
 else                 if (enumNode.get("value") != null && enumNode.get("value").isNull() == false) {
                  FormValue formValue=new FormValue();
                  formValue.setId(enumNode.get("value").asText());
                  formValue.setName(enumNode.get("value").asText());
                  formValueList.add(formValue);
                }
              }
              formProperty.setFormValues(formValueList);
            }
          }
          formProperty.setRequired(getValueAsBoolean(PROPERTY_FORM_REQUIRED,formNode));
          formProperty.setReadable(getValueAsBoolean(PROPERTY_FORM_READABLE,formNode));
          formProperty.setWriteable(getValueAsBoolean(PROPERTY_FORM_WRITABLE,formNode));
          if (element instanceof StartEvent) {
            ((StartEvent)element).getFormProperties().add(formProperty);
          }
 else           if (element instanceof UserTask) {
            ((UserTask)element).getFormProperties().add(formProperty);
          }
        }
      }
    }
  }
}
