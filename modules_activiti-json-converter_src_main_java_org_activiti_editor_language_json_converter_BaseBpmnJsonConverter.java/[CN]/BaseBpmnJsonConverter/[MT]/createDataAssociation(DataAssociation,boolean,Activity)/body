{
  String sourceRef=null;
  String targetRef=null;
  if (incoming) {
    sourceRef=dataAssociation.getSourceRef();
    targetRef=activity.getId();
  }
 else {
    sourceRef=activity.getId();
    targetRef=dataAssociation.getTargetRef();
  }
  ObjectNode flowNode=BpmnJsonConverterUtil.createChildShape(dataAssociation.getId(),STENCIL_DATA_ASSOCIATION,172,212,128,212);
  ArrayNode dockersArrayNode=objectMapper.createArrayNode();
  ObjectNode dockNode=objectMapper.createObjectNode();
  dockNode.put(EDITOR_BOUNDS_X,model.getGraphicInfo(sourceRef).getWidth() / 2.0);
  dockNode.put(EDITOR_BOUNDS_Y,model.getGraphicInfo(sourceRef).getHeight() / 2.0);
  dockersArrayNode.add(dockNode);
  if (model.getFlowLocationGraphicInfo(dataAssociation.getId()).size() > 2) {
    for (int i=1; i < model.getFlowLocationGraphicInfo(dataAssociation.getId()).size() - 1; i++) {
      GraphicInfo graphicInfo=model.getFlowLocationGraphicInfo(dataAssociation.getId()).get(i);
      dockNode=objectMapper.createObjectNode();
      dockNode.put(EDITOR_BOUNDS_X,graphicInfo.getX());
      dockNode.put(EDITOR_BOUNDS_Y,graphicInfo.getY());
      dockersArrayNode.add(dockNode);
    }
  }
  dockNode=objectMapper.createObjectNode();
  dockNode.put(EDITOR_BOUNDS_X,model.getGraphicInfo(targetRef).getWidth() / 2.0);
  dockNode.put(EDITOR_BOUNDS_Y,model.getGraphicInfo(targetRef).getHeight() / 2.0);
  dockersArrayNode.add(dockNode);
  flowNode.put("dockers",dockersArrayNode);
  ArrayNode outgoingArrayNode=objectMapper.createArrayNode();
  outgoingArrayNode.add(BpmnJsonConverterUtil.createResourceNode(targetRef));
  flowNode.put("outgoing",outgoingArrayNode);
  flowNode.put("target",BpmnJsonConverterUtil.createResourceNode(targetRef));
  ObjectNode propertiesNode=objectMapper.createObjectNode();
  propertiesNode.put(PROPERTY_OVERRIDE_ID,dataAssociation.getId());
  flowNode.put(EDITOR_SHAPE_PROPERTIES,propertiesNode);
  shapesArrayNode.add(flowNode);
}
