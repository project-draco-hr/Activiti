{
  List<EventDefinition> eventDefinitions=event.getEventDefinitions();
  if (eventDefinitions.size() == 1) {
    EventDefinition eventDefinition=eventDefinitions.get(0);
    if (eventDefinition instanceof ErrorEventDefinition) {
      ErrorEventDefinition errorDefinition=(ErrorEventDefinition)eventDefinition;
      if (StringUtils.isNotEmpty(errorDefinition.getErrorCode())) {
        propertiesNode.put(PROPERTY_ERRORREF,errorDefinition.getErrorCode());
      }
    }
 else     if (eventDefinition instanceof MessageEventDefinition) {
      MessageEventDefinition messageDefinition=(MessageEventDefinition)eventDefinition;
      if (StringUtils.isNotEmpty(messageDefinition.getMessageRef())) {
        String messageRef=messageDefinition.getMessageRef();
        if (messageRef.startsWith(model.getTargetNamespace())) {
          messageRef=messageRef.replace(model.getTargetNamespace(),"");
          messageRef=messageRef.replaceFirst(":","");
        }
 else {
          for (          String prefix : model.getNamespaces().keySet()) {
            String namespace=model.getNamespace(prefix);
            if (messageRef.startsWith(namespace)) {
              messageRef=messageRef.replace(model.getTargetNamespace(),"");
              messageRef=prefix + messageRef;
            }
          }
        }
        propertiesNode.put(PROPERTY_MESSAGEREF,messageRef);
      }
    }
 else     if (eventDefinition instanceof SignalEventDefinition) {
      SignalEventDefinition signalDefinition=(SignalEventDefinition)eventDefinition;
      if (StringUtils.isNotEmpty(signalDefinition.getSignalRef())) {
        propertiesNode.put(PROPERTY_SIGNALREF,signalDefinition.getSignalRef());
      }
    }
 else     if (eventDefinition instanceof TimerEventDefinition) {
      TimerEventDefinition timerDefinition=(TimerEventDefinition)eventDefinition;
      if (StringUtils.isNotEmpty(timerDefinition.getTimeDuration())) {
        propertiesNode.put(PROPERTY_TIMER_DURATON,timerDefinition.getTimeDuration());
      }
      if (StringUtils.isNotEmpty(timerDefinition.getTimeCycle())) {
        propertiesNode.put(PROPERTY_TIMER_CYCLE,timerDefinition.getTimeCycle());
      }
      if (StringUtils.isNotEmpty(timerDefinition.getTimeDate())) {
        propertiesNode.put(PROPERTY_TIMER_DATE,timerDefinition.getTimeDate());
      }
    }
  }
}
