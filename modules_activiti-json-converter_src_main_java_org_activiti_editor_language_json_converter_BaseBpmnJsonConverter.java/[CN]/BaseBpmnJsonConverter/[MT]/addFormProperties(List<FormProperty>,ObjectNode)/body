{
  if (CollectionUtils.isEmpty(formProperties))   return;
  ObjectNode formPropertiesNode=objectMapper.createObjectNode();
  ArrayNode propertiesArrayNode=objectMapper.createArrayNode();
  for (  FormProperty property : formProperties) {
    ObjectNode propertyItemNode=objectMapper.createObjectNode();
    propertyItemNode.put(PROPERTY_FORM_ID,property.getId());
    propertyItemNode.put(PROPERTY_FORM_NAME,property.getName());
    propertyItemNode.put(PROPERTY_FORM_TYPE,property.getType());
    if (StringUtils.isNotEmpty(property.getExpression())) {
      propertyItemNode.put(PROPERTY_FORM_EXPRESSION,property.getExpression());
    }
 else {
      propertyItemNode.putNull(PROPERTY_FORM_EXPRESSION);
    }
    if (StringUtils.isNotEmpty(property.getVariable())) {
      propertyItemNode.put(PROPERTY_FORM_VARIABLE,property.getVariable());
    }
 else {
      propertyItemNode.putNull(PROPERTY_FORM_VARIABLE);
    }
    if (StringUtils.isNotEmpty(property.getDatePattern())) {
      propertyItemNode.put(PROPERTY_FORM_DATE_PATTERN,property.getDatePattern());
    }
    if (CollectionUtils.isNotEmpty(property.getFormValues())) {
      ArrayNode valuesNode=objectMapper.createArrayNode();
      for (      FormValue formValue : property.getFormValues()) {
        ObjectNode valueNode=objectMapper.createObjectNode();
        valueNode.put("value",formValue.getName());
        valuesNode.add(valueNode);
      }
      propertyItemNode.put(PROPERTY_FORM_ENUM_VALUES,valuesNode);
    }
    propertyItemNode.put(PROPERTY_FORM_REQUIRED,property.isRequired());
    propertyItemNode.put(PROPERTY_FORM_READABLE,property.isReadable());
    propertyItemNode.put(PROPERTY_FORM_WRITABLE,property.isWriteable());
    propertiesArrayNode.add(propertyItemNode);
  }
  formPropertiesNode.put("formProperties",propertiesArrayNode);
  propertiesNode.put(PROPERTY_FORM_PROPERTIES,formPropertiesNode);
}
