{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess");
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("user","kermit");
  requestNode.put("type","myType");
  HttpPost httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_IDENTITYLINKS_COLLECTION,processInstance.getId()));
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  HttpResponse response=executeHttpRequest(httpPost,HttpStatus.SC_CREATED);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  assertNotNull(responseNode);
  assertEquals("kermit",responseNode.get("user").textValue());
  assertEquals("myType",responseNode.get("type").textValue());
  assertTrue(responseNode.get("group").isNull());
  assertTrue(responseNode.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_IDENTITYLINK,processInstance.getId(),"kermit","myType")));
  httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_IDENTITYLINKS_COLLECTION,"unexistingprocess"));
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPost,HttpStatus.SC_NOT_FOUND);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("type","myType");
  httpPost=new HttpPost(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_IDENTITYLINKS_COLLECTION,processInstance.getId()));
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPost,HttpStatus.SC_BAD_REQUEST);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("type","myType");
  requestNode.put("group","sales");
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPost,HttpStatus.SC_BAD_REQUEST);
  requestNode=objectMapper.createObjectNode();
  requestNode.put("user","kermit");
  httpPost.setEntity(new StringEntity(requestNode.toString()));
  executeHttpRequest(httpPost,HttpStatus.SC_BAD_REQUEST);
}
