{
  List<String> resourceNames=repositoryService.getDeploymentResourceNames(deployment.getId());
  Collections.sort(resourceNames);
  if (resourceNames.size() > 0) {
    Label resourceHeader=new Label("Resources");
    resourceHeader.setWidth("95%");
    resourceHeader.addStyleName(Constants.STYLE_DEPLOYMENT_DETAILS_HEADER);
    addComponent(resourceHeader);
    HorizontalLayout resourceLayout=new HorizontalLayout();
    addComponent(resourceLayout);
    Embedded resourceIcon=new Embedded(null,Images.RESOURCE);
    resourceLayout.addComponent(resourceIcon);
    VerticalLayout resourceLinksLayout=new VerticalLayout();
    resourceLayout.setSpacing(true);
    resourceLayout.addComponent(resourceLinksLayout);
    resourceLayout.setComponentAlignment(resourceLinksLayout,Alignment.MIDDLE_LEFT);
    for (    final String resourceName : resourceNames) {
      StreamResource.StreamSource streamSource=new StreamSource(){
        public InputStream getStream(){
          return repositoryService.getResourceAsStream(deployment.getId(),resourceName);
        }
      }
;
      Link resourceLink=new Link(resourceName,new StreamResource(streamSource,resourceName,ExplorerApplication.getCurrent()));
      resourceLinksLayout.addComponent(resourceLink);
    }
  }
}
