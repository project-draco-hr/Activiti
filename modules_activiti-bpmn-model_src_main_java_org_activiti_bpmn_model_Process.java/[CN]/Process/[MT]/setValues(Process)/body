{
  super.setValues(otherElement);
  setName(otherElement.getName());
  setExecutable(otherElement.isExecutable());
  setDocumentation(otherElement.getDocumentation());
  if (otherElement.getIoSpecification() != null) {
    setIoSpecification(otherElement.getIoSpecification().clone());
  }
  executionListeners=new ArrayList<ActivitiListener>();
  if (otherElement.getExecutionListeners() != null && otherElement.getExecutionListeners().size() > 0) {
    for (    ActivitiListener listener : otherElement.getExecutionListeners()) {
      executionListeners.add(listener.clone());
    }
  }
  candidateStarterUsers=new ArrayList<String>();
  if (otherElement.getCandidateStarterUsers() != null && otherElement.getCandidateStarterUsers().size() > 0) {
    candidateStarterUsers.addAll(otherElement.getCandidateStarterUsers());
  }
  candidateStarterGroups=new ArrayList<String>();
  if (otherElement.getCandidateStarterGroups() != null && otherElement.getCandidateStarterGroups().size() > 0) {
    candidateStarterGroups.addAll(otherElement.getCandidateStarterGroups());
  }
  eventListeners=new ArrayList<EventListener>();
  if (otherElement.getEventListeners() != null && !otherElement.getEventListeners().isEmpty()) {
    for (    EventListener listener : otherElement.getEventListeners()) {
      eventListeners.add(listener.clone());
    }
  }
  for (  ValuedDataObject thisObject : getDataObjects()) {
    boolean exists=false;
    for (    ValuedDataObject otherObject : otherElement.getDataObjects()) {
      if (thisObject.getId().equals(otherObject.getId())) {
        exists=true;
      }
    }
    if (!exists) {
      removeFlowElement(thisObject.getId());
    }
  }
  dataObjects=new ArrayList<ValuedDataObject>();
  if (otherElement.getDataObjects() != null && otherElement.getDataObjects().size() > 0) {
    for (    ValuedDataObject dataObject : otherElement.getDataObjects()) {
      ValuedDataObject clone=dataObject.clone();
      dataObjects.add(clone);
      removeFlowElement(clone.getId());
      addFlowElement(clone);
    }
  }
}
