{
  String cuid=req.getCurrentUserId();
  HttpSession session=req.getHttpServletRequest().getSession(true);
  RepositoryConnector conn=SessionUtil.getRepositoryConnector(cuid,session);
  String artifactId=req.getString("artifactId");
  String representationId=req.getString("representationId");
  String restProxyUri=req.getString("restProxyUri");
  RepositoryArtifact artifact=conn.getRepositoryArtifact(artifactId);
  try {
    ContentRepresentation contentRepresentation=artifact.getArtifactType().getContentRepresentation(representationId);
switch (contentRepresentation.getRenderInfo()) {
case IMAGE:
      String imageUrl=restProxyUri + "/content?artifactId=" + URLEncoder.encode(artifactId,"UTF-8")+ "&contentRepresentationId="+ URLEncoder.encode(contentRepresentation.getId(),"UTF-8");
    model.put("imageUrl",imageUrl);
  break;
case BINARY:
case CODE:
case HTML:
case TEXT_PLAIN:
String content=conn.getContent(artifactId,contentRepresentation.getId()).asString();
model.put("content",content);
}
model.put("id",contentRepresentation.getId());
}
 catch (Exception ex) {
log.log(Level.WARNING,"Exception while loading content representation",ex);
StringWriter sw=new StringWriter();
ex.printStackTrace(new PrintWriter(sw));
String stackTrace="Exception while accessing content. Details:\n\n" + sw.toString();
model.put("exception",stackTrace);
}
}
