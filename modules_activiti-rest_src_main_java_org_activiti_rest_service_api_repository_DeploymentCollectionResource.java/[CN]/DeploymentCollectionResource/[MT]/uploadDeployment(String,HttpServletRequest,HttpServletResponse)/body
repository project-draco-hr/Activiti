{
  if (request instanceof MultipartHttpServletRequest == false) {
    throw new ActivitiIllegalArgumentException("Multipart request is required");
  }
  MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest)request;
  if (multipartRequest.getFileMap().size() == 0) {
    throw new ActivitiIllegalArgumentException("Multipart request with file content is required");
  }
  MultipartFile file=multipartRequest.getFileMap().values().iterator().next();
  try {
    DeploymentBuilder deploymentBuilder=repositoryService.createDeployment();
    String fileName=file.getName();
    if (fileName.endsWith(".bpmn20.xml") || fileName.endsWith(".bpmn")) {
      deploymentBuilder.addInputStream(fileName,file.getInputStream());
    }
 else     if (fileName.toLowerCase().endsWith(".bar") || fileName.toLowerCase().endsWith(".zip")) {
      deploymentBuilder.addZipInputStream(new ZipInputStream(file.getInputStream()));
    }
 else {
      throw new ActivitiIllegalArgumentException("File must be of type .bpmn20.xml, .bpmn, .bar or .zip");
    }
    deploymentBuilder.name(fileName);
    if (tenantId != null) {
      deploymentBuilder.tenantId(tenantId);
    }
    Deployment deployment=deploymentBuilder.deploy();
    response.setStatus(HttpStatus.CREATED.value());
    return restResponseFactory.createDeploymentResponse(deployment);
  }
 catch (  Exception e) {
    if (e instanceof ActivitiException) {
      throw (ActivitiException)e;
    }
    throw new ActivitiException(e.getMessage(),e);
  }
}
