{
  String processDefinitionId=repositoryService.createProcessDefinitionQuery().processDefinitionKey("FormPropertyDefaultValueTest.testDefaultValue").latestVersion().singleResult().getId();
  StartFormData startForm=formService.getStartFormData(processDefinitionId);
  List<FormProperty> formProperties=startForm.getFormProperties();
  assertEquals(4,formProperties.size());
  for (  FormProperty prop : formProperties) {
    if ("booleanProperty".equals(prop.getId())) {
      assertEquals("true",prop.getValue());
    }
 else     if ("stringProperty".equals(prop.getId())) {
      assertEquals("someString",prop.getValue());
    }
 else     if ("longProperty".equals(prop.getId())) {
      assertEquals("42",prop.getValue());
    }
 else     if ("longExpressionProperty".equals(prop.getId())) {
      assertEquals("23",prop.getValue());
    }
 else {
      assertTrue("Invalid form property: " + prop.getId(),false);
    }
  }
  Map<String,String> formDataUpdate=new HashMap<String,String>();
  formDataUpdate.put("longExpressionProperty","1");
  formDataUpdate.put("booleanProperty","false");
  ProcessInstance processInstance=formService.submitStartFormData(processDefinitionId,formDataUpdate);
  assertEquals(false,runtimeService.getVariable(processInstance.getId(),"booleanProperty"));
  assertEquals("someString",runtimeService.getVariable(processInstance.getId(),"stringProperty"));
  assertEquals(42L,runtimeService.getVariable(processInstance.getId(),"longProperty"));
  assertEquals(1L,runtimeService.getVariable(processInstance.getId(),"longExpressionProperty"));
}
