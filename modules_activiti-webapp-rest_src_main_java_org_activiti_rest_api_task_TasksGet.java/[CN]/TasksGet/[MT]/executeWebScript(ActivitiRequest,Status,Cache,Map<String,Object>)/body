{
  String personalTaskUserId=req.getString("assignee");
  String candidateTaskUserId=req.getString("candidate");
  String candidateGroupId=req.getString("candidate-group");
  TaskQuery taskQuery=getTaskService().createTaskQuery();
  if (personalTaskUserId != null) {
    taskQuery.taskAssignee(personalTaskUserId);
  }
 else   if (candidateTaskUserId != null) {
    taskQuery.taskCandidateUser(candidateTaskUserId);
  }
 else   if (candidateGroupId != null) {
    taskQuery.taskCandidateGroup(candidateGroupId);
  }
 else {
    throw new WebScriptException(Status.STATUS_BAD_REQUEST,"Tasks must be filtered with 'assignee', 'candidate' or 'candidate-group'");
  }
  paginateList(req,taskQuery,"tasks",model,"id");
  List<Task> tasks=(List<Task>)model.get("tasks");
  if (tasks != null) {
    List<RestTask> restTasks=new ArrayList<RestTask>();
    for (    Task t : tasks) {
      RestTask restTask=new RestTask((TaskEntity)t);
      TaskFormData taskFormData=getFormService().getTaskFormData(t.getId());
      if (taskFormData != null) {
        restTask.setFormResourceKey(taskFormData.getFormKey());
      }
      restTasks.add(restTask);
    }
    model.put("tasks",restTasks);
  }
}
