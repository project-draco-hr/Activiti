{
  CommandContextFactory commandContextFactory=mock(CommandContextFactory.class);
  CommandContext commandContext=mock(CommandContext.class);
  DefaultCommandExecutor chain=new DefaultCommandExecutor(commandContextFactory);
  chain.addContextAwareCommandInterceptor(new ContextAwareCommandInterceptor(){
    public <T>T invoke(    CommandExecutor next,    Command<T> command,    CommandContext context){
      builder.append("b:1:");
      T result=next.execute(command);
      builder.append(":a:1");
      return result;
    }
  }
);
  chain.addContextAwareCommandInterceptor(new ContextAwareCommandInterceptor(){
    public <T>T invoke(    CommandExecutor next,    Command<T> command,    CommandContext context){
      builder.append("b:2:");
      T result=next.execute(command);
      builder.append(":a:2");
      return result;
    }
  }
);
  Command<String> command=new Command<String>(){
    public String execute(    CommandContext commandContext){
      return builder.append("c").toString();
    }
  }
;
  when(commandContextFactory.createCommandContext(command)).thenReturn(commandContext);
  String result=chain.execute(command);
  assertEquals("b:1:b:2:c",result);
  assertEquals("b:1:b:2:c:a:2:a:1",builder.toString());
}
