{
  String signalId=xtr.getAttributeValue(null,ATTRIBUTE_ID);
  String signalName=xtr.getAttributeValue(null,ATTRIBUTE_NAME);
  if (StringUtils.isEmpty(signalId)) {
    model.addProblem("signal must have an id",xtr);
  }
 else   if (StringUtils.isEmpty(signalName)) {
    model.addProblem("signal with id '" + signalId + "' has no name",xtr);
  }
 else {
    for (    Signal signal : model.getSignals()) {
      if (signal.getName().equals(signalName)) {
        model.addProblem("duplicate signal name",xtr);
      }
    }
    Signal signal=new Signal(signalId,signalName);
    String scope=xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,ATTRIBUTE_SCOPE);
    if (scope != null) {
      if (!scope.equals(Signal.SCOPE_GLOBAL) && !scope.equals(Signal.SCOPE_PROCESS_INSTANCE)) {
        model.addProblem("Invalid value for 'scope'. Only 'global' and 'processInstance' is supported, but value is '" + scope + "'",signal);
      }
      signal.setScope(scope);
    }
    BpmnXMLUtil.addXMLLocation(signal,xtr);
    BpmnXMLUtil.parseChildElements(ELEMENT_SIGNAL,signal,xtr,model);
    model.addSignal(signal);
  }
}
