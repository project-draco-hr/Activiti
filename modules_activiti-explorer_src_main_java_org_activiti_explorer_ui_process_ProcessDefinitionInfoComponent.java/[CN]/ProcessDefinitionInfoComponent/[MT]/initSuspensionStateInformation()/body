{
  List<Job> jobs=managementService.createJobQuery().processDefinitionId(processDefinition.getId()).orderByJobDuedate().asc().list();
  List<JobEntity> suspensionStateJobs=new ArrayList<JobEntity>();
  for (  Job job : jobs) {
    JobEntity jobEntity=(JobEntity)job;
    if (jobEntity.getJobHandlerType().equals(TimerSuspendProcessDefinitionHandler.TYPE) || jobEntity.getJobHandlerType().equals(TimerActivateProcessDefinitionHandler.TYPE)) {
      suspensionStateJobs.add(jobEntity);
    }
  }
  if (!suspensionStateJobs.isEmpty()) {
    Label suspensionStateTitle=new Label(i18nManager.getMessage(Messages.PROCESS_HEADER_SUSPENSION_STATE));
    suspensionStateTitle.addStyleName(ExplorerLayout.STYLE_H3);
    addComponent(suspensionStateTitle);
    addEmptySpace(this);
    for (    JobEntity jobEntity : suspensionStateJobs) {
      if (jobEntity.getJobHandlerType().equals(TimerSuspendProcessDefinitionHandler.TYPE)) {
        Label suspendLabel=new Label(i18nManager.getMessage(Messages.PROCESS_SCHEDULED_SUSPEND,Constants.DEFAULT_TIME_FORMATTER.format(jobEntity.getDuedate())),Label.CONTENT_XHTML);
        addComponent(suspendLabel);
      }
 else       if (jobEntity.getJobHandlerType().equals(TimerActivateProcessDefinitionHandler.TYPE)) {
        Label suspendLabel=new Label(i18nManager.getMessage(Messages.PROCESS_SCHEDULED_ACTIVATE,Constants.DEFAULT_TIME_FORMATTER.format(jobEntity.getDuedate())),Label.CONTENT_XHTML);
        addComponent(suspendLabel);
      }
    }
  }
  addEmptySpace(this);
}
