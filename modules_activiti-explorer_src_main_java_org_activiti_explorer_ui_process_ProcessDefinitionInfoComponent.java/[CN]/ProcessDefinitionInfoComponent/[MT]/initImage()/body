{
  processImageContainer=new VerticalLayout();
  Label processTitle=new Label(i18nManager.getMessage(Messages.PROCESS_HEADER_DIAGRAM));
  processTitle.addStyleName(ExplorerLayout.STYLE_H3);
  processImageContainer.addComponent(processTitle);
  boolean didDrawImage=false;
  if (ExplorerApp.get().isUseJavascriptDiagram()) {
    try {
      final InputStream definitionStream=repositoryService.getResourceAsStream(processDefinition.getDeploymentId(),processDefinition.getResourceName());
      XMLInputFactory xif=XmlUtil.createSafeXmlInputFactory();
      XMLStreamReader xtr=xif.createXMLStreamReader(definitionStream);
      BpmnModel bpmnModel=new BpmnXMLConverter().convertToBpmnModel(xtr);
      if (!bpmnModel.getFlowLocationMap().isEmpty()) {
        int maxX=0;
        int maxY=0;
        for (        String key : bpmnModel.getLocationMap().keySet()) {
          GraphicInfo graphicInfo=bpmnModel.getGraphicInfo(key);
          double elementX=graphicInfo.getX() + graphicInfo.getWidth();
          if (maxX < elementX) {
            maxX=(int)elementX;
          }
          double elementY=graphicInfo.getY() + graphicInfo.getHeight();
          if (maxY < elementY) {
            maxY=(int)elementY;
          }
        }
        Panel imagePanel=new Panel();
        imagePanel.addStyleName(Reindeer.PANEL_LIGHT);
        imagePanel.setWidth(100,UNITS_PERCENTAGE);
        imagePanel.setHeight(100,UNITS_PERCENTAGE);
        URL explorerURL=ExplorerApp.get().getURL();
        URL url=new URL(explorerURL.getProtocol(),explorerURL.getHost(),explorerURL.getPort(),explorerURL.getPath().replace("/ui","") + "diagram-viewer/index.html?processDefinitionId=" + processDefinition.getId());
        Embedded browserPanel=new Embedded("",new ExternalResource(url));
        browserPanel.setType(Embedded.TYPE_BROWSER);
        browserPanel.setWidth(maxX + 350 + "px");
        browserPanel.setHeight(maxY + 220 + "px");
        HorizontalLayout panelLayout=new HorizontalLayout();
        panelLayout.setSizeUndefined();
        imagePanel.setContent(panelLayout);
        imagePanel.addComponent(browserPanel);
        processImageContainer.addComponent(imagePanel);
        didDrawImage=true;
      }
    }
 catch (    Exception e) {
      LOGGER.error("Error loading process diagram component",e);
    }
  }
  if (didDrawImage == false) {
    StreamResource diagram=null;
    if (processDefinition.getDiagramResourceName() != null) {
      diagram=new ProcessDefinitionImageStreamResourceBuilder().buildStreamResource(processDefinition,repositoryService);
    }
    if (diagram != null) {
      Embedded embedded=new Embedded(null,diagram);
      embedded.setType(Embedded.TYPE_IMAGE);
      embedded.setSizeUndefined();
      Panel imagePanel=new Panel();
      imagePanel.addStyleName(Reindeer.PANEL_LIGHT);
      imagePanel.setWidth(100,UNITS_PERCENTAGE);
      imagePanel.setHeight(100,UNITS_PERCENTAGE);
      HorizontalLayout panelLayout=new HorizontalLayout();
      panelLayout.setSizeUndefined();
      imagePanel.setContent(panelLayout);
      imagePanel.addComponent(embedded);
      processImageContainer.addComponent(imagePanel);
      didDrawImage=true;
    }
  }
  if (didDrawImage == false) {
    Label noImageAvailable=new Label(i18nManager.getMessage(Messages.PROCESS_NO_DIAGRAM));
    processImageContainer.addComponent(noImageAvailable);
  }
  addComponent(processImageContainer);
}
