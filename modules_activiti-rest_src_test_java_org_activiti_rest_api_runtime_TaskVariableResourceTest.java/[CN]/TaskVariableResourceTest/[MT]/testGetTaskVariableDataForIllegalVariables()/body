{
  try {
    Task task=taskService.newTask();
    taskService.saveTask(task);
    taskService.setVariableLocal(task.getId(),"localTaskVariable","this is a plain string variable");
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_TASK_VARIABLE_DATA,task.getId(),"localTaskVariable"));
    try {
      client.get();
      fail("Exception expected");
    }
 catch (    ResourceException expected) {
      assertEquals(Status.CLIENT_ERROR_NOT_FOUND,expected.getStatus());
      assertEquals("The variable does not have a binary data stream.",expected.getStatus().getDescription());
    }
    client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_TASK_VARIABLE_DATA,task.getId(),"unexistingVariable"));
    try {
      client.get();
      fail("Exception expected");
    }
 catch (    ResourceException expected) {
      assertEquals(Status.CLIENT_ERROR_NOT_FOUND,expected.getStatus());
      assertEquals("Task '" + task.getId() + "' doesn't have a variable with name: 'unexistingVariable'.",expected.getStatus().getDescription());
    }
  }
  finally {
    List<Task> tasks=taskService.createTaskQuery().list();
    for (    Task task : tasks) {
      taskService.deleteTask(task.getId(),true);
    }
  }
}
