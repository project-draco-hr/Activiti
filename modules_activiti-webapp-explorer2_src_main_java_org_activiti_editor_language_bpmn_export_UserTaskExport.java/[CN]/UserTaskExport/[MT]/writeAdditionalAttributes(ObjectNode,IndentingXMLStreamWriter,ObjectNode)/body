{
  String assignee=null;
  String candidateUsers=null;
  String candidateGroups=null;
  JsonNode assignmentPropertyNode=getProperty(PROPERTY_USERTASK_ASSIGNMENT,objectNode);
  if (assignmentPropertyNode != null) {
    JsonNode itemsArrayNode=assignmentPropertyNode.get(EDITOR_PROPERTIES_GENERAL_ITEMS);
    if (itemsArrayNode != null) {
      for (      JsonNode assignmentNode : itemsArrayNode) {
        JsonNode assignmentTypeNode=assignmentNode.get(PROPERTY_USERTASK_ASSIGNMENT_TYPE);
        JsonNode assignmentExpressionNode=assignmentNode.get(PROPERTY_USERTASK_ASSIGNMENT_EXPRESSION);
        if (assignmentTypeNode != null && assignmentExpressionNode != null) {
          String assignmentType=assignmentTypeNode.asText();
          if (PROPERTY_USERTASK_ASSIGNEE.equalsIgnoreCase(assignmentType)) {
            assignee=assignmentExpressionNode.asText();
          }
 else           if (PROPERTY_USERTASK_CANDIDATE_USERS.equalsIgnoreCase(assignmentType)) {
            candidateUsers=assignmentExpressionNode.asText();
          }
 else           if (PROPERTY_USERTASK_CANDIDATE_GROUPS.equalsIgnoreCase(assignmentType)) {
            candidateGroups=assignmentExpressionNode.asText();
          }
        }
      }
    }
  }
  if (StringUtils.isNotEmpty(assignee)) {
    writeQualifiedAttribute(PROPERTY_USERTASK_ASSIGNEE,assignee,xtw);
  }
  if (StringUtils.isNotEmpty(candidateUsers)) {
    writeQualifiedAttribute(PROPERTY_USERTASK_CANDIDATE_USERS,candidateUsers,xtw);
  }
  if (StringUtils.isNotEmpty(candidateGroups)) {
    writeQualifiedAttribute(PROPERTY_USERTASK_CANDIDATE_GROUPS,candidateGroups,xtw);
  }
  if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_DUEDATE,objectNode))) {
    writeQualifiedAttribute("dueDate",getPropertyValueAsString(PROPERTY_DUEDATE,objectNode),xtw);
  }
  if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_PRIORITY,objectNode))) {
    writeQualifiedAttribute("priority",getPropertyValueAsString(PROPERTY_PRIORITY,objectNode),xtw);
  }
  if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_FORMKEY,objectNode))) {
    writeQualifiedAttribute("formKey",getPropertyValueAsString(PROPERTY_FORMKEY,objectNode),xtw);
  }
  super.writeAdditionalAttributes(objectNode,xtw,modelNode);
}
