{
  org.activiti.engine.repository.Deployment tenantDeployment=repositoryService.createDeployment().addClasspathResource("org/activiti/rest/service/api/runtime/SignalsResourceTest.process-signal-start.bpmn20.xml").tenantId("my tenant").deploy();
  try {
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_SIGNALS));
    ObjectNode requestNode=objectMapper.createObjectNode();
    requestNode.put("signalName","The Signal");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    client.release();
    assertEquals(1,runtimeService.createProcessInstanceQuery().processInstanceWithoutTenantId().processDefinitionKey("processWithSignalStart1").count());
    requestNode.put("tenantId","my tenant");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    client.release();
    assertEquals(1,runtimeService.createProcessInstanceQuery().processInstanceTenantId("my tenant").processDefinitionKey("processWithSignalStart1").count());
    ArrayNode vars=requestNode.putArray("variables");
    ObjectNode var=vars.addObject();
    var.put("name","testVar");
    var.put("value","test");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    client.release();
    assertEquals(1,runtimeService.createProcessInstanceQuery().processInstanceTenantId("my tenant").processDefinitionKey("processWithSignalStart1").variableValueEquals("testVar","test").count());
    requestNode.remove("tenantId");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
    client.release();
    assertEquals(1,runtimeService.createProcessInstanceQuery().processInstanceWithoutTenantId().processDefinitionKey("processWithSignalStart1").variableValueEquals("testVar","test").count());
  }
  finally {
    if (tenantDeployment != null) {
      repositoryService.deleteDeployment(tenantDeployment.getId(),true);
    }
  }
}
