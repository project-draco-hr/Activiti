{
  form.addField("id",new TextField(i18nManager.getMessage(Messages.USER_ID)));
  form.getField("id").setRequired(true);
  form.getField("id").setRequiredError(i18nManager.getMessage(Messages.USER_ID_REQUIRED));
  form.getField("id").focus();
  form.getField("id").addValidator(new Validator(){
    public void validate(    Object value) throws InvalidValueException {
      if (!isValid(value)) {
        throw new InvalidValueException(i18nManager.getMessage(Messages.USER_ID_UNIQUE));
      }
    }
    public boolean isValid(    Object value){
      if (value != null) {
        return identityService.createUserQuery().userId(value.toString()).singleResult() == null;
      }
      return false;
    }
  }
);
  form.addField("password",new PasswordField(i18nManager.getMessage(Messages.USER_PASSWORD)));
  form.getField("password").setRequired(true);
  form.getField("password").setRequiredError(i18nManager.getMessage(Messages.USER_PASSWORD_REQUIRED));
  StringLengthValidator passwordLengthValidator=new StringLengthValidator(i18nManager.getMessage(Messages.USER_PASSWORD_MIN_LENGTH,5),5,-1,false);
  form.getField("password").addValidator(passwordLengthValidator);
  form.addField("firstName",new TextField(i18nManager.getMessage(Messages.USER_FIRSTNAME)));
  form.addField("lastName",new TextField(i18nManager.getMessage(Messages.USER_LASTNAME)));
  form.addField("email",new TextField(i18nManager.getMessage(Messages.USER_EMAIL)));
}
