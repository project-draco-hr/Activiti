{
  try {
    SignavioConnectorInterface signavioConnector=(SignavioConnectorInterface)CycleSessionContext.get(RuntimeConnectorList.class).getConnectorById(artifact.getConnectorId());
    Content content=new Content();
    SignavioConnectorConfiguration configuration=(SignavioConnectorConfiguration)signavioConnector.getConfiguration();
    String modelAsPngUrl=configuration.getPngUrl(artifact.getNodeId(),signavioConnector.getSecurityToken());
    InputStream is=new URL(modelAsPngUrl).openStream();
    content.setValue(is);
    if (is.available() <= 201) {
      try {
        BpmnParse parse=ValidateActivitiDeployment.createParseObject(signavioConnector,artifact);
        try {
          parse.execute();
        }
 catch (        ActivitiException ex) {
        }
        if (parse.getProcessDefinitions().size() > 0) {
          is=ProcessDiagramGenerator.generatePngDiagram(parse.getProcessDefinitions().get(0));
          content.setValue(is);
        }
      }
 catch (      Exception ex) {
        log.log(Level.SEVERE,"Couldn't create PNG from BPMN 2.0 XML. Ignoring.",ex);
      }
    }
    return content;
  }
 catch (  Exception ex) {
    throw new RepositoryException("Exception while accessing Signavio repository",ex);
  }
}
