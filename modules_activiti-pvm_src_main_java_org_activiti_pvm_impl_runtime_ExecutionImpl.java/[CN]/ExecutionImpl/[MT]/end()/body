{
  isActive=false;
  isEnded=true;
  ensureExecutionsInitialized();
  if (!executions.isEmpty()) {
    List<ExecutionImpl> childExecutions=new ArrayList<ExecutionImpl>(executions);
    for (    ExecutionImpl childExecution : childExecutions) {
      childExecution.end();
    }
  }
  ensureSubProcessInstanceInitialized();
  if (subProcessInstance != null) {
    subProcessInstance.setSuperExecution(null);
    subProcessInstance.end();
  }
  ensureParentInitialized();
  if (parent != null) {
    ensureActivityInitialized();
    activity=activity.getParentActivity();
    while (activity != null && !activity.isScope()) {
      activity=activity.getParentActivity();
    }
    if (activity != null && parent.getExecutions().size() == 1) {
      ActivityBehavior activityBehavior=activity.getActivityBehavior();
      if (activityBehavior instanceof CompositeActivityBehavior) {
        ((CompositeActivityBehavior)activityBehavior).lastExecutionEnded(this);
      }
 else {
        end();
      }
    }
 else {
      remove();
    }
  }
 else {
    ensureSuperExecutionInitialized();
    if (superExecution != null) {
      ExecutionImpl superExecutionCopy=superExecution;
      superExecution.setSubProcessInstance(null);
      setSuperExecution(null);
      superExecutionCopy.signal("continue process",null);
    }
    performOperation(AtomicOperation.PROCESS_END);
  }
}
