{
  isActive=false;
  isEnded=true;
  ensureExecutionsInitialized();
  if (!executions.isEmpty()) {
    List<ExecutionImpl> childExecutions=new ArrayList<ExecutionImpl>(executions);
    for (    ExecutionImpl childExecution : childExecutions) {
      childExecution.end();
    }
  }
  ensureSubProcessInstanceInitialized();
  if (subProcessInstance != null) {
    subProcessInstance.setSuperExecution(null);
    subProcessInstance.end();
  }
  ensureParentInitialized();
  if (parent != null) {
    ActivityImpl parentScopeActivity=activity.getParentActivity();
    while (parentScopeActivity != null && !parentScopeActivity.isScope()) {
      parentScopeActivity=parentScopeActivity.getParentActivity();
    }
    ExecutionImpl parent=this.parent;
    this.parent.removeExecution(this);
    if (parentScopeActivity != null && parent.getExecutions().isEmpty()) {
      ActivityBehavior activityBehavior=parentScopeActivity.getActivityBehavior();
      if (activityBehavior instanceof CompositeActivityBehavior) {
        ((CompositeActivityBehavior)activityBehavior).lastExecutionEnded(parent,parentScopeActivity,this);
      }
    }
  }
 else {
    ensureSuperExecutionInitialized();
    if (superExecution != null) {
      ExecutionImpl superExecutionCopy=superExecution;
      superExecution.setSubProcessInstance(null);
      setSuperExecution(null);
      superExecutionCopy.signal("continue process",null);
    }
  }
}
