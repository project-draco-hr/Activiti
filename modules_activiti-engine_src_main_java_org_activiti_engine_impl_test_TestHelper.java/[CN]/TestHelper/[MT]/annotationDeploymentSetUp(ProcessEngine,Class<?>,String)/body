{
  String deploymentId=null;
  Method method=null;
  try {
    method=testClass.getMethod(methodName,(Class<?>[])null);
  }
 catch (  Exception e) {
    log.warn("Could not get method by reflection. This could happen if you are using @Parameters in combination with annotations.",e);
    return null;
  }
  Deployment deploymentAnnotation=method.getAnnotation(Deployment.class);
  if (deploymentAnnotation != null) {
    log.debug("annotation @Deployment creates deployment for {}.{}",testClass.getSimpleName(),methodName);
    String[] resources=deploymentAnnotation.resources();
    if (resources.length == 0) {
      String name=method.getName();
      String resource=getBpmnProcessDefinitionResource(testClass,name);
      resources=new String[]{resource};
    }
    DeploymentBuilder deploymentBuilder=processEngine.getRepositoryService().createDeployment().name(testClass.getSimpleName() + "." + methodName);
    for (    String resource : resources) {
      deploymentBuilder.addClasspathResource(resource);
    }
    deploymentId=deploymentBuilder.deploy().getId();
  }
  return deploymentId;
}
