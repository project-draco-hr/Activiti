{
  if (configurationProperties == null) {
    throw new ActivitiException("configurationProperties is null");
  }
  String processEngineName=configurationProperties.getProperty("process.engine.name");
  if (processEngineName != null) {
    this.processEngineName=processEngineName;
  }
  String databaseName=configurationProperties.getProperty("database");
  if (databaseName != null) {
    this.databaseName=databaseName;
  }
  String jdbcDriver=configurationProperties.getProperty("jdbc.driver");
  if (jdbcDriver != null) {
    this.jdbcDriver=jdbcDriver;
  }
  String jdbcUrl=configurationProperties.getProperty("jdbc.url");
  if (jdbcUrl != null) {
    this.jdbcUrl=jdbcUrl;
  }
  String jdbcUsername=configurationProperties.getProperty("jdbc.username");
  if (jdbcUsername != null) {
    this.jdbcUsername=jdbcUsername;
  }
  String jdbcPassword=configurationProperties.getProperty("jdbc.password");
  if (jdbcPassword != null) {
    this.jdbcPassword=jdbcPassword;
  }
  String dbSchemaStrategy=configurationProperties.getProperty("db.schema.strategy");
  if (dbSchemaStrategy != null) {
    String strategy=dbSchemaStrategy.toUpperCase().replace("-","_");
    this.dbSchemaStrategy=DbSchemaStrategy.valueOf(strategy);
  }
  String jobExecutorAutoActivate=configurationProperties.getProperty("job.executor.auto.activate");
  if ((jobExecutorAutoActivate != null) && (("false".equals(jobExecutorAutoActivate)) || ("disabled".equals(jobExecutorAutoActivate)) || ("off".equals(jobExecutorAutoActivate)))) {
    this.jobExecutorAutoActivate=false;
  }
  String wsSyncFactory=configurationProperties.getProperty("ws.sync.factory");
  if (wsSyncFactory != null) {
    this.wsSyncFactoryClassName=wsSyncFactory;
  }
  String mailServerSmtpHost=configurationProperties.getProperty("mail.smtp.host");
  if (mailServerSmtpHost != null) {
    this.mailServerSmtpHost=mailServerSmtpHost;
  }
  String mailServerSmtpPort=configurationProperties.getProperty("mail.smtp.port");
  if (mailServerSmtpPort != null) {
    try {
      this.mailServerSmtpPort=Integer.parseInt(mailServerSmtpPort);
    }
 catch (    NumberFormatException e) {
      throw new ActivitiException("Invalid port number: " + mailServerSmtpPort,e);
    }
  }
  String mailServerSmtpUserName=configurationProperties.getProperty("mail.smtp.user");
  if (mailServerSmtpUserName != null) {
    this.mailServerSmtpUserName=mailServerSmtpUserName;
  }
  String mailServerSmtpPassword=configurationProperties.getProperty("mail.smtp.password");
  if (mailServerSmtpPassword != null) {
    this.mailServerSmtpPassword=mailServerSmtpPassword;
  }
  String mailServerDefaultFrom=configurationProperties.getProperty("mail.default.from");
  if (mailServerDefaultFrom != null) {
    this.mailServerDefaultFrom=mailServerDefaultFrom;
  }
  return this;
}
