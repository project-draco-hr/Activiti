{
  if (context == null) {
    throw new NullPointerException();
  }
  if (isResolvable(base)) {
    if (readOnly) {
      throw new PropertyNotWritableException("resolver is read-only");
    }
    Method method=toBeanProperty(base,property).getWriteMethod();
    if (method == null) {
      throw new PropertyNotWritableException("Cannot write property: " + property);
    }
    try {
      method.invoke(base,value);
    }
 catch (    InvocationTargetException e) {
      throw new ELException("Cannot write property: " + property,e.getTargetException());
    }
catch (    IllegalAccessException e) {
      throw new PropertyNotWritableException("Cannot write property: " + property,e);
    }
    context.setPropertyResolved(true);
  }
}
