{
  Model model=null;
  try {
    Calendar createTime=Calendar.getInstance();
    createTime.set(Calendar.MILLISECOND,0);
    ClockUtil.setCurrentTime(createTime.getTime());
    ObjectNode requestNode=objectMapper.createObjectNode();
    requestNode.put("name","Model name");
    requestNode.put("category","Model category");
    requestNode.put("key","Model key");
    requestNode.put("metaInfo","Model metainfo");
    requestNode.put("deploymentId",deploymentId);
    requestNode.put("version",2);
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_MODEL_COLLECTION));
    Representation response=client.post(requestNode);
    assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
    JsonNode responseNode=objectMapper.readTree(response.getStream());
    assertNotNull(responseNode);
    assertEquals("Model name",responseNode.get("name").getTextValue());
    assertEquals("Model key",responseNode.get("key").getTextValue());
    assertEquals("Model category",responseNode.get("category").getTextValue());
    assertEquals(2,responseNode.get("version").getIntValue());
    assertEquals("Model metainfo",responseNode.get("metaInfo").getTextValue());
    assertEquals(deploymentId,responseNode.get("deploymentId").getTextValue());
    assertEquals(createTime.getTime().getTime(),getDateFromISOString(responseNode.get("createTime").getTextValue()).getTime());
    assertEquals(createTime.getTime().getTime(),getDateFromISOString(responseNode.get("lastUpdateTime").getTextValue()).getTime());
    assertTrue(responseNode.get("url").getTextValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_MODEL,responseNode.get("id").getTextValue())));
    assertTrue(responseNode.get("deploymentUrl").getTextValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_DEPLOYMENT,deploymentId)));
    model=repositoryService.createModelQuery().modelId(responseNode.get("id").getTextValue()).singleResult();
    assertNotNull(model);
    assertEquals("Model category",model.getCategory());
    assertEquals("Model name",model.getName());
    assertEquals("Model key",model.getKey());
    assertEquals(deploymentId,model.getDeploymentId());
    assertEquals("Model metainfo",model.getMetaInfo());
    assertEquals(2,model.getVersion().intValue());
  }
  finally {
    if (model != null) {
      try {
        repositoryService.deleteModel(model.getId());
      }
 catch (      Throwable ignore) {
      }
    }
  }
}
