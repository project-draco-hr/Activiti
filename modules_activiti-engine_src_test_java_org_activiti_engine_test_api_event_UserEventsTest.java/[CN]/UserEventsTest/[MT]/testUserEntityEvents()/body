{
  User user=null;
  try {
    user=identityService.newUser("fred");
    user.setFirstName("Frederik");
    user.setLastName("Heremans");
    identityService.saveUser(user);
    assertEquals(1,listener.getEventsReceived().size());
    ActivitiEntityEvent event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
    assertTrue(event.getEntity() instanceof User);
    User userFromEvent=(User)event.getEntity();
    assertEquals("fred",userFromEvent.getId());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
    user.setFirstName("Anna");
    identityService.saveUser(user);
    assertEquals(1,listener.getEventsReceived().size());
    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());
    assertTrue(event.getEntity() instanceof User);
    userFromEvent=(User)event.getEntity();
    assertEquals("fred",userFromEvent.getId());
    assertEquals("Anna",userFromEvent.getFirstName());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
    identityService.deleteUser(user.getId());
    assertEquals(1,listener.getEventsReceived().size());
    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_DELETED,event.getType());
    assertTrue(event.getEntity() instanceof User);
    userFromEvent=(User)event.getEntity();
    assertEquals("fred",userFromEvent.getId());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
  }
  finally {
    if (user != null && user.getId() != null) {
      identityService.deleteUser(user.getId());
    }
  }
}
