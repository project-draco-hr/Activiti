{
  try {
    Task task=taskService.newTask();
    taskService.saveTask(task);
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_TASK_VARIABLES_COLLECTION,task.getId()));
    ArrayNode requestNode=objectMapper.createArrayNode();
    ObjectNode varNode=requestNode.addObject();
    varNode.put("name","stringVar");
    varNode.put("value","String value");
    varNode.put("scope","local");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
    assertEquals("String value",taskService.getVariable(task.getId(),"stringVar"));
    client.release();
    varNode.put("name","integerVar");
    varNode.put("value",123);
    varNode.put("scope","local");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
    assertEquals(123,taskService.getVariable(task.getId(),"integerVar"));
    client.release();
    varNode.put("name","doubleVar");
    varNode.put("value",123.456);
    varNode.put("scope","local");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
    assertEquals(123.456,taskService.getVariable(task.getId(),"doubleVar"));
    client.release();
    varNode.put("name","booleanVar");
    varNode.put("value",Boolean.TRUE);
    varNode.put("scope","local");
    client.post(requestNode);
    assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
    assertEquals(Boolean.TRUE,taskService.getVariable(task.getId(),"booleanVar"));
    client.release();
  }
  finally {
    List<Task> tasks=taskService.createTaskQuery().list();
    for (    Task task : tasks) {
      taskService.deleteTask(task.getId(),true);
    }
  }
}
