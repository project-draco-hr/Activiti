{
  ArrayNode variablesNode=objectMapper.createArrayNode();
  ObjectNode stringVarNode=variablesNode.addObject();
  stringVarNode.put("name","stringVariable");
  stringVarNode.put("value","simple string value");
  stringVarNode.put("type","string");
  ObjectNode integerVarNode=variablesNode.addObject();
  integerVarNode.put("name","integerVariable");
  integerVarNode.put("value",1234);
  integerVarNode.put("type","integer");
  ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE_COLLECTION));
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("processDefinitionKey","processOne");
  requestNode.put("returnVariables",true);
  requestNode.put("variables",variablesNode);
  client.post(requestNode);
  assertEquals(Status.SUCCESS_CREATED,client.getResponse().getStatus());
  JsonNode responseNode=objectMapper.readTree(client.getResponseEntity().getStream());
  assertEquals("processTask",responseNode.get("activityId").asText());
  assertEquals(false,responseNode.get("ended").asBoolean());
  JsonNode variablesArrayNode=responseNode.get("variables");
  assertEquals(2,variablesArrayNode.size());
  for (  JsonNode variableNode : variablesArrayNode) {
    if ("stringVariable".equals(variableNode.get("name").asText())) {
      assertEquals("simple string value",variableNode.get("value").asText());
      assertEquals("string",variableNode.get("type").asText());
    }
 else     if ("integerVariable".equals(variableNode.get("name").asText())) {
      assertEquals(1234,variableNode.get("value").asInt());
      assertEquals("integer",variableNode.get("type").asText());
    }
 else {
      fail("Unexpected variable " + variableNode.get("name").asText());
    }
  }
  ProcessInstance processInstance=runtimeService.createProcessInstanceQuery().singleResult();
  assertNotNull(processInstance);
  Map<String,Object> processVariables=runtimeService.getVariables(processInstance.getId());
  assertEquals(2,processVariables.size());
  assertEquals("simple string value",processVariables.get("stringVariable"));
  assertEquals(1234,processVariables.get("integerVariable"));
}
