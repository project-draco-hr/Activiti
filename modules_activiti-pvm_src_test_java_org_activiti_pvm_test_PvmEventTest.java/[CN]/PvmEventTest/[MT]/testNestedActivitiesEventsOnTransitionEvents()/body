{
  EventCollector eventCollector=new EventCollector();
  PvmProcessDefinition processDefinition=new ProcessDefinitionBuilder("events").eventListener(EventListener.EVENTNAME_START,eventCollector).eventListener(EventListener.EVENTNAME_END,eventCollector).createActivity("start").initial().behavior(new Automatic()).eventListener(EventListener.EVENTNAME_START,eventCollector).eventListener(EventListener.EVENTNAME_END,eventCollector).startTransition("wait").eventListener(eventCollector).endTransition().endActivity().createActivity("outerscope").eventListener(EventListener.EVENTNAME_START,eventCollector).eventListener(EventListener.EVENTNAME_END,eventCollector).createActivity("innerscope").scope().eventListener(EventListener.EVENTNAME_START,eventCollector).eventListener(EventListener.EVENTNAME_END,eventCollector).createActivity("wait").behavior(new WaitState()).eventListener(EventListener.EVENTNAME_START,eventCollector).eventListener(EventListener.EVENTNAME_END,eventCollector).transition("end").endActivity().endActivity().endActivity().createActivity("end").behavior(new WaitState()).endActivity().buildProcessDefinition();
  PvmProcessInstance processInstance=processDefinition.createProcessInstance();
  processInstance.start();
  List<String> expectedEvents=new ArrayList<String>();
  expectedEvents.add("start on ProcessDefinition(events)");
  expectedEvents.add("start on Activity(start)");
  expectedEvents.add("end on Activity(start)");
  expectedEvents.add("take on (start)-->(wait)");
  expectedEvents.add("start on Activity(outerscope)");
  expectedEvents.add("start on Activity(innerscope)");
  expectedEvents.add("start on Activity(wait)");
  assertEquals("expected " + expectedEvents + ", but was \n"+ eventCollector+ "\n",expectedEvents,eventCollector.events);
  PvmExecution execution=processInstance.findExecution("wait");
  execution.signal(null,null);
  expectedEvents.add("end on Activity(wait)");
  expectedEvents.add("end on Activity(innerscope)");
  expectedEvents.add("end on Activity(outerscope)");
  assertEquals("expected " + expectedEvents + ", but was \n"+ eventCollector+ "\n",expectedEvents,eventCollector.events);
}
