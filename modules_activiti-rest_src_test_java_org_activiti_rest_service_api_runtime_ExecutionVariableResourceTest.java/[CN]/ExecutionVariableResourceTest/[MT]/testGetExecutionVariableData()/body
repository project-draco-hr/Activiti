{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("processOne");
  runtimeService.setVariableLocal(processInstance.getId(),"var","This is a binary piece of text".getBytes());
  Execution childExecution=runtimeService.createExecutionQuery().parentId(processInstance.getId()).singleResult();
  assertNotNull(childExecution);
  runtimeService.setVariableLocal(childExecution.getId(),"var","This is a binary piece of text in the child execution".getBytes());
  HttpResponse response=executeHttpRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE_DATA,childExecution.getId(),"var")),HttpStatus.SC_OK);
  String actualResponseBytesAsText=IOUtils.toString(response.getEntity().getContent());
  assertEquals("This is a binary piece of text in the child execution",actualResponseBytesAsText);
  assertEquals("application/octet-stream",response.getEntity().getContentType().getValue());
  response=executeHttpRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE_DATA,childExecution.getId(),"var") + "?scope=global"),HttpStatus.SC_OK);
  actualResponseBytesAsText=IOUtils.toString(response.getEntity().getContent());
  assertEquals("This is a binary piece of text",actualResponseBytesAsText);
  assertEquals("application/octet-stream",response.getEntity().getContentType().getValue());
}
