{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("processOne");
  runtimeService.setVariable(processInstance.getId(),"variable","processValue");
  Execution childExecution=runtimeService.createExecutionQuery().parentId(processInstance.getId()).singleResult();
  assertNotNull(childExecution);
  runtimeService.setVariableLocal(childExecution.getId(),"variable","childValue");
  CloseableHttpResponse response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE,childExecution.getId(),"variable")),HttpStatus.SC_OK);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertEquals("local",responseNode.get("scope").asText());
  assertEquals("childValue",responseNode.get("value").asText());
  assertEquals("variable",responseNode.get("name").asText());
  assertEquals("string",responseNode.get("type").asText());
  response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE,childExecution.getId(),"variable") + "?scope=global"),HttpStatus.SC_OK);
  responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertEquals("global",responseNode.get("scope").asText());
  assertEquals("processValue",responseNode.get("value").asText());
  assertEquals("variable",responseNode.get("name").asText());
  assertEquals("string",responseNode.get("type").asText());
  response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE,processInstance.getId(),"variable") + "?scope=illegal"),HttpStatus.SC_BAD_REQUEST);
  closeResponse(response);
  response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE,"unexisting","variable")),HttpStatus.SC_NOT_FOUND);
  closeResponse(response);
  response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_EXECUTION_VARIABLE,processInstance.getId(),"unexistingVariable")),HttpStatus.SC_NOT_FOUND);
  closeResponse(response);
}
