{
  if (StringUtils.isNotEmpty(extensionElement.getName())) {
    if (StringUtils.isNotEmpty(extensionElement.getNamespace())) {
      if (StringUtils.isNotEmpty(extensionElement.getNamespacePrefix())) {
        xtw.writeStartElement(extensionElement.getNamespacePrefix(),extensionElement.getName(),extensionElement.getNamespace());
        if (namespaceMap.containsKey(extensionElement.getNamespacePrefix()) == false || namespaceMap.get(extensionElement.getNamespacePrefix()).equals(extensionElement.getNamespace()) == false) {
          xtw.writeNamespace(extensionElement.getNamespacePrefix(),extensionElement.getNamespace());
          namespaceMap.put(extensionElement.getNamespacePrefix(),extensionElement.getNamespace());
        }
      }
 else {
        xtw.writeStartElement(extensionElement.getNamespace(),extensionElement.getName());
      }
    }
 else {
      xtw.writeStartElement(extensionElement.getName());
    }
    for (    ExtensionAttribute attribute : extensionElement.getAttributes().values()) {
      if (StringUtils.isNotEmpty(attribute.getName()) && attribute.getValue() != null) {
        if (StringUtils.isNotEmpty(attribute.getNamespace())) {
          if (StringUtils.isNotEmpty(attribute.getNamespacePrefix())) {
            if (namespaceMap.containsKey(attribute.getNamespacePrefix()) == false || namespaceMap.get(attribute.getNamespacePrefix()).equals(attribute.getNamespace()) == false) {
              xtw.writeNamespace(attribute.getNamespacePrefix(),attribute.getNamespace());
              namespaceMap.put(attribute.getNamespacePrefix(),attribute.getNamespace());
            }
            xtw.writeAttribute(attribute.getNamespacePrefix(),attribute.getNamespace(),attribute.getName(),attribute.getValue());
          }
 else {
            xtw.writeAttribute(attribute.getNamespace(),attribute.getName(),attribute.getValue());
          }
        }
 else {
          xtw.writeAttribute(attribute.getName(),attribute.getValue());
        }
      }
    }
    if (extensionElement.getElementText() != null) {
      xtw.writeCharacters(extensionElement.getElementText());
    }
 else {
      for (      ExtensionElement childElement : extensionElement.getChildElements().values()) {
        writeExtensionElement(childElement,namespaceMap,xtw);
      }
    }
    xtw.writeEndElement();
  }
}
