{
  UserTask userTask=new UserTask();
  userTask.setId(conversion.getUniqueNumberedId(USER_TASK_PREFIX));
  userTask.setName(humanStepDefinition.getName());
  userTask.setDocumentation(humanStepDefinition.getDescription());
  if (humanStepDefinition.isAssigneeInitiator()) {
    userTask.setAssignee(getInitiatorExpression());
    for (    StartEvent startEvent : BpmnModelUtil.findFlowElementsOfType(conversion.getProcess(),StartEvent.class)) {
      startEvent.setInitiator(getInitiatorVariable());
    }
  }
 else   if (humanStepDefinition.getAssignee() != null) {
    userTask.setAssignee(humanStepDefinition.getAssignee());
  }
  if (humanStepDefinition.getCandidateUsers() != null && humanStepDefinition.getCandidateUsers().size() > 0) {
    userTask.setCandidateUsers(humanStepDefinition.getCandidateUsers());
  }
  if (humanStepDefinition.getCandidateGroups() != null && humanStepDefinition.getCandidateGroups().size() > 0) {
    userTask.setCandidateGroups(humanStepDefinition.getCandidateGroups());
  }
  if (humanStepDefinition.getForm() != null) {
    FormDefinition formDefinition=humanStepDefinition.getForm();
    for (    FormPropertyDefinition propertyDefinition : formDefinition.getFormProperties()) {
      FormProperty formProperty=new FormProperty();
      formProperty.setId(propertyDefinition.getPropertyName());
      formProperty.setName(propertyDefinition.getPropertyName());
      formProperty.setRequired(propertyDefinition.isRequired());
      String type=DefaultFormPropertyTypes.TEXT;
      if (DefaultFormPropertyTypes.NUMBER.equals(propertyDefinition.getType())) {
        type="long";
      }
 else       if (DefaultFormPropertyTypes.DATE.equals(propertyDefinition.getType())) {
        type="date";
      }
 else       if (DefaultFormPropertyTypes.LIST.equals(propertyDefinition.getType())) {
        type="enum";
        if (!propertyDefinition.getValues().isEmpty()) {
          List<FormValue> formValues=new ArrayList<FormValue>(propertyDefinition.getValues().size());
          for (          String formValueString : propertyDefinition.getValues()) {
            FormValue formValue=new FormValue();
            formValue.setId(formValueString);
            formValue.setName(formValueString);
            formValues.add(formValue);
          }
        }
      }
      formProperty.setType(type);
      userTask.getFormProperties().add(formProperty);
    }
  }
  return userTask;
}
