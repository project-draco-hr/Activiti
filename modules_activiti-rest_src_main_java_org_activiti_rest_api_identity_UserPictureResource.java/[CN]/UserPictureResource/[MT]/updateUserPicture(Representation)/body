{
  User user=getUserFromRequest();
  if (!MediaType.MULTIPART_FORM_DATA.isCompatible(representation.getMediaType())) {
    throw new ResourceException(Status.CLIENT_ERROR_UNSUPPORTED_MEDIA_TYPE.getCode(),"The request should be of type 'multipart/form-data'.",null,null);
  }
  RestletFileUpload upload=new RestletFileUpload(new DiskFileItemFactory());
  try {
    FileItem uploadItem=null;
    List<FileItem> items=upload.parseRepresentation(representation);
    String mimeType=MediaType.IMAGE_JPEG.toString();
    for (    FileItem fileItem : items) {
      if (fileItem.isFormField()) {
        if ("mimeType".equals(fileItem.getFieldName())) {
          mimeType=fileItem.getString("UTF-8");
        }
      }
 else       if (fileItem.getName() != null) {
        uploadItem=fileItem;
      }
    }
    if (uploadItem == null) {
      throw new ActivitiIllegalArgumentException("No file content was found in request body.");
    }
    int size=((Long)uploadItem.getSize()).intValue();
    ByteArrayOutputStream bytesOutput=new ByteArrayOutputStream(size);
    IOUtils.copy(uploadItem.getInputStream(),bytesOutput);
    Picture newPicture=new Picture(bytesOutput.toByteArray(),mimeType);
    ActivitiUtil.getIdentityService().setUserPicture(user.getId(),newPicture);
  }
 catch (  FileUploadException e) {
    throw new ActivitiException("Error with uploaded file: " + e.getMessage(),e);
  }
catch (  IOException e) {
    throw new ActivitiException("Error while reading uploaded file: " + e.getMessage(),e);
  }
}
