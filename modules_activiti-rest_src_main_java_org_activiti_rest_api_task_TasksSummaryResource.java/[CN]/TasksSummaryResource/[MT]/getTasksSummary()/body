{
  if (authenticate() == false)   return null;
  String user=getQuery().getValues("user");
  if (user == null) {
    throw new ActivitiIllegalArgumentException("No user provided");
  }
  TaskService ts=ActivitiUtil.getTaskService();
  GroupQuery query=ActivitiUtil.getIdentityService().createGroupQuery().groupMember(user).groupType("assignment");
  List<Group> groups=query.list();
  ObjectNode groupsJSON=new ObjectMapper().createObjectNode();
  for (  Group group : groups) {
    long tasksInGroup=ts.createTaskQuery().taskCandidateGroup(group.getId()).count();
    groupsJSON.put(group.getName(),tasksInGroup);
  }
  ObjectNode summaryResponseJSON=new ObjectMapper().createObjectNode();
  ObjectNode totalAssignedJSON=new ObjectMapper().createObjectNode();
  totalAssignedJSON.put("total",ts.createTaskQuery().taskAssignee(user).count());
  summaryResponseJSON.put("assigned",totalAssignedJSON);
  ObjectNode totalUnassignedJSON=new ObjectMapper().createObjectNode();
  totalUnassignedJSON.put("total",ts.createTaskQuery().taskCandidateUser(user).count());
  totalUnassignedJSON.put("groups",groupsJSON);
  summaryResponseJSON.put("unassigned",totalUnassignedJSON);
  return summaryResponseJSON;
}
