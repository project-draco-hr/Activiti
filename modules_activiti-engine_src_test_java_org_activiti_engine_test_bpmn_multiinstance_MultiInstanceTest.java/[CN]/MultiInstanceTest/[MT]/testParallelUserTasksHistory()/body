{
  runtimeService.startProcessInstanceByKey("miParallelUserTasks");
  for (  Task task : taskService.createTaskQuery().list()) {
    taskService.complete(task.getId());
  }
  List<HistoricTaskInstance> historicTaskInstances=historyService.createHistoricTaskInstanceQuery().orderByTaskAssignee().asc().list();
  for (int i=0; i < historicTaskInstances.size(); i++) {
    HistoricTaskInstance hi=historicTaskInstances.get(i);
    assertNotNull(hi.getStartTime());
    assertNotNull(hi.getEndTime());
    assertEquals("kermit_" + i,hi.getAssignee());
  }
  List<HistoricActivityInstance> historicActivityInstances=historyService.createHistoricActivityInstanceQuery().list();
  assertEquals(3,historicActivityInstances.size());
  for (  HistoricActivityInstance hai : historicActivityInstances) {
    assertNotNull(hai.getStartTime());
    assertNotNull(hai.getEndTime());
    assertNotNull(hai.getAssignee());
    assertEquals("userTask",hai.getActivityType());
  }
}
