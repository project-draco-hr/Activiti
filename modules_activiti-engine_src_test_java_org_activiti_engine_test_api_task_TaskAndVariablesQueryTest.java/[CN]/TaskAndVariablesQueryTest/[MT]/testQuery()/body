{
  Task task=(Task)taskService.createTaskQuery().includeTaskLocalVariables().taskAssignee("gonzo").singleResult();
  Map<String,Object> variableMap=task.getTaskLocalVariables();
  assertEquals(2,variableMap.size());
  assertEquals(0,task.getProcessVariables().size());
  assertNotNull(variableMap.get("testVar"));
  assertEquals("someVariable",variableMap.get("testVar"));
  assertNotNull(variableMap.get("testVar2"));
  assertEquals(123,variableMap.get("testVar2"));
  List<Task> tasks=taskService.createTaskQuery().list();
  assertEquals(3,tasks.size());
  task=(Task)taskService.createTaskQuery().includeProcessVariables().taskAssignee("gonzo").singleResult();
  assertEquals(0,task.getProcessVariables().size());
  assertEquals(0,task.getTaskLocalVariables().size());
  Map<String,Object> startMap=new HashMap<String,Object>();
  startMap.put("processVar",true);
  runtimeService.startProcessInstanceByKey("oneTaskProcess",startMap);
  task=(Task)taskService.createTaskQuery().includeProcessVariables().taskAssignee("kermit").singleResult();
  assertEquals(1,task.getProcessVariables().size());
  assertEquals(0,task.getTaskLocalVariables().size());
  assertTrue((Boolean)task.getProcessVariables().get("processVar"));
  taskService.setVariable(task.getId(),"anotherProcessVar",123);
  taskService.setVariableLocal(task.getId(),"localVar","test");
  task=(Task)taskService.createTaskQuery().includeTaskLocalVariables().taskAssignee("kermit").singleResult();
  assertEquals(0,task.getProcessVariables().size());
  assertEquals(1,task.getTaskLocalVariables().size());
  assertEquals("test",task.getTaskLocalVariables().get("localVar"));
  task=(Task)taskService.createTaskQuery().includeProcessVariables().taskAssignee("kermit").singleResult();
  assertEquals(2,task.getProcessVariables().size());
  assertEquals(0,task.getTaskLocalVariables().size());
  assertEquals(true,task.getProcessVariables().get("processVar"));
  assertEquals(123,task.getProcessVariables().get("anotherProcessVar"));
  tasks=taskService.createTaskQuery().includeTaskLocalVariables().taskCandidateUser("kermit").list();
  assertEquals(2,tasks.size());
  assertEquals(1,tasks.get(0).getTaskLocalVariables().size());
  assertEquals("test",tasks.get(0).getTaskLocalVariables().get("test"));
  assertEquals(0,tasks.get(0).getProcessVariables().size());
  tasks=taskService.createTaskQuery().includeProcessVariables().taskCandidateUser("kermit").list();
  assertEquals(2,tasks.size());
  assertEquals(0,tasks.get(0).getProcessVariables().size());
  assertEquals(0,tasks.get(0).getTaskLocalVariables().size());
  task=(Task)taskService.createTaskQuery().includeTaskLocalVariables().taskAssignee("kermit").taskVariableValueEquals("localVar","test").singleResult();
  assertEquals(0,task.getProcessVariables().size());
  assertEquals(1,task.getTaskLocalVariables().size());
  assertEquals("test",task.getTaskLocalVariables().get("localVar"));
  task=(Task)taskService.createTaskQuery().includeProcessVariables().taskAssignee("kermit").taskVariableValueEquals("localVar","test").singleResult();
  assertEquals(2,task.getProcessVariables().size());
  assertEquals(0,task.getTaskLocalVariables().size());
  assertEquals(true,task.getProcessVariables().get("processVar"));
  assertEquals(123,task.getProcessVariables().get("anotherProcessVar"));
  task=(Task)taskService.createTaskQuery().includeTaskLocalVariables().includeProcessVariables().taskAssignee("kermit").singleResult();
  assertEquals(2,task.getProcessVariables().size());
  assertEquals(1,task.getTaskLocalVariables().size());
  assertEquals("test",task.getTaskLocalVariables().get("localVar"));
  assertEquals(true,task.getProcessVariables().get("processVar"));
  assertEquals(123,task.getProcessVariables().get("anotherProcessVar"));
}
