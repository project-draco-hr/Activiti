{
  final Map<String,Set<Resource>> resourcesMap=createMap(resources);
  for (  final Entry<String,Set<Resource>> group : resourcesMap.entrySet()) {
    final String deploymentName=determineDeploymentName(deploymentNameHint,group.getKey());
    final DeploymentBuilder deploymentBuilder=repositoryService.createDeployment().enableDuplicateFiltering().name(deploymentName);
    for (    final Resource resource : group.getValue()) {
      final String resourceName=determineResourceName(resource);
      try {
        if (resourceName.endsWith(".bar") || resourceName.endsWith(".zip") || resourceName.endsWith(".jar")) {
          deploymentBuilder.addZipInputStream(new ZipInputStream(resource.getInputStream()));
        }
 else {
          deploymentBuilder.addInputStream(resourceName,resource.getInputStream());
        }
      }
 catch (      IOException e) {
        throw new ActivitiException("couldn't auto deploy resource '" + resource + "': "+ e.getMessage(),e);
      }
    }
    deploymentBuilder.deploy();
  }
}
