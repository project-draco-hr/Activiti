{
  RuntimeSession runtimeSession=commandContext.getPersistenceSession();
  RepositorySession repositorySession=commandContext.getRepositorySession();
  ProcessDefinitionEntity processDefinition=null;
  TaskEntity task=null;
  PvmActivityInstance activityInstance=null;
  FormReference formReference=null;
  if (taskId != null) {
    task=runtimeSession.findTask(taskId);
    if (task == null) {
      throw new ActivitiException("No task found for id = '" + taskId + "'");
    }
    activityInstance=task.getActivityInstance();
    processDefinition=repositorySession.findDeployedProcessDefinitionById(task.getProcessDefinitionId());
    formReference=(FormReference)activityInstance.getActivity().getProperty(BpmnParse.PROPERTYNAME_FORM_REFERENCE);
  }
 else   if (processDefinitionId != null) {
    processDefinition=repositorySession.findDeployedProcessDefinitionById(processDefinitionId);
    if (processDefinition == null) {
      throw new ActivitiException("No process definition found for id = '" + processDefinitionId + "'");
    }
    formReference=(FormReference)processDefinition.getInitial().getProperty(BpmnParse.PROPERTYNAME_FORM_REFERENCE);
  }
 else   if (processDefinitionKey != null) {
    processDefinition=repositorySession.findDeployedLatestProcessDefinitionByKey(processDefinitionKey);
    if (processDefinition == null) {
      throw new ActivitiException("No process definition found for key '" + processDefinitionKey + "'");
    }
    formReference=(FormReference)processDefinition.getInitial().getProperty(BpmnParse.PROPERTYNAME_FORM_REFERENCE);
  }
  String deploymentId=processDefinition.getDeploymentId();
  DeploymentEntity deployment=repositorySession.findDeploymentById(deploymentId);
  Object result=null;
  if (formReference != null) {
    String formLanguage=formReference.getLanguage();
    String form=formReference.getForm();
    String formTemplateString=getFormTemplateString(form,deployment);
    ScriptingEngines scriptingEngines=commandContext.getProcessEngineConfiguration().getScriptingEngines();
    result=scriptingEngines.evaluate(formTemplateString,formLanguage,activityInstance);
  }
  return result;
}
