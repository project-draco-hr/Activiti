{
  HashMap<String,List<SequenceFlow>> incomingSequenceFlowMapping=new HashMap<String,List<SequenceFlow>>();
  HashMap<String,List<SequenceFlow>> outgoingSequenceFlowMapping=new HashMap<String,List<SequenceFlow>>();
  for (  FlowElement flowElement : BpmnModelUtil.findFlowElementsOfType(process,SequenceFlow.class)) {
    SequenceFlow sequenceFlow=(SequenceFlow)flowElement;
    String srcId=sequenceFlow.getSourceRef();
    String targetId=sequenceFlow.getTargetRef();
    if (outgoingSequenceFlowMapping.get(srcId) == null) {
      outgoingSequenceFlowMapping.put(srcId,new ArrayList<SequenceFlow>());
    }
    outgoingSequenceFlowMapping.get(srcId).add(sequenceFlow);
    if (incomingSequenceFlowMapping.get(targetId) == null) {
      incomingSequenceFlowMapping.put(targetId,new ArrayList<SequenceFlow>());
    }
    incomingSequenceFlowMapping.get(targetId).add(sequenceFlow);
  }
  SequenceFlowMapping mapping=new SequenceFlowMapping();
  mapping.setIncomingSequenceFlowMapping(incomingSequenceFlowMapping);
  mapping.setOutgoingSequenceFlowMapping(outgoingSequenceFlowMapping);
  return mapping;
}
