{
  Process process=conversion.getProcess();
  EndEvent endEvent=new EndEvent();
  endEvent.setId(END_EVENT_ID);
  process.addFlowElement(endEvent);
  SequenceFlow sequenceFlow=new SequenceFlow();
  sequenceFlow.setId(conversion.getUniqueNumberedId(ConversionConstants.DEFAULT_SEQUENCEFLOW_PREFIX));
  sequenceFlow.setSourceRef(conversion.getLastActivityId());
  sequenceFlow.setTargetRef(END_EVENT_ID);
  process.addFlowElement(sequenceFlow);
  SequenceFlowMapping sequenceFlowMapping=generateSequenceflowMappings(process);
  for (  FlowNode flowNode : process.findFlowElementsOfType(FlowNode.class)) {
    List<SequenceFlow> incomingSequenceFlow=sequenceFlowMapping.getIncomingSequenceFlowMapping().get(flowNode.getId());
    if (incomingSequenceFlow != null) {
      flowNode.setIncomingFlows(incomingSequenceFlow);
    }
    List<SequenceFlow> outgoingSequenceFlow=sequenceFlowMapping.getOutgoingSequenceFlowMapping().get(flowNode.getId());
    if (outgoingSequenceFlow != null) {
      flowNode.setOutgoingFlows(outgoingSequenceFlow);
    }
  }
}
