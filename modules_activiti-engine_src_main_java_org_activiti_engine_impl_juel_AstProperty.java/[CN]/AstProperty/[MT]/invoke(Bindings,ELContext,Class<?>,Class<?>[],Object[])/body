{
  Object base=prefix.eval(bindings,context);
  if (base == null) {
    throw new PropertyNotFoundException(LocalMessages.get("error.property.base.null",prefix));
  }
  Object property=getProperty(bindings,context);
  if (property == null && strict) {
    throw new PropertyNotFoundException(LocalMessages.get("error.property.method.notfound","null",base));
  }
  String name=bindings.convert(property,String.class);
  Method method=findMethod(name,base.getClass(),returnType,paramTypes);
  try {
    return method.invoke(base,paramValues);
  }
 catch (  IllegalAccessException e) {
    throw new ELException(LocalMessages.get("error.property.method.access",name,base.getClass()));
  }
catch (  IllegalArgumentException e) {
    throw new ELException(LocalMessages.get("error.property.method.invocation",name,base.getClass()),e);
  }
catch (  InvocationTargetException e) {
    throw new ELException(LocalMessages.get("error.property.method.invocation",name,base.getClass()),e.getCause());
  }
}
