{
  ProcessEngineConfigurationImpl processEngineConfiguration=null;
  try {
    if (args == null || args.length != 2) {
      throw new RuntimeException("exactly 2 arguments expected: database and releaseVersion");
    }
    String database=args[0];
    String releaseVersion=args[1];
    log.debug("database: {}",database);
    log.debug("releaseVersion: {}",releaseVersion);
    processEngineConfiguration=UpgradeUtil.createProcessEngineConfiguration(database);
    log.debug("installing jdbc proxy driver delegating to {}",processEngineConfiguration.getJdbcUrl());
    ProxyDriver.setUrl(processEngineConfiguration.getJdbcUrl());
    processEngineConfiguration.setJdbcUrl("proxy");
    DriverManager.registerDriver(new ProxyDriver());
    log.debug("building the process engine...");
    ProcessEngine processEngine=processEngineConfiguration.buildProcessEngine();
    log.debug("### Running data generator {} in the old version",CommonDataGenerator.class.getSimpleName());
    CommonDataGenerator commonDataGenerator=new CommonDataGenerator();
    commonDataGenerator.setProcessEngine(processEngine);
    commonDataGenerator.run();
    if (UpgradeUtil.getProcessEngineVersion(processEngine) < 11) {
      Activiti_5_10_DataGenerator activiti_5_10_DataGenerator=new Activiti_5_10_DataGenerator();
      activiti_5_10_DataGenerator.setProcessEngine(processEngine);
      activiti_5_10_DataGenerator.run();
    }
    log.debug("### Captured SQL");
    PrintWriter file=new PrintWriter("src/test/resources/org/activiti/db/" + releaseVersion + "/data/"+ database+ ".data.sql");
    System.err.println();
    System.err.println();
    for (    String statement : ProxyDriver.statements) {
      System.err.println(statement);
      System.err.println();
      file.println(statement);
      file.println();
    }
    file.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  dbSchemaDrop(processEngineConfiguration);
}
