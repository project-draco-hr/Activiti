{
  try {
    ObjectMapper objectMapper=new ObjectMapper();
    JsonNode jsonNode=objectMapper.readTree(json);
    JsonConverter jsonConverter=new JsonConverter();
    WorkflowDefinition workflowDefinition=jsonConverter.convertFromJson(jsonNode);
    WorkflowDefinitionConversionFactory conversionFactory=new WorkflowDefinitionConversionFactory();
    WorkflowDefinitionConversion conversion=conversionFactory.createWorkflowDefinitionConversion(workflowDefinition);
    conversion.convert();
    ProcessEngine processEngine=ActivitiUtil.getProcessEngine();
    RepositoryService repositoryService=processEngine.getRepositoryService();
    BpmnModel bpmnModel=conversion.getBpmnModel();
    Deployment deployment=repositoryService.createDeployment().addBpmnModel(bpmnModel.getProcesses().get(0).getName() + ".bpmn20.xml",bpmnModel).deploy();
    ProcessDefinition processDefinition=repositoryService.createProcessDefinitionQuery().deploymentId(deployment.getId()).singleResult();
    return new SimpleWorkflowSuccessResponse(processDefinition.getId());
  }
 catch (  JsonProcessingException e) {
    setStatus(Status.SERVER_ERROR_INTERNAL,e);
  }
catch (  IOException e) {
    setStatus(Status.SERVER_ERROR_INTERNAL,e);
  }
  return null;
}
