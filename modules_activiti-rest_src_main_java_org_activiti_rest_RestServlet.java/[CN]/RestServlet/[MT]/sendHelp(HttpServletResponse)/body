{
  response.setContentType("text/html");
  try {
    ServletOutputStream out=response.getOutputStream();
    out.println("<html><body>");
    out.println("<h1>Activiti Rest Interface</h1>");
    out.println("<p>This page documents the rest interface of Activiti</p>");
    Map<String,RestHandler> restHandlers=new HashMap<String,RestHandler>();
    restHandlers.putAll(staticHandlers);
    for (    UrlMatcher urlMatcher : dynamicHandlers) {
      RestHandler restHandler=urlMatcher.getRestHandler();
      restHandlers.put(restHandler.getUrlPattern(),restHandler);
    }
    SortedSet<String> urlPatterns=new TreeSet<String>(restHandlers.keySet());
    for (    String urlPattern : urlPatterns) {
      RestHandler restHandler=restHandlers.get(urlPattern);
      String parametersTemplate="";
      List<String> parameterDescriptions=new ArrayList<String>();
      for (      Field handlerField : restHandler.getClass().getDeclaredFields()) {
        if (Parameter.class.isAssignableFrom(handlerField.getType())) {
          handlerField.setAccessible(true);
          Parameter<?> parameter=(Parameter<?>)handlerField.get(restHandler);
          String parameterName=parameter.getName();
          if (parameter.isParameter()) {
            if (parametersTemplate.length() == 0) {
              parametersTemplate+="?";
            }
 else {
              parametersTemplate+="&";
            }
            if (parameter.isRequired()) {
              parametersTemplate+=parameterName + "={" + parameterName+ "}";
            }
 else {
              parametersTemplate+="[" + parameterName + "={"+ parameterName+ "}]";
            }
          }
          StringBuilder parameterDescription=new StringBuilder();
          parameterDescription.append("  <li><b><code>" + parameterName + "</code></b> ");
          if (parameter.isParameter()) {
            parameterDescription.append(": parameter \n");
          }
 else {
            parameterDescription.append(": url part variable \n");
          }
          parameterDescription.append("    <ul> \n");
          parameterDescription.append("      <li>" + parameter.getDescription() + "</li> \n");
          parameterDescription.append("      <li>" + (parameter.isRequired() ? "required" : "optional") + "</li> \n");
          parameterDescription.append("      <li>" + parameter.getTypeDescription() + "</li> \n");
          parameterDescription.append("    </ul> \n");
          parameterDescription.append("  </li> \n");
          parameterDescriptions.add(parameterDescription.toString());
        }
      }
      out.print("<h3 style='margin-bottom:5px;'><code>");
      out.print(restHandler.getMethod().toString() + " " + urlPattern+ parametersTemplate);
      out.println("</code></h3>");
      out.println("  <ul style='margin-top:5px;'>");
      for (      String parameterDescription : parameterDescriptions) {
        out.print(parameterDescription);
      }
      out.println("  </ul>");
      out.println("</body></html>");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
