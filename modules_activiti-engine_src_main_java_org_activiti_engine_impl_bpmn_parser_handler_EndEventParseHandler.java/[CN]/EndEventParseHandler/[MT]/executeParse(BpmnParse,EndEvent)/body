{
  ActivityImpl endEventActivity=createActivityOnCurrentScope(bpmnParse,endEvent,BpmnXMLConstants.ELEMENT_EVENT_END);
  EventDefinition eventDefinition=null;
  if (endEvent.getEventDefinitions().size() > 0) {
    eventDefinition=endEvent.getEventDefinitions().get(0);
  }
  if (eventDefinition instanceof org.activiti.bpmn.model.ErrorEventDefinition) {
    org.activiti.bpmn.model.ErrorEventDefinition errorDefinition=(org.activiti.bpmn.model.ErrorEventDefinition)eventDefinition;
    if (bpmnParse.getBpmnModel().containsErrorRef(errorDefinition.getErrorCode())) {
      String errorCode=bpmnParse.getBpmnModel().getErrors().get(errorDefinition.getErrorCode());
      if (StringUtils.isEmpty(errorCode)) {
        bpmnParse.getBpmnModel().addProblem("errorCode is required for an error event",errorDefinition);
      }
      endEventActivity.setProperty("type","errorEndEvent");
      errorDefinition.setErrorCode(errorCode);
    }
    endEventActivity.setActivityBehavior(bpmnParse.getActivityBehaviorFactory().createErrorEndEventActivityBehavior(endEvent,errorDefinition));
  }
 else   if (eventDefinition instanceof CancelEventDefinition) {
    ScopeImpl scope=bpmnParse.getCurrentScope();
    if (scope.getProperty("type") == null || !scope.getProperty("type").equals("transaction")) {
      bpmnParse.getBpmnModel().addProblem("end event with cancelEventDefinition only supported inside transaction subprocess",endEvent);
    }
 else {
      endEventActivity.setProperty("type","cancelEndEvent");
      endEventActivity.setActivityBehavior(bpmnParse.getActivityBehaviorFactory().createCancelEndEventActivityBehavior(endEvent));
    }
  }
 else   if (eventDefinition instanceof TerminateEventDefinition) {
    endEventActivity.setActivityBehavior(bpmnParse.getActivityBehaviorFactory().createTerminateEndEventActivityBehavior(endEvent));
  }
 else   if (eventDefinition == null) {
    endEventActivity.setActivityBehavior(bpmnParse.getActivityBehaviorFactory().createNoneEndEventActivityBehavior(endEvent));
  }
  createExecutionListenersOnScope(bpmnParse,endEvent.getExecutionListeners(),endEventActivity);
}
