{
  this.deploymentId=deployment.getId();
  this.formKey=activityElement.attributeNS(BpmnParser.BPMN_EXTENSIONS_NS,"formKey");
  Element extensionElement=activityElement.element("extensionElements");
  if (extensionElement != null) {
    CommandContext commandContext=CommandContext.getCurrent();
    ExpressionManager expressionManager=commandContext.getProcessEngineConfiguration().getExpressionManager();
    FormTypes formTypes=commandContext.getProcessEngineConfiguration().getFormTypes();
    List<Element> formPropertyElements=extensionElement.elementsNS(BpmnParser.BPMN_EXTENSIONS_NS,"formProperty");
    for (    Element formPropertyElement : formPropertyElements) {
      FormPropertyHandler formPropertyHandler=new FormPropertyHandler();
      String id=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:id");
      if (id == null) {
        bpmnParse.addError("attribute 'id' is required",formPropertyElement);
      }
      formPropertyHandler.setId(id);
      String name=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:name");
      formPropertyHandler.setName(name);
      AbstractFormType type=formTypes.parseFormPropertyType(formPropertyElement,bpmnParse);
      formPropertyHandler.setType(type);
      String requiredText=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:required","false");
      Boolean required=bpmnParse.parseBooleanAttribute(requiredText);
      if (required != null) {
        formPropertyHandler.setRequired(required);
      }
 else {
        bpmnParse.addError("attribute 'required' must be one of {on|yes|true|enabled|active|off|no|false|disabled|inactive}",formPropertyElement);
      }
      String readableText=formPropertyElement.attribute("readable","true");
      Boolean readable=bpmnParse.parseBooleanAttribute(readableText);
      if (readable != null) {
        formPropertyHandler.setReadable(readable);
      }
 else {
        bpmnParse.addError("attribute 'readable' must be one of {on|yes|true|enabled|active|off|no|false|disabled|inactive}",formPropertyElement);
      }
      String writableText=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:writable","true");
      Boolean writable=bpmnParse.parseBooleanAttribute(writableText);
      if (writable != null) {
        formPropertyHandler.setWritable(writable);
      }
 else {
        bpmnParse.addError("attribute 'writable' must be one of {on|yes|true|enabled|active|off|no|false|disabled|inactive}",formPropertyElement);
      }
      String variableName=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:variable");
      formPropertyHandler.setVariableName(variableName);
      String valueExpressionText=formPropertyElement.attribute("http://activiti.org/bpmn-extensions:expression");
      if (valueExpressionText != null) {
        ActivitiValueExpression valueExpression=expressionManager.createValueExpression(valueExpressionText);
        formPropertyHandler.setVariableExpression(valueExpression);
      }
      formPropertyHandlers.add(formPropertyHandler);
    }
  }
}
