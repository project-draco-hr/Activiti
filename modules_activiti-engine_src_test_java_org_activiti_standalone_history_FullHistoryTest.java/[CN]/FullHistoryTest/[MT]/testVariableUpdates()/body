{
  Map<String,Object> variables=new HashMap<String,Object>();
  variables.put("number","one");
  variables.put("character","a");
  variables.put("bytes",":-(".getBytes());
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("receiveTask",variables);
  runtimeService.setVariable(processInstance.getId(),"number","two");
  runtimeService.setVariable(processInstance.getId(),"bytes",":-)".getBytes());
  HistoricActivityInstance historicStartEvent=historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).activityId("theStart").singleResult();
  assertNotNull(historicStartEvent);
  List<HistoricDetail> historicDetails=historyService.createHistoricDetailQuery().orderByVariableName().asc().orderByVariableRevision().asc().list();
  HistoricVariableUpdate historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(0);
  assertEquals("bytes",historicVariableUpdate.getVariableName());
  assertEquals(":-(",new String((byte[])historicVariableUpdate.getValue()));
  assertEquals(0,historicVariableUpdate.getRevision());
  assertEquals(historicStartEvent.getId(),historicVariableUpdate.getActivityInstanceId());
  historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(1);
  assertEquals("bytes",historicVariableUpdate.getVariableName());
  assertEquals(":-)",new String((byte[])historicVariableUpdate.getValue()));
  assertEquals(1,historicVariableUpdate.getRevision());
  assertEquals(historicStartEvent.getId(),historicVariableUpdate.getActivityInstanceId());
  historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(2);
  assertEquals("character",historicVariableUpdate.getVariableName());
  assertEquals("a",historicVariableUpdate.getValue());
  assertEquals(0,historicVariableUpdate.getRevision());
  assertEquals(historicStartEvent.getId(),historicVariableUpdate.getActivityInstanceId());
  historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(3);
  assertEquals("number",historicVariableUpdate.getVariableName());
  assertEquals("one",historicVariableUpdate.getValue());
  assertEquals(0,historicVariableUpdate.getRevision());
  assertEquals(historicStartEvent.getId(),historicVariableUpdate.getActivityInstanceId());
  historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(4);
  assertEquals("number",historicVariableUpdate.getVariableName());
  assertEquals("two",historicVariableUpdate.getValue());
  assertEquals(1,historicVariableUpdate.getRevision());
  assertEquals(historicStartEvent.getId(),historicVariableUpdate.getActivityInstanceId());
  runtimeService.setVariable(processInstance.getProcessInstanceId(),"aVar","12345");
  historicDetails=historyService.createHistoricDetailQuery().variableUpdates().processInstanceId(processInstance.getId()).orderByVariableName().asc().list();
  historicVariableUpdate=(HistoricVariableUpdate)historicDetails.get(0);
  assertEquals("aVar",historicVariableUpdate.getVariableName());
  assertEquals("12345",historicVariableUpdate.getValue());
  assertEquals(0,historicVariableUpdate.getRevision());
  HistoricActivityInstance taskActivity=historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).activityId("waitState").singleResult();
  assertNotNull(taskActivity);
  assertEquals(taskActivity.getId(),historicVariableUpdate.getActivityInstanceId());
}
