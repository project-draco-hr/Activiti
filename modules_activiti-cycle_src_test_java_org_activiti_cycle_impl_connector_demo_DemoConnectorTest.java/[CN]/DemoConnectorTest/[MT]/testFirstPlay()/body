{
  ConfigurationContainer userConfiguration=new ConfigurationContainer("bernd");
  userConfiguration.addRepositoryConnectorConfiguration(new DemoConnectorConfiguration("demo"));
  RepositoryConnector conn=new RootConnectorConfiguration(userConfiguration).createConnector();
  List<RepositoryNode> childNodes=conn.getChildren("/").asList();
  assertEquals(1,childNodes.size());
  assertEquals("demo",childNodes.get(0).getCurrentPath());
  childNodes=conn.getChildren("demo").asList();
  assertEquals(2,childNodes.size());
  assertTrue(childNodes.get(0) instanceof RepositoryFolder);
  RepositoryFolder folder1=(RepositoryFolder)childNodes.get(0);
  assertEquals("/demo/minutes",folder1.getCurrentPath());
  assertTrue(childNodes.get(1) instanceof RepositoryFolder);
  RepositoryFolder folder2=(RepositoryFolder)childNodes.get(1);
  assertEquals("/demo/BPMN",folder2.getCurrentPath());
  childNodes=conn.getChildren(folder1.getCurrentPath()).asList();
  assertEquals(2,childNodes.size());
  RepositoryArtifact file1=(RepositoryArtifact)childNodes.get(0);
  assertEquals("/demo/minutes/20100701-KickOffMeeting.txt",file1.getCurrentPath());
  RepositoryArtifact file2=(RepositoryArtifact)childNodes.get(1);
  assertEquals("/demo/minutes/InitialMindmap.mm",file2.getCurrentPath());
  childNodes=conn.getChildren(folder2.getCurrentPath()).asList();
  assertEquals(1,childNodes.size());
  RepositoryFolder folder3=(RepositoryFolder)childNodes.get(0);
  assertEquals("/demo/BPMN/Level3",folder3.getCurrentPath());
  childNodes=conn.getChildren(folder3.getCurrentPath()).asList();
  assertEquals(1,childNodes.size());
  RepositoryArtifact file3=(RepositoryArtifact)childNodes.get(0);
  assertEquals("/demo/BPMN/Level3/InitialBpmnModel",file3.getCurrentPath());
  assertEquals("InitialBpmnModel",file3.getMetadata().getName());
  assertEquals("/BPMN/Level3",file3.getMetadata().setParentFolderId());
  Collection<ContentRepresentation> contentRepresentations=file3.getArtifactType().getContentRepresentations();
  for (  ContentRepresentation contentRepresentation : contentRepresentations) {
    Content content=conn.getContent(file3.getCurrentPath(),contentRepresentation.getId());
    assertNotNull(content);
    assertNotNull(content.asByteArray());
  }
  assertEquals(6,DemoConnector.nodes.size());
  Map<String,Object> parameters=new HashMap<String,Object>();
  parameters.put("targetName","xxx.txt");
  parameters.put("copyCount",2);
  parameters.put("targetFolderConnector",conn);
  parameters.put("targetFolder","/demo/minutes");
  conn.executeParameterizedAction(file1.getCurrentPath(),CopyArtifactAction.class.getName(),parameters);
  List<RepositoryNode> nodes=DemoConnector.nodes;
  assertEquals(8,DemoConnector.nodes.size());
  childNodes=conn.getChildren(folder1.getCurrentPath()).asList();
  assertEquals(4,childNodes.size());
  assertEquals("/demo/minutes/20100701-KickOffMeeting.txt",childNodes.get(0).getCurrentPath());
  assertEquals("/demo/minutes/InitialMindmap.mm",childNodes.get(1).getCurrentPath());
  assertEquals("/demo/minutes/xxx.txt0",childNodes.get(2).getCurrentPath());
  assertEquals("xxx.txt0",childNodes.get(2).getMetadata().getName());
  assertEquals("/demo/minutes/xxx.txt1",childNodes.get(3).getCurrentPath());
  assertEquals("xxx.txt1",childNodes.get(3).getMetadata().getName());
}
