{
  try {
    Task task=taskService.newTask();
    taskService.saveTask(task);
    Attachment urlAttachment=taskService.createAttachment("simpleType",task.getId(),null,"Simple attachment","Simple attachment description","http://activiti.org");
    taskService.saveAttachment(urlAttachment);
    ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_TASK_ATTACHMENT,task.getId(),urlAttachment.getId()));
    Representation response=client.delete();
    assertEquals(Status.SUCCESS_NO_CONTENT,client.getResponse().getStatus());
    assertTrue(response.getSize() == 0L);
    assertNull(taskService.getAttachment(urlAttachment.getId()));
    try {
      client.delete();
      fail("Exception expected");
    }
 catch (    ResourceException expected) {
      assertEquals(Status.CLIENT_ERROR_NOT_FOUND,expected.getStatus());
      assertEquals("Task '" + task.getId() + "' doesn't have an attachment with id '"+ urlAttachment.getId()+ "'.",expected.getStatus().getDescription());
    }
  }
  finally {
    List<Task> tasks=taskService.createTaskQuery().list();
    for (    Task task : tasks) {
      taskService.deleteTask(task.getId(),true);
    }
  }
}
