{
  ClientResource client=getAuthenticatedClient("process-instance");
  ObjectNode requestNode=objectMapper.createObjectNode();
  requestNode.put("processDefinitionKey","simpleProcess");
  requestNode.put("var1","test");
  requestNode.put("var2",1);
  Representation response=client.post(requestNode);
  JsonNode responseNode=objectMapper.readTree(response.getStream());
  assertNotNull(responseNode);
  String processInstanceId=responseNode.get("processInstanceId").getValueAsText();
  assertNotNull(processInstanceId);
  List<ProcessInstance> instanceList=runtimeService.createProcessInstanceQuery().list();
  assertEquals(1,instanceList.size());
  assertEquals(processInstanceId,instanceList.get(0).getProcessInstanceId());
  Map<String,Object> variableMap=runtimeService.getVariables(processInstanceId);
  assertTrue(variableMap.containsKey("var1"));
  assertEquals("test",variableMap.get("var1"));
  assertTrue(variableMap.containsKey("var2"));
  assertEquals(1,variableMap.get("var2"));
  Task task=taskService.createTaskQuery().taskAssignee("kermit").singleResult();
  assertNotNull(task);
  assertEquals("WaitTask",task.getName());
  taskService.complete(task.getId());
  instanceList=runtimeService.createProcessInstanceQuery().list();
  assertEquals(0,instanceList.size());
}
