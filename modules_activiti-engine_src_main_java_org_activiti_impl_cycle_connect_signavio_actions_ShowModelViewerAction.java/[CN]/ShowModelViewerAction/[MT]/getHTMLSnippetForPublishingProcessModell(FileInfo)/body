{
  try {
    SignavioConnector connector=(SignavioConnector)getFile().getConnector();
    JSONObject resultJsonObject=new JSONObject();
    resultJsonObject.put("url",connector.getModelUrl(fileInfo));
    resultJsonObject.put("overflowX","fit");
    resultJsonObject.put("overflowY","fit");
    resultJsonObject.put("zoomSlider",true);
    resultJsonObject.put("linkSubProcesses",false);
    JSONArray embeddedModelJSONArray=connector.getEmbeddedModel(fileInfo);
    String authToken, authKey_png, authKey_json, authKey_stencilset;
    authToken=authKey_png=authKey_json=authKey_stencilset="";
    for (int i=0; i < embeddedModelJSONArray.length(); i++) {
      JSONObject tempJsonObject=embeddedModelJSONArray.getJSONObject(i).getJSONObject("rep");
      String tempRepType=tempJsonObject.getString("type");
      if (tempRepType.equals("png"))       authKey_png=tempJsonObject.getString("authkey");
 else       if (tempRepType.equals("json"))       authKey_json=tempJsonObject.getString("authkey");
 else       if (tempRepType.equals("stencilset"))       authKey_stencilset=tempJsonObject.getString("authkey");
    }
    authToken=authKey_png + "_" + authKey_json+ "_"+ authKey_stencilset;
    resultJsonObject.put("authToken",authToken);
    String firstScriptTag="<script type=\"text/javascript\" src=\"" + SignavioConnectorUrl.MASHUP_URL + "/signavio.js"+ "\"></script>";
    String secondScriptTag="<script type=\"text/plain\">" + resultJsonObject.toString() + "</script>";
    String resultHtmlSnippet=firstScriptTag.concat(secondScriptTag);
    return resultHtmlSnippet;
  }
 catch (  Exception exception) {
    throw new RepositoryException("Exception during converting embeddedModel into Snippet",exception);
  }
}
