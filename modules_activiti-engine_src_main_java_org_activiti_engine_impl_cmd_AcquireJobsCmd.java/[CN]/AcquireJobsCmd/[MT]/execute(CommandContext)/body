{
  String lockOwner=jobExecutor.getLockOwner();
  int lockTimeInMillis=jobExecutor.getLockTimeInMillis();
  int maxNonExclusiveJobsPerAcquisition=jobExecutor.getMaxJobsPerAcquisition();
  AcquiredJobs acquiredJobs=new AcquiredJobs();
  List<JobEntity> jobs=commandContext.getJobEntityManager().findNextJobsToExecute(new Page(0,maxNonExclusiveJobsPerAcquisition));
  List<String> jobIds=new ArrayList<String>();
  List<JobEntity> finalJobs=new ArrayList<JobEntity>();
  for (  JobEntity job : jobs) {
    if (job != null && !acquiredJobs.contains(job.getId())) {
      if (job.isExclusive() && job.getProcessInstanceId() != null) {
        try {
          Thread.sleep(100);
        }
 catch (        InterruptedException e) {
        }
        List<JobEntity> exclusiveJobs=commandContext.getJobEntityManager().findExclusiveJobsToExecute(job.getProcessInstanceId());
        for (        JobEntity exclusiveJob : exclusiveJobs) {
          if (exclusiveJob != null) {
            jobIds.add(exclusiveJob.getId());
            finalJobs.add(exclusiveJob);
          }
        }
      }
 else {
        jobIds.add(job.getId());
        finalJobs.add(job);
      }
    }
  }
  if (jobIds.size() > 0) {
    commandContext.getJobEntityManager().updateJobLock(lockOwner,getLockExpirationTime(commandContext,lockTimeInMillis),jobIds);
    acquiredJobs.addJobIdBatch(finalJobs);
  }
  return acquiredJobs;
}
