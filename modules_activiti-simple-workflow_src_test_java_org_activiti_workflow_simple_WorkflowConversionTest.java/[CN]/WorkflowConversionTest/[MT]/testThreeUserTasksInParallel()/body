{
  TaskService taskService=activitiRule.getTaskService();
  WorkflowDefinition workflowDefinition=new WorkflowDefinition().name("testWorkflow").description("This is a test workflow").inParallel().inList().addHumanStep("first task","kermit").endList().inList().addHumanStep("second step","gonzo").endList().inList().addHumanStep("third task","mispiggy").endList().endParallel().addHumanStep("Task in between","kermit").inParallel().inList().addHumanStep("fourth task","gonzo").endList().inList().addHumanStep("fifth step","gonzo").endList().endParallel();
  activitiRule.getRuntimeService().startProcessInstanceByKey(convertAndDeploy(workflowDefinition));
  assertEquals(1,taskService.createTaskQuery().taskAssignee("kermit").count());
  assertEquals(1,taskService.createTaskQuery().taskAssignee("gonzo").count());
  assertEquals(1,taskService.createTaskQuery().taskAssignee("mispiggy").count());
  for (  Task task : taskService.createTaskQuery().list()) {
    activitiRule.getTaskService().complete(task.getId());
  }
  Task task=taskService.createTaskQuery().singleResult();
  assertEquals("Task in between",task.getName());
  taskService.complete(task.getId());
  assertEquals(2,taskService.createTaskQuery().taskAssignee("gonzo").count());
}
