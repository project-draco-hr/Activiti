{
  BeanELResolver resolver=new BeanELResolver();
  assertNull(resolver.getCommonPropertyType(context,null));
  Iterator<FeatureDescriptor> iterator=resolver.getFeatureDescriptors(context,new TestBean());
  List<String> names=new ArrayList<String>();
  while (iterator.hasNext()) {
    FeatureDescriptor feature=iterator.next();
    names.add(feature.getName());
    Class<?> type="class".equals(feature.getName()) ? Class.class : int.class;
    assertSame(type,feature.getValue(ELResolver.TYPE));
    assertSame(Boolean.TRUE,feature.getValue(ELResolver.RESOLVABLE_AT_DESIGN_TIME));
  }
  assertTrue(names.contains("class"));
  assertTrue(names.contains("readOnly"));
  assertTrue(names.contains("readWrite"));
  assertTrue(names.contains("writeOnly"));
  assertEquals(4,names.size());
}
