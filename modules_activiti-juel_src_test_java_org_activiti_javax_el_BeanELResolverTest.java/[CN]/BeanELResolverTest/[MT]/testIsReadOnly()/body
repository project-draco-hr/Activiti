{
  BeanELResolver resolver=new BeanELResolver();
  BeanELResolver resolverReadOnly=new BeanELResolver(true);
  context.setPropertyResolved(false);
  assertFalse(resolver.isReadOnly(context,null,"foo"));
  assertFalse(context.isPropertyResolved());
  context.setPropertyResolved(false);
  assertTrue(resolver.isReadOnly(context,new TestBean(),"readOnly"));
  assertTrue(context.isPropertyResolved());
  context.setPropertyResolved(false);
  assertFalse(resolver.isReadOnly(context,new TestBean(),"readWrite"));
  assertTrue(context.isPropertyResolved());
  context.setPropertyResolved(false);
  assertFalse(resolver.isReadOnly(context,new TestBean(),"writeOnly"));
  assertTrue(context.isPropertyResolved());
  context.setPropertyResolved(false);
  assertTrue(resolverReadOnly.isReadOnly(context,new TestBean(),"readWrite"));
  assertTrue(context.isPropertyResolved());
  try {
    resolver.isReadOnly(context,new TestBean(),"doesntExist");
    fail();
  }
 catch (  PropertyNotFoundException e) {
  }
}
