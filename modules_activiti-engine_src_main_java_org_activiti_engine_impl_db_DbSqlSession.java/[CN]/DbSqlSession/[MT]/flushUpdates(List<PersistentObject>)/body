{
  for (  PersistentObject updatedObject : updatedObjects) {
    String updateStatement=dbSqlSessionFactory.getUpdateStatement(updatedObject);
    updateStatement=dbSqlSessionFactory.mapStatement(updateStatement);
    if (updateStatement == null) {
      throw new ActivitiException("no update statement for " + updatedObject.getClass() + " in the ibatis mapping files");
    }
    log.fine("updating: " + toString(updatedObject) + "]");
    int updatedRecords=sqlSession.update(updateStatement,updatedObject);
    if (updatedRecords != 1) {
      throw new ActivitiOptimisticLockingException(toString(updatedObject) + " was updated by another transaction concurrently");
    }
    if (updatedObject instanceof HasRevision) {
      ((HasRevision)updatedObject).setRevision(((HasRevision)updatedObject).getRevisionNext());
    }
  }
  updatedObjects.clear();
}
