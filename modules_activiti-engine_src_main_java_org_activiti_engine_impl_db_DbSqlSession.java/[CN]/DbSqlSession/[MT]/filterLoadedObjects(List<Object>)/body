{
  if (loadedObjects.isEmpty()) {
    return loadedObjects;
  }
  if (!(PersistentObject.class.isAssignableFrom(loadedObjects.get(0).getClass()))) {
    return loadedObjects;
  }
  Map<String,PersistentObject> filteredObjectsMap=new LinkedHashMap<String,PersistentObject>(loadedObjects.size());
  for (  Object loadedObject : loadedObjects) {
    PersistentObject cachedPersistentObject=cacheFilter((PersistentObject)loadedObject);
    filteredObjectsMap.put(cachedPersistentObject.getId(),cachedPersistentObject);
  }
  return new ArrayList<PersistentObject>(filteredObjectsMap.values());
}
