{
  try {
    String missingComponents=null;
    if (!isEngineTablePresent()) {
      missingComponents=addMissingComponent(missingComponents,"engine");
    }
    if (dbSqlSessionFactory.isDbHistoryUsed() && !isHistoryTablePresent()) {
      missingComponents=addMissingComponent(missingComponents,"history");
    }
    if (dbSqlSessionFactory.isDbIdentityUsed() && !isIdentityTablePresent()) {
      missingComponents=addMissingComponent(missingComponents,"identity");
    }
    if (dbSqlSessionFactory.isDbCycleUsed() && !isCycleTablePresent()) {
      missingComponents=addMissingComponent(missingComponents,"cycle");
    }
    if (missingComponents != null) {
      throw new ActivitiException("no activiti tables in db. missing components {" + missingComponents + "}. set <property name=\"databaseSchemaUpdate\" to value=\"true\" or value=\"create-drop\" (use create-drop for testing only!) in bean processEngineConfiguration in activiti.cfg.xml for automatic schema creation");
    }
    String dbVersion=getDbVersion();
    if (!ProcessEngine.VERSION.equals(dbVersion)) {
      throw new ActivitiWrongDbException(ProcessEngine.VERSION,dbVersion);
    }
  }
 catch (  Exception e) {
    if (isMissingTablesException(e)) {
      throw new ActivitiException("no activiti tables in db.  set <property name=\"databaseSchemaUpdate\" to value=\"true\" or value=\"create-drop\" (use create-drop for testing only!) in bean processEngineConfiguration in activiti.cfg.xml for automatic schema creation",e);
    }
 else {
      if (e instanceof RuntimeException) {
        throw (RuntimeException)e;
      }
 else {
        throw new ActivitiException("couldn't get db schema version",e);
      }
    }
  }
  log.fine("activiti db schema check successful");
}
