{
  logger.info("----------------------------------------------");
  Map<String,Object> vars=new HashMap<String,Object>();
  vars.put(customerIdProcVarName,CUSTOMER_ID_PROC_VAR_VALUE);
  ProcessInstance processInstance=processEngine.getRuntimeService().startProcessInstanceByKey("component-waiter",vars);
  StatefulObject scopedObject=(StatefulObject)processEngine.getRuntimeService().getVariable(processInstance.getId(),"scopedTarget.c1");
  Assert.assertNotNull("the scopedObject can't be null",scopedObject);
  Assert.assertTrue("the 'name' property can't be null.",StringUtils.hasText(scopedObject.getName()));
  Assert.assertEquals(scopedObject.getVisitedCount(),2);
  String procId=processInstance.getProcessInstanceId();
  List<Task> tasks=taskService.createTaskQuery().executionId(procId).list();
  Assert.assertEquals("there should be 1 (one) task enqueued at this point.",tasks.size(),1);
  Task t=tasks.iterator().next();
  this.taskService.claim(t.getId(),"me");
  logger.info("sleeping for 2 seconds while a user performs his task. " + "The first transaction has committed. A new one will start in 10 seconds");
  Thread.sleep(1000 * 2);
  this.taskService.complete(t.getId());
  scopedObject=(StatefulObject)processEngine.getRuntimeService().getVariable(processInstance.getId(),"scopedTarget.c1");
  Assert.assertEquals(scopedObject.getVisitedCount(),3);
  Assert.assertEquals("the customerId injected should " + "be what was given as a processVariable parameter.",ScopingTest.CUSTOMER_ID_PROC_VAR_VALUE,scopedObject.getCustomerId());
  return scopedObject;
}
