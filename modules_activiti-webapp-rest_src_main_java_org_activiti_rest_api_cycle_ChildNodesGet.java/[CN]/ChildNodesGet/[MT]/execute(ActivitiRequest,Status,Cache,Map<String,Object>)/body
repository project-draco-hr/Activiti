{
  String nodeId=req.getMandatoryString("nodeId");
  String connectorId=req.getMandatoryString("connectorId");
  String vFolderId=req.getString("vFolderId");
  if (vFolderId != null && vFolderId.length() > 0) {
    VirtualRepositoryFolder virtualRepositoryFolder=processSolutionService.getVirtualRepositoryFolderById(vFolderId);
    if (virtualRepositoryFolder != null) {
      connectorId="ps-" + virtualRepositoryFolder.getProcessSolutionId();
      CycleRequestContext.set("vFolderId",vFolderId);
    }
  }
  try {
    RepositoryNodeCollection children=repositoryService.getChildren(connectorId,nodeId);
    List<TreeFolderDto> folders=new ArrayList<TreeFolderDto>();
    List<TreeLeafDto> leafs=new ArrayList<TreeLeafDto>();
    for (    RepositoryArtifact artifact : children.getArtifactList()) {
      leafs.add(new TreeLeafDto(artifact));
    }
    for (    RepositoryFolder folder : children.getFolderList()) {
      folders.add(new TreeFolderDto(folder));
    }
    model.put("files",leafs);
    model.put("folders",folders);
    return;
  }
 catch (  RepositoryException e) {
    log.log(Level.SEVERE,"Cannot load children for id '" + nodeId + "'",e);
  }
  model.put("files",new ArrayList<RepositoryArtifact>());
  model.put("folders",new ArrayList<RepositoryFolder>());
}
