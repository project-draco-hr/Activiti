{
  ProcessDefinitionInfoCacheObject infoCacheObject=null;
  if (cache.containsKey(processDefinitionId)) {
    infoCacheObject=commandExecutor.execute(new Command<ProcessDefinitionInfoCacheObject>(){
      @Override public ProcessDefinitionInfoCacheObject execute(      CommandContext commandContext){
        ProcessDefinitionInfoEntityManager infoEntityManager=commandContext.getProcessDefinitionInfoEntityManager();
        ObjectMapper objectMapper=commandContext.getProcessEngineConfiguration().getObjectMapper();
        ProcessDefinitionInfoCacheObject cacheObject=cache.get(processDefinitionId);
        ProcessDefinitionInfoEntity infoEntity=infoEntityManager.findProcessDefinitionInfoByProcessDefinitionId(processDefinitionId);
        if (infoEntity != null && infoEntity.getRevision() != cacheObject.getRevision()) {
          cacheObject.setRevision(infoEntity.getRevision());
          if (infoEntity.getInfoJsonId() != null) {
            byte[] infoBytes=infoEntityManager.findInfoJsonById(infoEntity.getInfoJsonId());
            try {
              ObjectNode infoNode=(ObjectNode)objectMapper.readTree(infoBytes);
              cacheObject.setInfoNode(infoNode);
            }
 catch (            Exception e) {
              throw new ActivitiException("Error reading json info node for process definition " + processDefinitionId,e);
            }
          }
        }
 else         if (infoEntity == null) {
          cacheObject.setRevision(0);
          cacheObject.setInfoNode(objectMapper.createObjectNode());
        }
        return cacheObject;
      }
    }
);
  }
  return infoCacheObject;
}
