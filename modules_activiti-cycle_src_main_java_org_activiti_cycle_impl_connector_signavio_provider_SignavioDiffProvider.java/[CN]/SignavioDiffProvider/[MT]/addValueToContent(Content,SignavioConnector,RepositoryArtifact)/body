{
  RepositoryArtifact diffTarget=targetArtifact;
  if (targetArtifact == null) {
    diffTarget=artifact;
  }
  Map<String,List<String>> missingSourceElements=new HashMap<String,List<String>>();
  Map<String,List<String>> missingTargetElements=new HashMap<String,List<String>>();
  String sourceJson=connector.getContent(artifact.getNodeId(),SignavioPluginDefinition.CONTENT_REPRESENTATION_ID_JSON).asString();
  String targetJson=connector.getContent(diffTarget.getNodeId(),SignavioPluginDefinition.CONTENT_REPRESENTATION_ID_JSON).asString();
  try {
    Diagram sourceDiagram=DiagramBuilder.parseJson(sourceJson);
    Diagram targetDiagram=DiagramBuilder.parseJson(targetJson);
    for (    Shape sourceShape : sourceDiagram.getShapes()) {
      String sourceId=sourceShape.getResourceId();
      boolean existant=false;
      for (      Shape targetShape : targetDiagram.getShapes()) {
        if (targetShape.getResourceId() != null && targetShape.getResourceId().equals(sourceId)) {
          existant=true;
        }
      }
      if (!existant) {
        ArrayList<String> messages=new ArrayList<String>();
        messages.add("MISSING");
        missingSourceElements.put(sourceId,messages);
      }
    }
    for (    Shape targetShape : targetDiagram.getShapes()) {
      String targetId=targetShape.getResourceId();
      boolean existant=false;
      for (      Shape sourceShape : sourceDiagram.getShapes()) {
        if (sourceShape.getResourceId() != null && sourceShape.getResourceId().equals(targetId)) {
          existant=true;
        }
      }
      if (!existant) {
        ArrayList<String> messages=new ArrayList<String>();
        messages.add("MISSING");
        missingTargetElements.put(targetId,messages);
      }
    }
  }
 catch (  Exception e) {
    throw new RepositoryException("Could not create DIFF due to exception",e);
  }
  try {
    String script1=new SignavioSvgApiBuilder(connector,artifact).highlightNodes(missingSourceElements,INFO_COLOR).buildScript();
    String script2=new SignavioSvgApiBuilder(connector,diffTarget).highlightNodes(missingTargetElements,INFO_COLOR).buildScript();
    String htmlContent="<p><b>Expertimental</b> feature to play around with Signavio diffing. Currently show diff against artifact " + diffTarget.getGlobalUniqueId() + ". Use Options to select other diff target.</p>";
    htmlContent+="Changes from " + diffTarget.getMetadata().getName() + " in "+ artifact.getMetadata().getName();
    htmlContent+=script1;
    htmlContent+="Changes from " + artifact.getMetadata().getName() + " in "+ diffTarget.getMetadata().getName();
    htmlContent+=script2;
    String html=SignavioSvgApiBuilder.buildHtml(htmlContent,200);
    content.setValue(html);
  }
 catch (  JSONException e) {
    throw new RepositoryException("Could not show DIFF due to exception in SvgApi",e);
  }
}
