{
  this.applicationContext=new AnnotationConfigApplicationContext();
  this.applicationContext.register(InboundGatewayConfiguration.class);
  this.applicationContext.refresh();
  RepositoryService repositoryService=this.applicationContext.getBean(RepositoryService.class);
  RuntimeService runtimeService=this.applicationContext.getBean(RuntimeService.class);
  ProcessEngine processEngine=this.applicationContext.getBean(ProcessEngine.class);
  Assert.assertNotNull("we should have a default repositoryService included",repositoryService);
  String integrationGatewayProcess="integrationGatewayProcess";
  List<ProcessDefinition> processDefinitionList=repositoryService.createProcessDefinitionQuery().processDefinitionKey(integrationGatewayProcess).list();
  ProcessDefinition processDefinition=processDefinitionList.iterator().next();
  Assert.assertEquals(processDefinition.getKey(),integrationGatewayProcess);
  Map<String,Object> vars=new HashMap<String,Object>();
  vars.put("customerId",232);
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey(integrationGatewayProcess,vars);
  org.junit.Assert.assertTrue(this.applicationContext.getBean(InboundGatewayConfiguration.AnalysingService.class).getStringAtomicReference().get().equals(projectId));
  System.out.println("finished " + integrationGatewayProcess);
}
