{
  if (log.isLoggable(Level.FINE)) {
    log.fine("Leaving activity '" + execution.getActivity().getId() + "'");
  }
  List<Transition> outgoingTransitions=execution.getOutgoingTransitions();
  if (outgoingTransitions.size() == 1) {
    execution.take(outgoingTransitions.get(0));
  }
 else   if (outgoingTransitions.size() > 1) {
    ConcurrencyController concurrencyController=new ConcurrencyController(execution);
    concurrencyController.inactivate();
    List<ActivityExecution> joinedExecutions=new ArrayList<ActivityExecution>();
    joinedExecutions.add(execution);
    List<Transition> transitionsToTake=new ArrayList<Transition>();
    for (    Transition outgoingTransition : outgoingTransitions) {
      if (outgoingTransition.getCondition() == null || !checkConditions || outgoingTransition.getCondition().evaluate(execution)) {
        transitionsToTake.add(outgoingTransition);
      }
    }
    concurrencyController.takeAll(transitionsToTake,joinedExecutions);
  }
 else {
    if (log.isLoggable(Level.FINE)) {
      log.fine("No outgoing sequence flow found for " + execution.getActivity().getId() + ". Ending execution.");
    }
    execution.end();
  }
}
