{
  List<ProcessDefinition> processDefinitions=getDbSqlSession().createProcessDefinitionQuery().deploymentId(deploymentId).list();
  List<Model> models=getDbSqlSession().createModelQueryImpl().deploymentId(deploymentId).list();
  for (  Model model : models) {
    ModelEntity modelEntity=(ModelEntity)model;
    modelEntity.setDeploymentId(null);
    getModelManager().updateModel(modelEntity);
  }
  if (cascade) {
    for (    ProcessDefinition processDefinition : processDefinitions) {
      String processDefinitionId=processDefinition.getId();
      getProcessInstanceManager().deleteProcessInstancesByProcessDefinition(processDefinitionId,"deleted deployment",cascade);
    }
  }
  for (  ProcessDefinition processDefinition : processDefinitions) {
    String processDefinitionId=processDefinition.getId();
    getIdentityLinkManager().deleteIdentityLinksByProcDef(processDefinitionId);
    getEventSubscriptionManager().deleteEventSubscriptionsForProcessDefinition(processDefinitionId);
  }
  getProcessDefinitionManager().deleteProcessDefinitionsByDeploymentId(deploymentId);
  for (  ProcessDefinition processDefinition : processDefinitions) {
    List<Job> timerStartJobs=Context.getCommandContext().getJobEntityManager().findJobsByConfiguration(TimerStartEventJobHandler.TYPE,processDefinition.getKey());
    if (timerStartJobs != null && timerStartJobs.size() > 0) {
      long nrOfVersions=new ProcessDefinitionQueryImpl(Context.getCommandContext()).processDefinitionKey(processDefinition.getKey()).count();
      long nrOfProcessDefinitionsWithSameKey=0;
      for (      ProcessDefinition p : processDefinitions) {
        if (!p.getId().equals(processDefinition.getId()) && p.getKey().equals(processDefinition.getKey())) {
          nrOfProcessDefinitionsWithSameKey++;
        }
      }
      if (nrOfVersions - nrOfProcessDefinitionsWithSameKey <= 1) {
        for (        Job job : timerStartJobs) {
          if (Context.getProcessEngineConfiguration().getEventDispatcher().isEnabled()) {
            Context.getProcessEngineConfiguration().getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.JOB_CANCELED,job,null,null,processDefinition.getId()));
          }
          ((JobEntity)job).delete();
        }
      }
    }
    List<EventSubscriptionEntity> findEventSubscriptionsByConfiguration=Context.getCommandContext().getEventSubscriptionEntityManager().findEventSubscriptionsByConfiguration(MessageEventHandler.EVENT_HANDLER_TYPE,processDefinition.getId(),processDefinition.getTenantId());
    for (    EventSubscriptionEntity eventSubscriptionEntity : findEventSubscriptionsByConfiguration) {
      eventSubscriptionEntity.delete();
    }
  }
  getResourceManager().deleteResourcesByDeploymentId(deploymentId);
  getDbSqlSession().delete("deleteDeployment",deploymentId);
}
