{
  try {
    Model model=repositoryService.getModel(modelId);
    ObjectNode modelJson=(ObjectNode)objectMapper.readTree(model.getMetaInfo());
    modelJson.put(MODEL_NAME,values.getFirst("name"));
    modelJson.put(MODEL_DESCRIPTION,values.getFirst("description"));
    model.setMetaInfo(modelJson.toString());
    model.setName(values.getFirst("name"));
    repositoryService.saveModel(model);
    repositoryService.addModelEditorSource(model.getId(),values.getFirst("json_xml").getBytes("utf-8"));
    InputStream svgStream=new ByteArrayInputStream(values.getFirst("svg_xml").getBytes("utf-8"));
    TranscoderInput input=new TranscoderInput(svgStream);
    PNGTranscoder transcoder=new PNGTranscoder();
    ByteArrayOutputStream outStream=new ByteArrayOutputStream();
    TranscoderOutput output=new TranscoderOutput(outStream);
    transcoder.transcode(input,output);
    final byte[] result=outStream.toByteArray();
    repositoryService.addModelEditorSourceExtra(model.getId(),result);
    outStream.close();
  }
 catch (  Exception e) {
    LOGGER.error("Error saving model",e);
    throw new ActivitiException("Error saving model",e);
  }
}
