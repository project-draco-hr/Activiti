{
  if (objectNode.get(EDITOR_CHILD_SHAPES) != null) {
    for (    JsonNode jsonChildNode : objectNode.get(EDITOR_CHILD_SHAPES)) {
      ObjectNode childNode=(ObjectNode)jsonChildNode;
      String stencilId=BpmnJsonConverterUtil.getStencilId(childNode);
      if (STENCIL_SUB_PROCESS.equals(stencilId)) {
        filterAllEdges(childNode,edgeMap,sourceAndTargetMap,shapeMap,sourceRefMap);
      }
 else       if (STENCIL_SEQUENCE_FLOW.equals(stencilId) || STENCIL_ASSOCIATION.equals(stencilId)) {
        String childEdgeId=BpmnJsonConverterUtil.getElementId(childNode);
        JsonNode targetNode=childNode.get("target");
        if (targetNode != null && targetNode.isNull() == false) {
          String targetRefId=targetNode.get(EDITOR_SHAPE_ID).asText();
          List<JsonNode> sourceAndTargetList=new ArrayList<JsonNode>();
          sourceAndTargetList.add(sourceRefMap.get(childNode.get(EDITOR_SHAPE_ID).asText()));
          sourceAndTargetList.add(shapeMap.get(targetRefId));
          sourceAndTargetMap.put(childEdgeId,sourceAndTargetList);
        }
        edgeMap.put(childEdgeId,childNode);
      }
    }
  }
}
