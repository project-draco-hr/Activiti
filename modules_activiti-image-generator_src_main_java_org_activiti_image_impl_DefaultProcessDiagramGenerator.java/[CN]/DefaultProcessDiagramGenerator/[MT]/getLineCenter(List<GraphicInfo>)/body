{
  GraphicInfo gi=new GraphicInfo();
  int xPoints[]=new int[graphicInfoList.size()];
  int yPoints[]=new int[graphicInfoList.size()];
  double length=0;
  double[] lengths=new double[graphicInfoList.size()];
  lengths[0]=0;
  double m;
  for (int i=1; i < graphicInfoList.size(); i++) {
    GraphicInfo graphicInfo=graphicInfoList.get(i);
    GraphicInfo previousGraphicInfo=graphicInfoList.get(i - 1);
    if (i == 1) {
      xPoints[0]=(int)previousGraphicInfo.getX();
      yPoints[0]=(int)previousGraphicInfo.getY();
    }
    xPoints[i]=(int)graphicInfo.getX();
    yPoints[i]=(int)graphicInfo.getY();
    length+=Math.sqrt(Math.pow((int)graphicInfo.getX() - (int)previousGraphicInfo.getX(),2) + Math.pow((int)graphicInfo.getY() - (int)previousGraphicInfo.getY(),2));
    lengths[i]=length;
  }
  m=length / 2;
  int p1=0, p2=1;
  for (int i=1; i < lengths.length; i++) {
    double len=lengths[i];
    p1=i - 1;
    p2=i;
    if (len > m) {
      break;
    }
  }
  GraphicInfo graphicInfo1=graphicInfoList.get(p1);
  GraphicInfo graphicInfo2=graphicInfoList.get(p2);
  double AB=(int)graphicInfo2.getX() - (int)graphicInfo1.getX();
  double OA=(int)graphicInfo2.getY() - (int)graphicInfo1.getY();
  double OB=lengths[p2] - lengths[p1];
  double ob=m - lengths[p1];
  double ab=AB * ob / OB;
  double oa=OA * ob / OB;
  double mx=graphicInfo1.getX() + ab;
  double my=graphicInfo1.getY() + oa;
  gi.setX(mx);
  gi.setY(my);
  return gi;
}
