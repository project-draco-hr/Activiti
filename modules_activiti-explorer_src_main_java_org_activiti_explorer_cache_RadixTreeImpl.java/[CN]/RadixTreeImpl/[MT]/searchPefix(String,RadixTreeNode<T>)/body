{
  RadixTreeNode<T> result=null;
  int numberOfMatchingCharacters=node.getNumberOfMatchingCharacters(key);
  if (numberOfMatchingCharacters == key.length() && numberOfMatchingCharacters <= node.getKey().length()) {
    result=node;
  }
 else   if (node.getKey().equals("") == true || (numberOfMatchingCharacters < key.length() && numberOfMatchingCharacters >= node.getKey().length())) {
    String newText=key.substring(numberOfMatchingCharacters,key.length());
    for (    RadixTreeNode<T> child : node.getChildern()) {
      if (child.getKey().startsWith(newText.charAt(0) + "")) {
        result=searchPefix(newText,child);
        break;
      }
    }
  }
  return result;
}
