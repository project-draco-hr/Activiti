{
  final Table taskTable=new Table();
  taskTable.addStyleName(Constants.STYLE_TASK_LIST);
  taskTable.addListener(new Property.ValueChangeListener(){
    private static final long serialVersionUID=8811553575319455854L;
    public void valueChange(    ValueChangeEvent event){
      Item item=taskTable.getItem(event.getProperty().getValue());
      if (item != null) {
        String taskId=(String)item.getItemProperty("id").getValue();
        splitPanel.setSecondComponent(new TaskDetailPanel(taskId,TaskPage.this));
        UriFragment taskFragment=new UriFragment(TaskNavigationHandler.TASK_URI_PART,taskId);
        taskFragment.addParameter("category",TaskNavigationHandler.CATEGORY_INBOX);
        ExplorerApplication.getCurrent().setCurrentUriFragment(taskFragment);
      }
 else {
        splitPanel.removeComponent(splitPanel.getSecondComponent());
        ExplorerApplication.getCurrent().setCurrentUriFragment(new UriFragment(TaskNavigationHandler.TASK_URI_PART));
      }
    }
  }
);
  this.lazyLoadingQuery=createLazyLoadingQuery();
  this.taskListContainer=new LazyLoadingContainer(lazyLoadingQuery,10);
  taskTable.setContainerDataSource(taskListContainer);
  taskTable.addGeneratedColumn("icon",new ThemeImageColumnGenerator(Images.TASK));
  taskTable.setColumnWidth("icon",32);
  taskTable.addContainerProperty("name",String.class,null);
  taskTable.setColumnHeaderMode(Table.COLUMN_HEADER_MODE_HIDDEN);
  return taskTable;
}
