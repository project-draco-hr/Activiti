{
  String artifactId=req.getString("artifactId");
  String cuid=req.getCurrentUserId();
  WebScriptRequest wsReq=req.getWebScriptRequest();
  HttpSession session=req.getHttpSession();
  RepositoryConnector conn=SessionUtil.getRepositoryConnector(cuid,session);
  RepositoryArtifact artifact=conn.getRepositoryArtifact(artifactId);
  List<ContentView> contentViews=new ArrayList<ContentView>();
  for (  ContentRepresentation representation : artifact.getArtifactType().getContentRepresentations()) {
    try {
      if (representation.getMimeType().equals(ContentType.TEXT) || representation.getMimeType().equals(ContentType.XML) || representation.getMimeType().equals(ContentType.HTML)|| representation.getMimeType().equals(ContentType.JAVASCRIPT)) {
        String content=conn.getContent(artifactId,representation.getId()).asString();
        contentViews.add(new ContentView(representation.getMimeType(),representation.getId(),content));
      }
 else       if (representation.getMimeType().startsWith("image/")) {
        String url=wsReq.getServerPath() + wsReq.getContextPath() + "/service/content?artifactId="+ URLEncoder.encode(artifactId,"UTF-8")+ "&content-type="+ URLEncoder.encode(representation.getMimeType(),"UTF-8");
        contentViews.add(new ContentView(representation.getMimeType(),representation.getId(),url));
      }
    }
 catch (    Exception ex) {
      log.log(Level.WARNING,"Exception while loading content representation",ex);
      StringWriter sw=new StringWriter();
      ex.printStackTrace(new PrintWriter(sw));
      String stackTrace="Exception while accessing content. Details:\n\n" + sw.toString();
      contentViews.add(new ContentView(ContentType.TEXT,representation.getId(),stackTrace));
    }
  }
  model.put("actions",artifact.getArtifactType().getParameterizedActions());
  List<DownloadActionView> downloads=new ArrayList<DownloadActionView>();
  for (  DownloadContentAction action : artifact.getArtifactType().getDownloadContentActions()) {
    try {
      String url=wsReq.getServerPath() + wsReq.getContextPath() + "/service/content?artifactId="+ URLEncoder.encode(artifactId,"UTF-8")+ "&content-type="+ URLEncoder.encode(action.getContentRepresentation().getMimeType(),"UTF-8");
      downloads.add(new DownloadActionView(action.getId(),url,action.getContentRepresentation().getMimeType(),action.getContentRepresentation().getId()));
    }
 catch (    UnsupportedEncodingException e) {
      throw new RuntimeException(e);
    }
  }
  model.put("downloads",downloads);
  model.put("links",artifact.getOutgoingLinks());
  model.put("artifactId",artifact.getId());
  model.put("contentViews",contentViews);
}
