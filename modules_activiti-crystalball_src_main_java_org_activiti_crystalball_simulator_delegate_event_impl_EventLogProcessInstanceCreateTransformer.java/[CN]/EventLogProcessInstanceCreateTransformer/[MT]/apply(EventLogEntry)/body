{
  if ("PROCESSINSTANCE_START".equals(event.getType())) {
    ObjectMapper objectMapper=new ObjectMapper();
    Map<String,Object> data;
    try {
      data=objectMapper.readValue(event.getData(),new TypeReference<HashMap<String,Object>>(){
      }
);
    }
 catch (    IOException e) {
      throw new CrystalballException("unable to parse JSON string.",e);
    }
    String processDefinitionId=(String)data.get(Fields.PROCESS_DEFINITION_ID);
    String businessKeyValue=(String)data.get(Fields.BUSINESS_KEY);
    String processInstanceId=(String)data.get(Fields.PROCESS_INSTANCE_ID);
    Map<String,Object> simEventProperties=new HashMap<String,Object>();
    simEventProperties.put(processDefinitionIdKey,processDefinitionId);
    simEventProperties.put(this.businessKey,businessKeyValue);
    simEventProperties.put(PROCESS_INSTANCE_ID,processInstanceId);
    return new SimulationEvent.Builder(simulationEventType).priority((int)event.getLogNumber()).properties(simEventProperties).build();
  }
  return null;
}
