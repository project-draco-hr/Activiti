{
  ProcessEngineImpl processEngine=initProcessEngine();
  TaskService taskService=processEngine.getTaskService();
  RuntimeService runtimeService=processEngine.getRuntimeService();
  ManagementService managementService=processEngine.getManagementService();
  HistoryService historyService=processEngine.getHistoryService();
  Map<String,Object> variables=new HashMap<String,Object>();
  variables.put(TEST_VARIABLE,TEST_VALUE);
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey(USERTASK_PROCESS,BUSINESS_KEY,variables);
  Task task=taskService.createTaskQuery().taskDefinitionKey("userTask").singleResult();
  TimeUnit.MILLISECONDS.sleep(50);
  variables=new HashMap<String,Object>();
  variables.put(TASK_TEST_VARIABLE,TASK_TEST_VALUE);
  taskService.complete(task.getId(),variables);
  List<EventLogEntry> eventLogEntries=managementService.getEventLogEntries(null,null);
  EventLogTransformer transformer=new EventLogTransformer(getTransformers());
  List<SimulationEvent> simulationEvents=transformer.transform(eventLogEntries);
  SimpleEventCalendar eventCalendar=new SimpleEventCalendar(processEngine.getProcessEngineConfiguration().getClock(),new SimulationEventComparator());
  eventCalendar.addEvents(simulationEvents);
  final SimulationDebugger simRun=new ReplaySimulationRun(processEngine,eventCalendar,getReplayHandlers(processInstance.getId()));
  simRun.init(new NoExecutionVariableScope());
  assertEquals(0,runtimeService.createProcessInstanceQuery().processDefinitionKey(USERTASK_PROCESS).count());
  assertEquals(0,taskService.createTaskQuery().taskDefinitionKey("userTask").count());
  simRun.step();
  ProcessInstance replayProcessInstance=runtimeService.createProcessInstanceQuery().processDefinitionKey(USERTASK_PROCESS).singleResult();
  assertNotNull(replayProcessInstance);
  assertTrue(replayProcessInstance.getId().equals(processInstance.getId()) == false);
  assertEquals(TEST_VALUE,runtimeService.getVariable(replayProcessInstance.getId(),TEST_VARIABLE));
  assertEquals(1,taskService.createTaskQuery().taskDefinitionKey("userTask").count());
  simRun.step();
  assertEquals(0,runtimeService.createProcessInstanceQuery().processDefinitionKey(USERTASK_PROCESS).count());
  assertEquals(0,taskService.createTaskQuery().taskDefinitionKey("userTask").count());
  HistoricVariableInstance variableInstance=historyService.createHistoricVariableInstanceQuery().processInstanceId(replayProcessInstance.getId()).variableName(TASK_TEST_VARIABLE).singleResult();
  assertNotNull(variableInstance);
  assertEquals(TASK_TEST_VALUE,variableInstance.getValue());
  simRun.close();
  processEngine.close();
  ProcessEngines.destroy();
}
