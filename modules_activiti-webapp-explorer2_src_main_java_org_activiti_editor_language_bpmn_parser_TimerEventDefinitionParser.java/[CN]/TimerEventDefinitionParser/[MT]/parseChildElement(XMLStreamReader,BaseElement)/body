{
  if (parentElement instanceof Event == false)   return;
  TimerEventDefinition eventDefinition=new TimerEventDefinition();
  try {
    while (xtr.hasNext()) {
      xtr.next();
      if (xtr.isStartElement() && "timeDuration".equalsIgnoreCase(xtr.getLocalName())) {
        eventDefinition.setTimeDuration(xtr.getElementText());
        break;
      }
 else       if (xtr.isStartElement() && "timeDate".equalsIgnoreCase(xtr.getLocalName())) {
        eventDefinition.setTimeDate(xtr.getElementText());
        break;
      }
 else       if (xtr.isStartElement() && "timeCycle".equalsIgnoreCase(xtr.getLocalName())) {
        eventDefinition.setTimeCycle(xtr.getElementText());
        break;
      }
 else       if (xtr.isEndElement() && "timerEventDefinition".equalsIgnoreCase(xtr.getLocalName())) {
        break;
      }
    }
  }
 catch (  Exception e) {
    LOGGER.log(Level.WARNING,"Error parsing timer event definition",e);
  }
  ((Event)parentElement).getEventDefinitions().add(eventDefinition);
}
