{
  Ellipse2D outerCircle=new Ellipse2D.Double(graphicInfo.getX(),graphicInfo.getY(),graphicInfo.getWidth(),graphicInfo.getHeight());
  int innerCircleSize=(int)(4 / scaleFactor);
  if (innerCircleSize == 0) {
    innerCircleSize=1;
  }
  int innerCircleX=(int)graphicInfo.getX() + innerCircleSize;
  int innerCircleY=(int)graphicInfo.getY() + innerCircleSize;
  int innerCircleWidth=(int)graphicInfo.getWidth() - (2 * innerCircleSize);
  int innerCircleHeight=(int)graphicInfo.getHeight() - (2 * innerCircleSize);
  Ellipse2D innerCircle=new Ellipse2D.Double(innerCircleX,innerCircleY,innerCircleWidth,innerCircleHeight);
  Paint originalPaint=g.getPaint();
  Stroke originalStroke=g.getStroke();
  g.setPaint(EVENT_COLOR);
  g.fill(outerCircle);
  g.setPaint(EVENT_BORDER_COLOR);
  if (isInterrupting == false)   g.setStroke(NON_INTERRUPTING_EVENT_STROKE);
  g.draw(outerCircle);
  g.setStroke(originalStroke);
  g.setPaint(originalPaint);
  g.draw(innerCircle);
  if (image != null) {
    int imageX=(int)(graphicInfo.getX() + (graphicInfo.getWidth() / 4));
    int imageY=(int)(graphicInfo.getY() + (graphicInfo.getHeight() / 4));
    if (scaleFactor == 1.0 && "timer".equals(eventType)) {
      imageX--;
      imageY--;
    }
    g.drawImage(image,imageX,imageY,(int)(image.getWidth() / scaleFactor),(int)(image.getHeight() / scaleFactor),null);
  }
}
