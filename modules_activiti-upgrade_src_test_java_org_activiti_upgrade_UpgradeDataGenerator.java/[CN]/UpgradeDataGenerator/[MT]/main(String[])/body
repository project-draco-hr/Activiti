{
  try {
    LogUtil.readJavaUtilLoggingConfigFromClasspath();
    if (args == null || args.length != 1) {
      throw new RuntimeException("exactly argument expected: database");
    }
    String database=args[0];
    log.fine("database: " + database);
    ProcessEngineConfiguration processEngineConfiguration=(ProcessEngineConfigurationImpl)ProcessEngineConfiguration.createStandaloneProcessEngineConfiguration().setHistory("full").setJobExecutorActivate(false);
    log.fine("loading properties...");
    String propertiesFileName=System.getProperty("user.home") + System.getProperty("file.separator") + ".activiti"+ System.getProperty("file.separator")+ "jdbc"+ System.getProperty("file.separator")+ "build."+ database+ ".properties";
    Properties properties=new Properties();
    properties.load(new FileInputStream(propertiesFileName));
    log.fine("jdbc url.....: " + processEngineConfiguration.getJdbcUrl());
    log.fine("jdbc username: " + processEngineConfiguration.getJdbcUsername());
    log.fine("installing jdbc proxy driver...");
    ProxyDriver.setUrl(properties.getProperty("jdbc.url"));
    DriverManager.registerDriver(new ProxyDriver());
    processEngineConfiguration.setJdbcDriver(properties.getProperty("jdbc.driver"));
    processEngineConfiguration.setJdbcUrl("proxy");
    processEngineConfiguration.setJdbcUsername(properties.getProperty("jdbc.username"));
    processEngineConfiguration.setJdbcPassword(properties.getProperty("jdbc.password"));
    log.fine("building the process engine...");
    ProcessEngine processEngine=processEngineConfiguration.buildProcessEngine();
    log.fine("deploy processes and start process instances");
    UpgradeTestCase.setProcessEngine(processEngine);
    for (    UpgradeTestCase upgradeTestCase : upgradeTestCases) {
      log.fine("### Running test " + ClassNameUtil.getClassNameWithoutPackage(upgradeTestCase.getClass()) + " in the old version");
      upgradeTestCase.runInTheOldVersion();
    }
    log.fine("### Captured SQL");
    System.err.println();
    System.err.println();
    for (    String statement : ProxyDriver.statements) {
      System.err.println(statement);
      System.err.println();
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
