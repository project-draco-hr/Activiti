{
  try {
    Calendar now=Calendar.getInstance();
    processEngineConfiguration.getClock().setCurrentTime(now.getTime());
    Task parentTask=taskService.newTask();
    taskService.saveTask(parentTask);
    Task task=taskService.newTask();
    task.setParentTaskId(parentTask.getId());
    task.setName("Task name");
    task.setDescription("Descriptions");
    task.setAssignee("kermit");
    task.setDelegationState(DelegationState.RESOLVED);
    task.setDescription("Description");
    task.setDueDate(now.getTime());
    task.setOwner("owner");
    task.setPriority(20);
    taskService.saveTask(task);
    String url=buildUrl(RestUrls.URL_TASK,task.getId());
    CloseableHttpResponse response=executeRequest(new HttpGet(url),HttpStatus.SC_OK);
    JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
    closeResponse(response);
    assertEquals(task.getId(),responseNode.get("id").asText());
    assertEquals(task.getAssignee(),responseNode.get("assignee").asText());
    assertEquals(task.getOwner(),responseNode.get("owner").asText());
    assertEquals(task.getDescription(),responseNode.get("description").asText());
    assertEquals(task.getName(),responseNode.get("name").asText());
    assertEquals(task.getDueDate(),getDateFromISOString(responseNode.get("dueDate").asText()));
    assertEquals(task.getCreateTime(),getDateFromISOString(responseNode.get("createTime").asText()));
    assertEquals(task.getPriority(),responseNode.get("priority").asInt());
    assertEquals("resolved",responseNode.get("delegationState").asText());
    assertTrue(responseNode.get("executionId").isNull());
    assertTrue(responseNode.get("processInstanceId").isNull());
    assertTrue(responseNode.get("processDefinitionId").isNull());
    assertEquals("",responseNode.get("tenantId").textValue());
    assertTrue(responseNode.get("parentTaskUrl").asText().equals(buildUrl(RestUrls.URL_TASK,parentTask.getId())));
    assertTrue(responseNode.get("url").asText().equals(url));
  }
  finally {
    List<Task> tasks=taskService.createTaskQuery().list();
    for (    Task task : tasks) {
      taskService.deleteTask(task.getId(),true);
    }
  }
}
