{
  User savedUser=null;
  try {
    User newUser=identityService.newUser("testuser");
    newUser.setFirstName("Fred");
    newUser.setLastName("McDonald");
    newUser.setEmail("no-reply@activiti.org");
    identityService.saveUser(newUser);
    savedUser=newUser;
    ObjectNode taskUpdateRequest=objectMapper.createObjectNode();
    taskUpdateRequest.putNull("firstName");
    taskUpdateRequest.putNull("lastName");
    taskUpdateRequest.putNull("email");
    taskUpdateRequest.putNull("password");
    HttpPut httpPut=new HttpPut(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_USER,newUser.getId()));
    httpPut.setEntity(new StringEntity(taskUpdateRequest.toString()));
    HttpResponse response=executeHttpRequest(httpPut,HttpStatus.SC_OK);
    JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
    assertNotNull(responseNode);
    assertEquals("testuser",responseNode.get("id").textValue());
    assertTrue(responseNode.get("firstName").isNull());
    assertTrue(responseNode.get("lastName").isNull());
    assertTrue(responseNode.get("email").isNull());
    assertTrue(responseNode.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_USER,newUser.getId())));
    newUser=identityService.createUserQuery().userId(newUser.getId()).singleResult();
    assertNull(newUser.getLastName());
    assertNull(newUser.getFirstName());
    assertNull(newUser.getEmail());
  }
  finally {
    if (savedUser != null) {
      identityService.deleteUser(savedUser.getId());
    }
  }
}
