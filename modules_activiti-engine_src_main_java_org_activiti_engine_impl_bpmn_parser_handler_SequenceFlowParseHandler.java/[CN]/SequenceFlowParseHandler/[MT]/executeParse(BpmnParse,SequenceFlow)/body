{
  ScopeImpl scope=bpmnParse.getCurrentScope();
  ActivityImpl sourceActivity=scope.findActivity(sequenceFlow.getSourceRef());
  ActivityImpl destinationActivity=scope.findActivity(sequenceFlow.getTargetRef());
  Expression skipExpression;
  if (StringUtils.isNotEmpty(sequenceFlow.getSkipExpression())) {
    ExpressionManager expressionManager=bpmnParse.getExpressionManager();
    skipExpression=expressionManager.createExpression(sequenceFlow.getSkipExpression());
  }
 else {
    skipExpression=null;
  }
  TransitionImpl transition=sourceActivity.createOutgoingTransition(sequenceFlow.getId(),skipExpression);
  bpmnParse.getSequenceFlows().put(sequenceFlow.getId(),transition);
  transition.setProperty("name",sequenceFlow.getName());
  transition.setProperty("documentation",sequenceFlow.getDocumentation());
  transition.setDestination(destinationActivity);
  if (StringUtils.isNotEmpty(sequenceFlow.getConditionExpression())) {
    Condition expressionCondition=new UelExpressionCondition(sequenceFlow.getConditionExpression());
    transition.setProperty(PROPERTYNAME_CONDITION_TEXT,sequenceFlow.getConditionExpression());
    transition.setProperty(PROPERTYNAME_CONDITION,expressionCondition);
  }
  createExecutionListenersOnTransition(bpmnParse,sequenceFlow.getExecutionListeners(),transition);
}
