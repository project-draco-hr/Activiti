{
  ExecutionEntity executionEntity=null;
  try {
    logger.fine("returning scoped object having beanName '" + name + "' for conversation ID '"+ this.getConversationId()+ "'. ");
    ProcessInstance processInstance=Context.getExecutionContext().getProcessInstance();
    executionEntity=(ExecutionEntity)processInstance;
    Object scopedObject=executionEntity.getVariable(name);
    if (scopedObject == null) {
      scopedObject=objectFactory.getObject();
      if (scopedObject instanceof ScopedObject) {
        ScopedObject sc=(ScopedObject)scopedObject;
        scopedObject=sc.getTargetObject();
        logger.fine("de-referencing " + ScopedObject.class.getName() + "#targetObject before persisting variable");
      }
      persistVariable(name,scopedObject);
    }
    return createDirtyCheckingProxy(name,scopedObject);
  }
 catch (  Throwable th) {
    logger.warning("couldn't return value from process scope! " + ExceptionUtils.getFullStackTrace(th));
  }
 finally {
    if (executionEntity != null) {
      logger.fine("set variable '" + name + "' on executionEntity# "+ executionEntity.getId());
    }
  }
  return null;
}
