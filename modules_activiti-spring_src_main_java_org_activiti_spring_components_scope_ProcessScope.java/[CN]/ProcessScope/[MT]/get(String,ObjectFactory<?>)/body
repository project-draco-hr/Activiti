{
  ExecutionEntity executionEntity=null;
  try {
    logger.debug("returning scoped object having beanName '{}' for conversation ID '{}'.",name,this.getConversationId());
    ProcessInstance processInstance=Context.getExecutionContext().getProcessInstance();
    executionEntity=(ExecutionEntity)processInstance;
    Object scopedObject=executionEntity.getVariable(name);
    if (scopedObject == null) {
      scopedObject=objectFactory.getObject();
      if (scopedObject instanceof ScopedObject) {
        ScopedObject sc=(ScopedObject)scopedObject;
        scopedObject=sc.getTargetObject();
        logger.debug("de-referencing {}#targetObject before persisting variable",ScopedObject.class.getName());
      }
      persistVariable(name,scopedObject);
    }
    return createDirtyCheckingProxy(name,scopedObject);
  }
 catch (  Throwable th) {
    logger.warn("couldn't return value from process scope! {}",th);
  }
 finally {
    if (executionEntity != null) {
      logger.debug("set variable '{}' on executionEntity#{}",name,executionEntity.getId());
    }
  }
  return null;
}
