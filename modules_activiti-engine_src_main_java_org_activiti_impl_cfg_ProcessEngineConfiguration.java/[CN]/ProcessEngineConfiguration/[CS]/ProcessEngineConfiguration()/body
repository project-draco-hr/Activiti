{
  processEngineName=ProcessEngines.NAME_DEFAULT;
  commandExecutor=new DefaultCommandExecutor();
  commandContextFactory=new CommandContextFactory(this);
  transactionContextFactory=new StandaloneTransactionContextFactory();
  repositoryService=new RepositoryServiceImpl();
  processService=new ProcessServiceImpl();
  taskService=new TaskServiceImpl();
  managementService=new ManagementServiceImpl();
  identityService=new IdentityServiceImpl();
  historicDataService=new HistoricDataServiceImpl();
  messageSessionFactory=new JobExecutorMessageSessionFactory();
  timerSessionFactory=new JobExecutorTimerSessionFactory();
  persistenceSessionFactory=new IbatisPersistenceSessionFactory();
  repositorySessionFactory=new DbRepositorySessionFactory();
  dbSqlSessionFactory=new DbSqlSessionFactory();
  sessionFactories=new HashMap<Class<?>,SessionFactory>();
  jobHandlers=new JobHandlers();
  jobHandlers.addJobHandler(new TimerExecuteNestedActivityJobHandler());
  jobExecutor=new JobExecutor();
  jobExecutorAutoActivate=false;
  databaseName="h2";
  dbSchemaStrategy=DbSchemaStrategy.CREATE_DROP;
  idGenerator=new IdGenerator();
  dataSource=null;
  localTransactions=true;
  jdbcDriver="org.h2.Driver";
  jdbcUrl="jdbc:h2:mem:activiti";
  jdbcUsername="sa";
  jdbcPassword="";
  scriptingEngines=new ScriptingEngines();
  variableTypes=new DefaultVariableTypes();
  expressionManager=new ExpressionManager();
  elResolver=null;
  MapBusinessCalendarManager mapBusinessCalendarManager=new MapBusinessCalendarManager();
  mapBusinessCalendarManager.addBusinessCalendar(DurationBusinessCalendar.NAME,new DurationBusinessCalendar());
  businessCalendarManager=mapBusinessCalendarManager;
  processEventBus=new DefaultProcessEventBus();
}
