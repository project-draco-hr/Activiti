{
  String processInstanceId=(String)getRequest().getAttributes().get("processInstanceId");
  if (processInstanceId == null) {
    throw new ActivitiException("No process instance id provided");
  }
  ObjectNode responseJSON=new ObjectMapper().createObjectNode();
  responseJSON.put("processInstanceId",processInstanceId);
  ArrayNode activitiesArray=new ObjectMapper().createArrayNode();
  ArrayNode flowsArray=new ObjectMapper().createArrayNode();
  try {
    processInstance=runtimeService.createProcessInstanceQuery().processInstanceId(processInstanceId).singleResult();
    processDefinition=(ProcessDefinitionEntity)repositoryService.getDeployedProcessDefinition(processInstance.getProcessDefinitionId());
    responseJSON.put("processDefinitionId",processInstance.getProcessDefinitionId());
    List<String> highLightedActivities=runtimeService.getActiveActivityIds(processInstanceId);
    System.out.println(highLightedActivities);
    List<String> highLightedFlows=getHighLightedFlows(processDefinition,processInstanceId);
    for (    String activityId : highLightedActivities) {
      activitiesArray.add(activityId);
    }
    for (    String flow : highLightedFlows) {
      flowsArray.add(flow);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  responseJSON.put("activities",activitiesArray);
  responseJSON.put("flows",flowsArray);
  return responseJSON;
}
