{
  this.replacedBy=(ExecutionEntity)replacedBy;
  CommandContext commandContext=Context.getCommandContext();
  DbSqlSession dbSqlSession=commandContext.getDbSqlSession();
  for (  TaskEntity task : getTasks()) {
    task.setExecutionId(replacedBy.getId());
    task.setExecution(this.replacedBy);
    List<VariableInstanceEntity> variables=(List)commandContext.getVariableInstanceEntityManager().findVariableInstancesByTaskId(task.getId());
    for (    VariableInstanceEntity variable : variables) {
      variable.setExecution(this.replacedBy);
    }
    this.replacedBy.addTask(task);
  }
  this.tasks.clear();
  tasks=dbSqlSession.findInCache(TaskEntity.class);
  for (  TaskEntity task : tasks) {
    if (id.equals(task.getExecutionId())) {
      task.setExecutionId(replacedBy.getId());
    }
  }
  List<JobEntity> jobs=getJobs();
  for (  JobEntity job : jobs) {
    job.setExecution((ExecutionEntity)replacedBy);
  }
  List<EventSubscriptionEntity> eventSubscriptions=getEventSubscriptions();
  for (  EventSubscriptionEntity subscriptionEntity : eventSubscriptions) {
    subscriptionEntity.setExecution((ExecutionEntity)replacedBy);
  }
  List<VariableInstanceEntity> variables=(List)commandContext.getVariableInstanceEntityManager().findVariableInstancesByExecutionId(id);
  for (  VariableInstanceEntity variable : variables) {
    variable.setExecutionId(replacedBy.getId());
  }
  variables=dbSqlSession.findInCache(VariableInstanceEntity.class);
  for (  VariableInstanceEntity variable : variables) {
    if (id.equals(variable.getExecutionId())) {
      variable.setExecutionId(replacedBy.getId());
    }
  }
  commandContext.getHistoryManager().recordExecutionReplacedBy(this,replacedBy);
}
