{
  log.debug("initializing {}",this);
  ScopeImpl scope=getScope();
  ensureParentInitialized();
  variableInstances=new HashMap<String,VariableInstanceEntity>();
  eventSubscriptions=new ArrayList<EventSubscriptionEntity>();
  jobs=new ArrayList<JobEntity>();
  tasks=new ArrayList<TaskEntity>();
  cachedEntityState=0;
  List<TimerDeclarationImpl> timerDeclarations=(List<TimerDeclarationImpl>)scope.getProperty(BpmnParse.PROPERTYNAME_TIMER_DECLARATION);
  if (timerDeclarations != null) {
    for (    TimerDeclarationImpl timerDeclaration : timerDeclarations) {
      TimerEntity timer=timerDeclaration.prepareTimerEntity(this);
      Context.getCommandContext().getJobEntityManager().schedule(timer);
    }
  }
  List<EventSubscriptionDeclaration> eventSubscriptionDeclarations=(List<EventSubscriptionDeclaration>)scope.getProperty(BpmnParse.PROPERTYNAME_EVENT_SUBSCRIPTION_DECLARATION);
  if (eventSubscriptionDeclarations != null) {
    for (    EventSubscriptionDeclaration eventSubscriptionDeclaration : eventSubscriptionDeclarations) {
      if (!eventSubscriptionDeclaration.isStartEvent()) {
        EventSubscriptionEntity eventSubscriptionEntity=eventSubscriptionDeclaration.prepareEventSubscriptionEntity(this);
        eventSubscriptionEntity.insert();
      }
    }
  }
}
