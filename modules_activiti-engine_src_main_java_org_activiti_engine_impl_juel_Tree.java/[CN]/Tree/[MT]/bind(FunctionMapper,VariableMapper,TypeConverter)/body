{
  Method[] methods=null;
  if (!functions.isEmpty()) {
    if (fnMapper == null) {
      throw new ELException(LocalMessages.get("error.function.nomapper"));
    }
    methods=new Method[functions.size()];
    for (    FunctionNode node : functions) {
      String image=node.getName();
      Method method=null;
      int colon=image.indexOf(':');
      if (colon < 0) {
        method=fnMapper.resolveFunction("",image);
      }
 else {
        method=fnMapper.resolveFunction(image.substring(0,colon),image.substring(colon + 1));
      }
      if (method == null) {
        throw new ELException(LocalMessages.get("error.function.notfound",image));
      }
      if (node.isVarArgs() && method.isVarArgs()) {
        if (method.getParameterTypes().length > node.getParamCount() + 1) {
          throw new ELException(LocalMessages.get("error.function.params",image));
        }
      }
 else {
        if (method.getParameterTypes().length != node.getParamCount()) {
          throw new ELException(LocalMessages.get("error.function.params",image));
        }
      }
      methods[node.getIndex()]=method;
    }
  }
  ValueExpression[] expressions=null;
  if (identifiers.size() > 0) {
    expressions=new ValueExpression[identifiers.size()];
    for (    IdentifierNode node : identifiers) {
      ValueExpression expression=null;
      if (varMapper != null) {
        expression=varMapper.resolveVariable(node.getName());
      }
      expressions[node.getIndex()]=expression;
    }
  }
  return new Bindings(methods,expressions,converter);
}
