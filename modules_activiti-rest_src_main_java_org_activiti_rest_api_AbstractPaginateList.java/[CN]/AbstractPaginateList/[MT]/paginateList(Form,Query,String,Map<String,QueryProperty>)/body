{
  int start=RequestUtil.getInteger(form,"start",0);
  int size=RequestUtil.getInteger(form,"size",10);
  String sort=form.getValues("sort");
  if (sort == null) {
    sort=defaultSort;
  }
  String order=form.getValues("order");
  if (order == null) {
    order="asc";
  }
  if (sort != null && properties.size() > 0) {
    QueryProperty qp=properties.get(sort);
    if (qp == null) {
      throw new ActivitiIllegalArgumentException("Value for param 'sort' is not valid, '" + sort + "' is not a valid property");
    }
    ((AbstractQuery)query).orderBy(qp);
    if (order.equals("asc")) {
      query.asc();
    }
 else     if (order.equals("desc")) {
      query.desc();
    }
 else {
      throw new ActivitiIllegalArgumentException("Value for param 'order' is not valid : '" + order + "', must be 'asc' or 'desc'");
    }
  }
  List list=processList(query.listPage(start,size));
  DataResponse response=new DataResponse();
  response.setStart(start);
  response.setSize(list.size());
  response.setSort(sort);
  response.setOrder(order);
  response.setTotal(query.count());
  response.setData(list);
  return response;
}
