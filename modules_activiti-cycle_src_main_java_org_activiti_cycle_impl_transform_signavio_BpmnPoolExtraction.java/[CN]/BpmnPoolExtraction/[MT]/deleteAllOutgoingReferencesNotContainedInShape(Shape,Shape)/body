{
  ArrayList<Shape> outgoings=shapeToClean.getOutgoings();
  if (outgoings != null && outgoings.size() > 0) {
    ArrayList<Shape> removeOutgoings=new ArrayList<Shape>();
    for (    Shape outgoing : outgoings) {
      Shape target=outgoing.getTarget();
      if (target != null) {
        if (!(shapeIsContainedIn(target,sourceShape))) {
          removeOutgoings.add(outgoing);
        }
      }
    }
    outgoings.removeAll(removeOutgoings);
    shapeToClean.setOutgoings(outgoings);
  }
}
