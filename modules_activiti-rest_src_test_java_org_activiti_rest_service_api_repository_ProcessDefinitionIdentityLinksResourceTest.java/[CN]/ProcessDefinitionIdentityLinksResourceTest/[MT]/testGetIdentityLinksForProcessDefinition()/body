{
  ProcessDefinition processDefinition=repositoryService.createProcessDefinitionQuery().singleResult();
  repositoryService.addCandidateStarterGroup(processDefinition.getId(),"admin");
  repositoryService.addCandidateStarterUser(processDefinition.getId(),"kermit");
  ClientResource client=getAuthenticatedClient(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_DEFINITION_IDENTITYLINKS_COLLECTION,processDefinition.getId()));
  Representation response=client.get();
  assertEquals(Status.SUCCESS_OK,client.getResponse().getStatus());
  JsonNode responseNode=objectMapper.readTree(response.getStream());
  assertNotNull(responseNode);
  assertTrue(responseNode.isArray());
  assertEquals(2,responseNode.size());
  boolean groupCandidateFound=false;
  boolean userCandidateFound=false;
  for (int i=0; i < responseNode.size(); i++) {
    ObjectNode link=(ObjectNode)responseNode.get(i);
    assertNotNull(link);
    if (!link.get("user").isNull()) {
      assertEquals("kermit",link.get("user").textValue());
      assertEquals("candidate",link.get("type").textValue());
      assertTrue(link.get("group").isNull());
      assertTrue(link.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_DEFINITION_IDENTITYLINK,encode(processDefinition.getId()),"users","kermit")));
      userCandidateFound=true;
    }
 else     if (!link.get("group").isNull()) {
      assertEquals("admin",link.get("group").textValue());
      assertEquals("candidate",link.get("type").textValue());
      assertTrue(link.get("user").isNull());
      assertTrue(link.get("url").textValue().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_DEFINITION_IDENTITYLINK,encode(processDefinition.getId()),"groups","admin")));
      groupCandidateFound=true;
    }
  }
  assertTrue(groupCandidateFound);
  assertTrue(userCandidateFound);
}
