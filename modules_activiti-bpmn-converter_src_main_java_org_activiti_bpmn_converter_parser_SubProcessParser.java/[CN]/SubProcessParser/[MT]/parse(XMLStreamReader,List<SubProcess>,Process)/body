{
  SubProcess subProcess=null;
  if (ELEMENT_TRANSACTION.equalsIgnoreCase(xtr.getLocalName())) {
    subProcess=new Transaction();
  }
 else   if (ATTRIBUTE_VALUE_TRUE.equalsIgnoreCase(xtr.getAttributeValue(null,ATTRIBUTE_TRIGGERED_BY))) {
    subProcess=new EventSubProcess();
  }
 else {
    subProcess=new SubProcess();
  }
  BpmnXMLUtil.addXMLLocation(subProcess,xtr);
  activeSubProcessList.add(subProcess);
  subProcess.setId(xtr.getAttributeValue(null,ATTRIBUTE_ID));
  subProcess.setName(xtr.getAttributeValue(null,ATTRIBUTE_NAME));
  boolean async=false;
  String asyncString=xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,ATTRIBUTE_ACTIVITY_ASYNCHRONOUS);
  if (ATTRIBUTE_VALUE_TRUE.equalsIgnoreCase(asyncString)) {
    async=true;
  }
  boolean notExclusive=false;
  String exclusiveString=xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,ATTRIBUTE_ACTIVITY_EXCLUSIVE);
  if (ATTRIBUTE_VALUE_FALSE.equalsIgnoreCase(exclusiveString)) {
    notExclusive=true;
  }
  subProcess.setAsynchronous(async);
  subProcess.setNotExclusive(notExclusive);
  if (StringUtils.isNotEmpty(xtr.getAttributeValue(null,ATTRIBUTE_ACTIVITY_DEFAULT))) {
    subProcess.setDefaultFlow(xtr.getAttributeValue(null,ATTRIBUTE_ACTIVITY_DEFAULT));
  }
  if (activeSubProcessList.size() > 1) {
    activeSubProcessList.get(activeSubProcessList.size() - 2).addFlowElement(subProcess);
  }
 else {
    activeProcess.addFlowElement(subProcess);
  }
}
