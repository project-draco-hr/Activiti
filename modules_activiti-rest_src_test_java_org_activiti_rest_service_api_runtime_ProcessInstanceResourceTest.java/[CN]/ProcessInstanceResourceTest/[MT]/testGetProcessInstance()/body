{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("processOne","myBusinessKey");
  CloseableHttpResponse response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE,processInstance.getId())),HttpStatus.SC_OK);
  JsonNode responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertEquals(processInstance.getId(),responseNode.get("id").textValue());
  assertEquals("myBusinessKey",responseNode.get("businessKey").textValue());
  assertEquals("processTask",responseNode.get("activityId").textValue());
  assertFalse(responseNode.get("suspended").booleanValue());
  assertEquals("",responseNode.get("tenantId").textValue());
  assertTrue(responseNode.get("url").asText().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE,processInstance.getId())));
  assertTrue(responseNode.get("processDefinitionUrl").asText().endsWith(RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_DEFINITION,processInstance.getProcessDefinitionId())));
  managementService.executeCommand(new ChangeDeploymentTenantIdCmd(deploymentId,"myTenant"));
  response=executeRequest(new HttpGet(SERVER_URL_PREFIX + RestUrls.createRelativeResourceUrl(RestUrls.URL_PROCESS_INSTANCE,processInstance.getId())),HttpStatus.SC_OK);
  responseNode=objectMapper.readTree(response.getEntity().getContent());
  closeResponse(response);
  assertNotNull(responseNode);
  assertEquals("myTenant",responseNode.get("tenantId").textValue());
}
