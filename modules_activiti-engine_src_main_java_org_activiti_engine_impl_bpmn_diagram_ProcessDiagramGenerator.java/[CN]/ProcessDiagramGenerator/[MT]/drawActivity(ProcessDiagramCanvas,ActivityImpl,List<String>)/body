{
  String type=(String)activity.getProperty("type");
  ActivityDrawInstruction drawInstruction=activityDrawInstructions.get(type);
  if (drawInstruction != null) {
    drawInstruction.draw(processDiagramCanvas,activity);
    boolean multiInstanceSequential=false, multiInstanceParallel=false, collapsed=false;
    String multiInstance=(String)activity.getProperty("multiInstance");
    if (multiInstance != null) {
      if ("sequential".equals(multiInstance)) {
        multiInstanceSequential=true;
      }
 else {
        multiInstanceParallel=true;
      }
    }
    Boolean expanded=(Boolean)activity.getProperty(BpmnParse.PROPERTYNAME_ISEXPANDED);
    if (expanded != null) {
      collapsed=!expanded;
    }
    processDiagramCanvas.drawActivityMarkers(activity.getX(),activity.getY(),activity.getWidth(),activity.getHeight(),multiInstanceSequential,multiInstanceParallel,collapsed);
    if (highLightedActivities.contains(activity.getId())) {
      drawHighLight(processDiagramCanvas,activity);
    }
  }
  for (  PvmTransition sequenceFlow : activity.getOutgoingTransitions()) {
    List<Integer> waypoints=((TransitionImpl)sequenceFlow).getWaypoints();
    for (int i=2; i < waypoints.size(); i+=2) {
      boolean drawConditionalIndicator=(i == 2) && sequenceFlow.getProperty(BpmnParse.PROPERTYNAME_CONDITION) != null && !((String)activity.getProperty("type")).toLowerCase().contains("gateway");
      if (i < waypoints.size() - 2) {
        processDiagramCanvas.drawSequenceflowWithoutArrow(waypoints.get(i - 2),waypoints.get(i - 1),waypoints.get(i),waypoints.get(i + 1),drawConditionalIndicator);
      }
 else {
        processDiagramCanvas.drawSequenceflow(waypoints.get(i - 2),waypoints.get(i - 1),waypoints.get(i),waypoints.get(i + 1),drawConditionalIndicator);
      }
    }
  }
  for (  ActivityImpl nestedActivity : activity.getActivities()) {
    drawActivity(processDiagramCanvas,nestedActivity,highLightedActivities);
  }
}
