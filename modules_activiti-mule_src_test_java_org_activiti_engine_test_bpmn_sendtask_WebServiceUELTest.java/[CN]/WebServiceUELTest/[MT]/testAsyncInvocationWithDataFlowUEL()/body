{
  assertEquals(-1,counter.getCount());
  DbRepositorySessionFactory dbRepositorySessionFactory=(DbRepositorySessionFactory)this.processEngineConfiguration.getSessionFactories().get(RepositorySession.class);
  String processDefinitionId=repositoryService.createProcessDefinitionQuery().processDefinitionKey("asyncWebServiceInvocationWithDataFlowUEL").singleResult().getId();
  ProcessDefinitionEntity processDefinition=dbRepositorySessionFactory.getProcessDefinitionCache().get(processDefinitionId);
  ItemDefinition itemDefinition=processDefinition.getIoSpecification().getDataInputs().get(0).getDefinition();
  ItemInstance itemInstance=itemDefinition.createInstance();
  FieldBaseStructureInstance structureInstance=(FieldBaseStructureInstance)itemInstance.getStructureInstance();
  structureInstance.setFieldValue("newCounterValue",23);
  Map<String,Object> variables=new HashMap<String,Object>();
  variables.put("dataInputOfProcess",itemInstance);
  processEngine.getRuntimeService().startProcessInstanceByKey("asyncWebServiceInvocationWithDataFlowUEL",variables);
  waitForJobExecutorToProcessAllJobs(10000L,250L);
  assertEquals(23,counter.getCount());
}
