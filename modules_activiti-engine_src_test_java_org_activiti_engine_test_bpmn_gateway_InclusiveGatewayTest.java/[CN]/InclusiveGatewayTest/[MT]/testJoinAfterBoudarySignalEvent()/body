{
  ProcessInstance processInstanceId=runtimeService.startProcessInstanceByKey("InclusiveGatewayAfterSignalBoundaryEvent");
  String subcriptedExecutionId=runtimeService.createExecutionQuery().processInstanceId(processInstanceId.getId()).messageEventSubscriptionName("MyMessage").singleResult().getId();
  runtimeService.messageEventReceived("MyMessage",subcriptedExecutionId);
  Task userTask=taskService.createTaskQuery().processInstanceId(processInstanceId.getId()).singleResult();
  assertEquals("There's still an active execution waiting in the first task","usertask1",userTask.getTaskDefinitionKey());
  taskService.complete(userTask.getId());
  userTask=taskService.createTaskQuery().processInstanceId(processInstanceId.getId()).singleResult();
  assertEquals("Only when both executions reach the inclusive gateway, flow arrives to the last user task","usertask2",userTask.getTaskDefinitionKey());
  taskService.complete(userTask.getId());
  long nExecutions=runtimeService.createExecutionQuery().processInstanceId(processInstanceId.getId()).count();
  assertEquals(0,nExecutions);
}
