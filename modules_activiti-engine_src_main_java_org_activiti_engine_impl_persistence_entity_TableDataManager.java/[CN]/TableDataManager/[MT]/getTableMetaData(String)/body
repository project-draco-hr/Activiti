{
  TableMetaData result=new TableMetaData();
  try {
    result.setTableName(tableName);
    DatabaseMetaData metaData=getDbSqlSession().getSqlSession().getConnection().getMetaData();
    if ("postgres".equals(getDbSqlSession().getDbSqlSessionFactory().getDatabaseType())) {
      tableName=tableName.toLowerCase();
    }
    String schema=getProcessEngineConfiguration().getDatabaseSchema();
    ResultSet resultSet=metaData.getColumns(getProcessEngineConfiguration().getDatabaseCatalog(),schema,tableName,null);
    while (resultSet.next()) {
      boolean wrongSchema=false;
      if (schema != null && schema.length() > 0) {
        for (int i=0; i < resultSet.getMetaData().getColumnCount(); i++) {
          String columnName=resultSet.getMetaData().getColumnName(i + 1);
          if ("TABLE_SCHEM".equalsIgnoreCase(columnName) || "TABLE_SCHEMA".equalsIgnoreCase(columnName)) {
            if (schema.equalsIgnoreCase(resultSet.getString(resultSet.getMetaData().getColumnName(i + 1))) == false) {
              wrongSchema=true;
            }
            break;
          }
        }
      }
      if (wrongSchema == false) {
        String name=resultSet.getString("COLUMN_NAME").toUpperCase();
        String type=resultSet.getString("TYPE_NAME").toUpperCase();
        result.addColumnMetaData(name,type);
      }
    }
  }
 catch (  SQLException e) {
    throw new ActivitiException("Could not retrieve database metadata: " + e.getMessage());
  }
  if (result.getColumnNames().isEmpty()) {
    result=null;
  }
  return result;
}
