{
  for (  QueryVariable variable : variables) {
    if (variable.getVariableOperation() == null) {
      throw new ActivitiIllegalArgumentException("Variable operation is missing for variable: " + variable.getName());
    }
    if (variable.getValue() == null) {
      throw new ActivitiIllegalArgumentException("Variable value is missing for variable: " + variable.getName());
    }
    boolean nameLess=variable.getName() == null;
    Object actualValue=getApplication(ActivitiRestServicesApplication.class).getRestResponseFactory().getVariableValue(variable);
    if (nameLess && variable.getVariableOperation() != QueryVariableOperation.EQUALS) {
      throw new ActivitiIllegalArgumentException("Value-only query (without a variable-name) is only supported when using 'equals' operation.");
    }
switch (variable.getVariableOperation()) {
case EQUALS:
      if (nameLess) {
        taskQuery.taskVariableValueEquals(actualValue);
      }
 else {
        taskQuery.taskVariableValueEquals(variable.getName(),actualValue);
      }
    break;
case EQUALS_IGNORE_CASE:
  if (actualValue instanceof String) {
    taskQuery.taskVariableValueEqualsIgnoreCase(variable.getName(),(String)actualValue);
  }
 else {
    throw new ActivitiIllegalArgumentException("Only string variable values are supported when ignoring casing, but was: " + actualValue.getClass().getName());
  }
break;
case NOT_EQUALS:
taskQuery.taskVariableValueNotEquals(variable.getName(),actualValue);
break;
case NOT_EQUALS_IGNORE_CASE:
if (actualValue instanceof String) {
taskQuery.taskVariableValueNotEqualsIgnoreCase(variable.getName(),(String)actualValue);
}
 else {
throw new ActivitiIllegalArgumentException("Only string variable values are supported when ignoring casing, but was: " + actualValue.getClass().getName());
}
break;
case GREATER_THAN:
taskQuery.taskVariableValueGreaterThan(variable.getName(),actualValue);
break;
case GREATER_THAN_OR_EQUALS:
taskQuery.taskVariableValueGreaterThanOrEqual(variable.getName(),actualValue);
break;
case LESS_THAN:
taskQuery.taskVariableValueLessThan(variable.getName(),actualValue);
break;
case LESS_THAN_OR_EQUALS:
taskQuery.taskVariableValueLessThanOrEqual(variable.getName(),actualValue);
break;
case LIKE:
if (actualValue instanceof String) {
taskQuery.taskVariableValueLike(variable.getName(),(String)actualValue);
}
 else {
throw new ActivitiIllegalArgumentException("Only string variable values are supported using like, but was: " + actualValue.getClass().getName());
}
break;
default :
throw new ActivitiIllegalArgumentException("Unsupported variable query operation: " + variable.getVariableOperation());
}
}
}
