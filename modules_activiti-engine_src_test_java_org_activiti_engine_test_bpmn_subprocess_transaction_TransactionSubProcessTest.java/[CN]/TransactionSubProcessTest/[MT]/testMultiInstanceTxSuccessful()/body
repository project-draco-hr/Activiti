{
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("transactionProcess");
  List<EventSubscriptionEntity> EventSubscriptionEntitys=createEventSubscriptionQuery().eventType("compensate").list();
  assertEquals(10,EventSubscriptionEntitys.size());
  String executionId=EventSubscriptionEntitys.get(0).getExecutionId();
  for (  EventSubscriptionEntity EventSubscriptionEntity : EventSubscriptionEntitys) {
    if (!executionId.equals(EventSubscriptionEntity.getExecutionId())) {
      fail("subscriptions not under same execution");
    }
  }
  List<Task> tasks=taskService.createTaskQuery().list();
  for (  Task task : tasks) {
    taskService.setVariable(task.getId(),"confirmed",true);
    taskService.complete(task.getId());
  }
  List<Execution> executions=runtimeService.createExecutionQuery().activityId("receive").list();
  for (  Execution execution : executions) {
    runtimeService.signal(execution.getId());
  }
  runtimeService.signal(runtimeService.createExecutionQuery().activityId("afterSuccess").singleResult().getId());
  assertEquals(0,createEventSubscriptionQuery().count());
  assertProcessEnded(processInstance.getId());
}
