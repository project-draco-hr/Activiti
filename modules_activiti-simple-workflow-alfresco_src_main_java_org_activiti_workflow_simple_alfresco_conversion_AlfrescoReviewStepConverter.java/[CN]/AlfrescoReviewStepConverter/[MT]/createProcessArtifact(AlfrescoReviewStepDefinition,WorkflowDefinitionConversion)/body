{
  FlowElement lastElement;
  M2Model model=AlfrescoConversionUtil.getContentModel(conversion);
  String namespacePrefix=model.getNamespaces().get(0).getPrefix();
  String id=stepDefinition.getId();
  if (id == null) {
    id=AlfrescoConversionUtil.getValidIdString(stepDefinition.getName());
  }
  HumanStepDefinition reviewTask=new HumanStepDefinition();
  reviewTask.setName(stepDefinition.getName());
  reviewTask.setDescription("Review task");
  FormDefinition finalForm=null;
  if (stepDefinition.getForm() != null) {
    finalForm=stepDefinition.getForm().clone();
  }
 else {
    finalForm=new FormDefinition();
  }
  finalForm.addFormProperty(createTransitionsProperty());
  reviewTask.setForm(finalForm);
  if (stepDefinition.getAssignmentType() == HumanStepAssignmentType.USER) {
    reviewTask.setAssignee(new PropertyReference(stepDefinition.getAssignmentPropertyName()).getPlaceholder());
  }
  ScriptServiceTaskBuilder builder=new ScriptServiceTaskBuilder();
  builder.setExecutionVariable(getCountVariableName(id,namespacePrefix),"0");
  String requiredCount=null;
  if (stepDefinition.getRequiredApprovalCount() != null) {
    if (PropertyReference.isPropertyReference(stepDefinition.getRequiredApprovalCount())) {
      PropertyReference reference=PropertyReference.createReference(stepDefinition.getRequiredApprovalCount());
      requiredCount=reference.getVariableReference(namespacePrefix);
      AlfrescoConversionUtil.getPropertyReferences(conversion).add(reference);
    }
 else {
      requiredCount=stepDefinition.getRequiredApprovalCount();
    }
  }
 else {
    requiredCount="1";
  }
  builder.setExecutionVariable(getRequiredCountVariableName(id,namespacePrefix),requiredCount);
  ServiceTask serviceTask=builder.build();
  serviceTask.setName("Review initialization");
  serviceTask.setId(conversion.getUniqueNumberedId(ConversionConstants.SERVICE_TASK_ID_PREFIX));
  addFlowElement(conversion,serviceTask,true);
  UserTask userTask=(UserTask)conversion.getConversionFactory().getStepConverterFor(reviewTask).convertStepDefinition(reviewTask,conversion);
  lastElement=userTask;
  M2Type userTaskType=model.getType(userTask.getFormKey());
  userTaskType.setParentName(AlfrescoConversionConstants.OUTCOME_BASE_FORM_TYPE);
  ScriptTaskListenerBuilder listenerBuilder=AlfrescoConversionUtil.getScriptTaskListenerBuilder(conversion,userTask.getId(),AlfrescoConversionConstants.TASK_LISTENER_EVENT_COMPLETE);
  String approverCount=getCountVariableName(id,namespacePrefix);
  listenerBuilder.addLine("if(task.getVariableLocal('" + getTransitionProperty(userTaskType,namespacePrefix) + "') == '"+ AlfrescoConversionConstants.TRANSITION_APPROVE+ "') {");
  listenerBuilder.addLine("execution.setVariable('" + approverCount + "', "+ approverCount+ " + 1);");
  listenerBuilder.addLine("}");
  if (stepDefinition.getAssignmentType() == HumanStepAssignmentType.USERS) {
    String assignmentVariableName=id + "Assignee";
    M2ClassAssociation reviewAssignee=new M2ClassAssociation();
    M2AssociationTarget target=new M2AssociationTarget();
    target.setClassName(AlfrescoConversionConstants.CONTENT_TYPE_PEOPLE);
    target.setMandatory(true);
    target.setMany(false);
    M2AssociationSource source=new M2AssociationSource();
    source.setMany(false);
    source.setMandatory(true);
    reviewAssignee.setName(AlfrescoConversionUtil.getQualifiedName(namespacePrefix,assignmentVariableName));
    reviewAssignee.setTarget(target);
    reviewAssignee.setSource(source);
    userTaskType.getAssociations().add(reviewAssignee);
    userTask.setAssignee(new PropertyReference(assignmentVariableName).getUsernameReferenceExpression(namespacePrefix));
    MultiInstanceLoopCharacteristics mi=new MultiInstanceLoopCharacteristics();
    mi.setCompletionCondition(getCompletionCondition(id,namespacePrefix));
    mi.setElementVariable(new PropertyReference(assignmentVariableName).getVariableReference(namespacePrefix));
    PropertyReference reference=null;
    if (PropertyReference.isPropertyReference(stepDefinition.getAssignmentPropertyName())) {
      reference=PropertyReference.createReference(stepDefinition.getAssignmentPropertyName());
    }
 else {
      reference=new PropertyReference(stepDefinition.getAssignmentPropertyName());
    }
    mi.setInputDataItem(reference.getVariableReference(namespacePrefix));
    AlfrescoConversionUtil.getPropertyReferences(conversion).add(reference);
    mi.setSequential(false);
    userTask.setLoopCharacteristics(mi);
  }
  if (stepDefinition.getRejectionSteps() != null) {
    ChoiceStepsDefinition choice=new ChoiceStepsDefinition();
    choice.setId(id + "choice");
    ListConditionStepDefinition<ChoiceStepsDefinition> rejectStepList=new ListConditionStepDefinition<ChoiceStepsDefinition>();
    rejectStepList.setName("Rejected");
    for (    StepDefinition child : stepDefinition.getRejectionSteps()) {
      rejectStepList.addStep(child);
    }
    if (stepDefinition.isEndProcessOnReject()) {
      rejectStepList.addStep(new AlfrescoEndProcessStepDefinition());
    }
    ConditionDefinition condition=new ConditionDefinition();
    condition.setLeftOperand(getCountVariableName(id,namespacePrefix));
    condition.setOperator("<");
    condition.setRightOperand(getRequiredCountVariableName(id,namespacePrefix));
    rejectStepList.setConditions(Arrays.asList(condition));
    choice.addStepList(rejectStepList);
    ListConditionStepDefinition<ChoiceStepsDefinition> defaultStepList=new ListConditionStepDefinition<ChoiceStepsDefinition>();
    defaultStepList.setName("Approved");
    choice.addStepList(defaultStepList);
    lastElement=(FlowElement)conversion.getConversionFactory().getStepConverterFor(choice).convertStepDefinition(choice,conversion);
  }
  return lastElement;
}
