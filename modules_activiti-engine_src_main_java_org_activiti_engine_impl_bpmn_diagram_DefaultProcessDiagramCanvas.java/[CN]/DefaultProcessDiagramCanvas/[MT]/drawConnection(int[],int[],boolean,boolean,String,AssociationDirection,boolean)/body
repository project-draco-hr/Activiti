{
  Paint originalPaint=g.getPaint();
  Stroke originalStroke=g.getStroke();
  if (connectionType.equals("association")) {
    g.setStroke(ASSOCIATION_STROKE);
  }
 else   if (highLighted) {
    g.setPaint(HIGHLIGHT_COLOR);
    g.setStroke(HIGHLIGHT_FLOW_STROKE);
  }
  int radius=15;
  Path2D path=new Path2D.Double();
  boolean isDefaultConditionAvailable=false;
  for (int i=0; i < xPoints.length; i++) {
    Integer anchorX=xPoints[i];
    Integer anchorY=yPoints[i];
    double targetX=anchorX, targetY=anchorY;
    double ax=0, ay=0, bx=0, by=0, zx=0, zy=0;
    if (i > 0 && i < xPoints.length - 1) {
      Integer cx=anchorX, cy=anchorY;
      double lineLengthY=yPoints[i] - yPoints[i - 1], lineLengthX=xPoints[i] - xPoints[i - 1];
      double lineLength=Math.sqrt(Math.pow(lineLengthY,2) + Math.pow(lineLengthX,2)), dx=lineLengthX * radius / lineLength, dy=lineLengthY * radius / lineLength;
      targetX=targetX - dx;
      targetY=targetY - dy;
      isDefaultConditionAvailable=isDefault && i == 1 && lineLength > 10;
      if (lineLength < 2 * radius && i > 1) {
        targetX=xPoints[i] - lineLengthX / 2;
        targetY=yPoints[i] - lineLengthY / 2;
      }
      lineLengthY=yPoints[i + 1] - yPoints[i];
      lineLengthX=xPoints[i + 1] - xPoints[i];
      lineLength=Math.sqrt(Math.pow(lineLengthY,2) + Math.pow(lineLengthX,2));
      if (lineLength < radius) {
        lineLength=radius;
      }
      dx=lineLengthX * radius / lineLength;
      dy=lineLengthY * radius / lineLength;
      double nextSrcX=xPoints[i] + dx, nextSrcY=yPoints[i] + dy;
      if (lineLength < 2 * radius && i < xPoints.length - 2) {
        nextSrcX=xPoints[i] + lineLengthX / 2;
        nextSrcY=yPoints[i] + lineLengthY / 2;
      }
      double dx0=(cx - targetX) / 3, dy0=(cy - targetY) / 3;
      ax=cx - dx0;
      ay=cy - dy0;
      double dx1=(cx - nextSrcX) / 3, dy1=(cy - nextSrcY) / 3;
      bx=cx - dx1;
      by=cy - dy1;
      zx=nextSrcX;
      zy=nextSrcY;
    }
    if (i == 0) {
      path.moveTo(targetX,targetY);
    }
 else {
      path.lineTo(targetX,targetY);
    }
    if (i > 0 && i < xPoints.length - 1) {
      path.curveTo(ax,ay,bx,by,zx,zy);
    }
  }
  g.draw(path);
  if (isDefaultConditionAvailable) {
    Line2D.Double line=new Line2D.Double(xPoints[0],yPoints[0],xPoints[1],yPoints[1]);
    drawDefaultSequenceFlowIndicator(line);
  }
  if (conditional) {
    Line2D.Double line=new Line2D.Double(xPoints[0],yPoints[0],xPoints[1],yPoints[1]);
    drawConditionalSequenceFlowIndicator(line);
  }
  if (associationDirection.equals(AssociationDirection.ONE) || associationDirection.equals(AssociationDirection.BOTH)) {
    Line2D.Double line=new Line2D.Double(xPoints[xPoints.length - 2],yPoints[xPoints.length - 2],xPoints[xPoints.length - 1],yPoints[xPoints.length - 1]);
    drawArrowHead(line);
  }
  if (associationDirection.equals(AssociationDirection.BOTH)) {
    Line2D.Double line=new Line2D.Double(xPoints[1],yPoints[1],xPoints[0],yPoints[0]);
    drawArrowHead(line);
  }
  g.setPaint(originalPaint);
  g.setStroke(originalStroke);
}
