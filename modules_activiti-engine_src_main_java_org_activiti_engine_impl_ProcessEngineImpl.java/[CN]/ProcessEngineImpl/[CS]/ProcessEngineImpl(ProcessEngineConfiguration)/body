{
  this.processEngineConfiguration=processEngineConfiguration;
  this.name=processEngineConfiguration.getProcessEngineName();
  this.repositoryService=processEngineConfiguration.getRepositoryService();
  this.runtimeService=processEngineConfiguration.getProcessService();
  this.historicDataService=processEngineConfiguration.getHistoryService();
  this.identityService=processEngineConfiguration.getIdentityService();
  this.taskService=processEngineConfiguration.getTaskService();
  this.formService=processEngineConfiguration.getFormService();
  this.managementService=processEngineConfiguration.getManagementService();
  this.dbSchemaStrategy=processEngineConfiguration.getDbSchemaStrategy();
  this.jobExecutor=processEngineConfiguration.getJobExecutor();
  this.commandExecutor=processEngineConfiguration.getCommandExecutorTxRequired();
  commandExecutor.execute(new Command<Object>(){
    public Object execute(    CommandContext commandContext){
      performSchemaOperationsCreate();
      return null;
    }
  }
);
  if (name == null) {
    log.info("default activiti ProcessEngine created");
  }
 else {
    log.info("ProcessEngine " + name + " created");
  }
  if ((jobExecutor != null) && (jobExecutor.isAutoActivate())) {
    jobExecutor.start();
  }
}
