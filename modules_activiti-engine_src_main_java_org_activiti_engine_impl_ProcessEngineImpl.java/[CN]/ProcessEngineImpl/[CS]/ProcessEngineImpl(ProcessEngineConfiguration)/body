{
  this.processEngineConfiguration=processEngineConfiguration;
  this.name=processEngineConfiguration.getProcessEngineName();
  this.repositoryService=processEngineConfiguration.getRepositoryService();
  this.runtimeService=processEngineConfiguration.getProcessService();
  this.historicDataService=processEngineConfiguration.getHistoricDataService();
  this.identityService=processEngineConfiguration.getIdentityService();
  this.taskService=processEngineConfiguration.getTaskService();
  this.managementService=processEngineConfiguration.getManagementService();
  this.dbSchemaStrategy=processEngineConfiguration.getDbSchemaStrategy();
  this.jobExecutor=processEngineConfiguration.getJobExecutor();
  DbSqlSessionFactory dbSqlSessionFactory=processEngineConfiguration.getDbSqlSessionFactory();
  if (DbSchemaStrategy.DROP_CREATE == dbSchemaStrategy) {
    try {
      dbSqlSessionFactory.dbSchemaDrop();
    }
 catch (    RuntimeException e) {
    }
  }
  if (DbSchemaStrategy.CREATE_DROP == dbSchemaStrategy || DbSchemaStrategy.DROP_CREATE == dbSchemaStrategy || DbSchemaStrategy.CREATE == dbSchemaStrategy) {
    dbSqlSessionFactory.dbSchemaCreate();
  }
 else   if (DbSchemaStrategy.CHECK_VERSION == dbSchemaStrategy) {
    dbSqlSessionFactory.dbSchemaCheckVersion();
  }
  if (name == null) {
    log.info("default activiti ProcessEngine created");
  }
 else {
    log.info("ProcessEngine " + name + " created");
  }
  if ((jobExecutor != null) && (jobExecutor.isAutoActivate())) {
    jobExecutor.start();
  }
}
