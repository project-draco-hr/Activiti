{
  Group group=null;
  try {
    group=identityService.newGroup("fred");
    group.setName("name");
    group.setType("type");
    identityService.saveGroup(group);
    assertEquals(1,listener.getEventsReceived().size());
    ActivitiEntityEvent event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());
    assertTrue(event.getEntity() instanceof Group);
    Group groupFromEvent=(Group)event.getEntity();
    assertEquals("fred",groupFromEvent.getId());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
    group.setName("Another name");
    identityService.saveGroup(group);
    assertEquals(1,listener.getEventsReceived().size());
    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());
    assertTrue(event.getEntity() instanceof Group);
    groupFromEvent=(Group)event.getEntity();
    assertEquals("fred",groupFromEvent.getId());
    assertEquals("Another name",groupFromEvent.getName());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
    identityService.deleteGroup(group.getId());
    assertEquals(1,listener.getEventsReceived().size());
    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);
    assertEquals(ActivitiEventType.ENTITY_DELETED,event.getType());
    assertTrue(event.getEntity() instanceof Group);
    groupFromEvent=(Group)event.getEntity();
    assertEquals("fred",groupFromEvent.getId());
    assertNull(event.getProcessDefinitionId());
    assertNull(event.getExecutionId());
    assertNull(event.getProcessInstanceId());
    listener.clearEventsReceived();
  }
  finally {
    if (group != null && group.getId() != null) {
      identityService.deleteGroup(group.getId());
    }
  }
}
