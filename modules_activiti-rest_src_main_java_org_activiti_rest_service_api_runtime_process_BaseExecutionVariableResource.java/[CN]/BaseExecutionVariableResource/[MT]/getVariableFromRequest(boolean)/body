{
  String executionId=getAttribute(getExecutionIdParameter());
  if (executionId == null) {
    throw new ActivitiIllegalArgumentException("The " + getExecutionIdParameter() + " cannot be null");
  }
  String variableName=getAttribute("variableName");
  if (variableName == null) {
    throw new ActivitiIllegalArgumentException("The variableName cannot be null");
  }
  boolean variableFound=false;
  Object value=null;
  RestVariableScope variableScope=RestVariable.getScopeFromString(getQueryParameter("scope",getQuery()));
  if (variableScope == null) {
    if (ActivitiUtil.getRuntimeService().hasVariableLocal(executionId,variableName)) {
      value=ActivitiUtil.getRuntimeService().getVariableLocal(executionId,variableName);
      variableScope=RestVariableScope.LOCAL;
      variableFound=true;
    }
 else {
      Execution execution=ActivitiUtil.getRuntimeService().createExecutionQuery().executionId(executionId).singleResult();
      if (execution == null) {
        throw new ActivitiObjectNotFoundException("Could not find an execution with id '" + executionId + "'.",ProcessInstance.class);
      }
      if (execution.getParentId() != null) {
        value=ActivitiUtil.getRuntimeService().getVariable(executionId,execution.getParentId());
        variableScope=RestVariableScope.GLOBAL;
        variableFound=true;
      }
    }
  }
 else   if (variableScope == RestVariableScope.GLOBAL) {
    Execution execution=ActivitiUtil.getRuntimeService().createExecutionQuery().executionId(executionId).singleResult();
    if (execution == null) {
      throw new ActivitiObjectNotFoundException("Could not find an execution with id '" + executionId + "'.",ProcessInstance.class);
    }
    if (execution.getParentId() != null) {
      value=ActivitiUtil.getRuntimeService().getVariable(execution.getParentId(),variableName);
      variableScope=RestVariableScope.GLOBAL;
      variableFound=true;
    }
  }
 else   if (variableScope == RestVariableScope.LOCAL) {
    value=ActivitiUtil.getRuntimeService().getVariableLocal(executionId,variableName);
    variableScope=RestVariableScope.LOCAL;
    variableFound=true;
  }
  if (!variableFound) {
    throw new ActivitiObjectNotFoundException("Execution '" + executionId + "' doesn't have a variable with name: '"+ variableName+ "'.",VariableInstanceEntity.class);
  }
 else {
    return constructRestVariable(this,variableName,value,variableScope,executionId,includeBinary);
  }
}
