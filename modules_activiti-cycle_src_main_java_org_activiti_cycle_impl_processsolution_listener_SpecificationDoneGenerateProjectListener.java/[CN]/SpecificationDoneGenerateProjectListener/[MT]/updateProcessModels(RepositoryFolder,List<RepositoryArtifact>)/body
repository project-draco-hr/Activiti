{
  List<RepositoryArtifact> newModels=new ArrayList<RepositoryArtifact>();
  Map<RepositoryArtifact,RepositoryArtifact> resultMap=new HashMap<RepositoryArtifact,RepositoryArtifact>();
  for (  RepositoryArtifact processModel : processModels) {
    List<RepositoryArtifactLink> links=repositoryservice.getArtifactLinks(processModel.getConnectorId(),processModel.getNodeId());
    if (links.size() == 0) {
      newModels.add(processModel);
    }
    for (    RepositoryArtifactLink link : links) {
      if (!RepositoryArtifactLinkEntity.TYPE_IMPLEMENTS.equals(link.getLinkType())) {
        continue;
      }
      RepositoryArtifact implementationArtifact=link.getTargetArtifact();
      if (!implementationArtifact.getConnectorId().equals(underlyingTechnicalFolder.getConnectorId())) {
        continue;
      }
      if (!implementationArtifact.getNodeId().startsWith(underlyingTechnicalFolder.getNodeId())) {
        continue;
      }
      Date processModelUpdated=processModel.getMetadata().getLastChanged();
      Date implementationUpdated=implementationArtifact.getMetadata().getLastChanged();
      if (processModelUpdated == null || implementationUpdated == null || processModelUpdated.after(implementationUpdated)) {
        RepositoryConnector processModelConnector=RuntimeConnectorList.getMyConnectorById(processModel.getConnectorId());
        Content newContent=new Content();
        newContent.setValue(ActivitiCompliantBpmn20Provider.createBpmnXml(processModelConnector,processModel));
        repositoryservice.updateContent(implementationArtifact.getConnectorId(),implementationArtifact.getNodeId(),newContent);
        resultMap.put(processModel,implementationArtifact);
      }
    }
  }
  RepositoryConnector targetConnector=RuntimeConnectorList.getMyConnectorById(underlyingTechnicalFolder.getConnectorId());
  RepositoryFolder processesFolder=targetConnector.getRepositoryFolder(underlyingTechnicalFolder.getNodeId() + "/src/main/resources/diagrams");
  for (  RepositoryArtifact processModel : newModels) {
    RepositoryConnector processModelConnector=RuntimeConnectorList.getMyConnectorById(processModel.getConnectorId());
    RepositoryFolder parentFolder=processModelConnector.getRepositoryFolder(processModel.getMetadata().getParentFolderId());
    if ("backup".equals(parentFolder.getMetadata().getName())) {
      continue;
    }
    Content newContent=new Content();
    newContent.setValue(ActivitiCompliantBpmn20Provider.createBpmnXml(processModelConnector,processModel));
    String artifactName=processModel.getMetadata().getName() + ".bpmn20.xml";
    RepositoryArtifact implementationArtifact=repositoryservice.createArtifact(processesFolder.getConnectorId(),processesFolder.getNodeId(),artifactName,null,newContent);
    RepositoryArtifactLinkEntity link=new RepositoryArtifactLinkEntity();
    link.setLinkType(RepositoryArtifactLinkEntity.TYPE_IMPLEMENTS);
    link.setSourceArtifact(processModel);
    link.setTargetArtifact(implementationArtifact);
    repositoryservice.addArtifactLink(link);
    resultMap.put(processModel,implementationArtifact);
  }
  return resultMap;
}
