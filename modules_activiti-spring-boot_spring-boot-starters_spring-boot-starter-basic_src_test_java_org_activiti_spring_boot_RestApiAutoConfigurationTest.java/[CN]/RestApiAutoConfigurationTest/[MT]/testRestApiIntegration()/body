{
  this.context=new AnnotationConfigEmbeddedWebApplicationContext(BaseConfiguration.class);
  RestTemplate restTemplate=this.context.getBean(RestTemplate.class);
  String authenticationChallenge="http://localhost:" + this.context.getEmbeddedServletContainer().getPort() + "/api/process-definitions";
  final AtomicBoolean received403=new AtomicBoolean();
  received403.set(false);
  restTemplate.setErrorHandler(new ResponseErrorHandler(){
    @Override public boolean hasError(    ClientHttpResponse clientHttpResponse) throws IOException {
      return true;
    }
    @Override public void handleError(    ClientHttpResponse clientHttpResponse) throws IOException {
      if (clientHttpResponse.getStatusCode().equals(HttpStatus.FORBIDDEN))       received403.set(true);
    }
  }
);
  restTemplate.getForEntity(authenticationChallenge,Map.class);
  org.junit.Assert.assertTrue(received403.get());
}
