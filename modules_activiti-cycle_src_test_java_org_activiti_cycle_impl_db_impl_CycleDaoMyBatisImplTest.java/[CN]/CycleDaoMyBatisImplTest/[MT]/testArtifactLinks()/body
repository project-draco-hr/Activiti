{
  RepositoryArtifactLinkEntity link=new RepositoryArtifactLinkEntity();
  link.setSourceConnectorId("connector1");
  link.setSourceArtifactId("artifact1");
  link.setTargetConnectorId("connector2");
  link.setTargetArtifactId("artifact2");
  link.setLinkType("TEST");
  link.setComment("Created in test case");
  link.setLinkedBothWays(true);
  dao.insertArtifactLink(link);
  List<RepositoryArtifactLinkEntity> links1=dao.getOutgoingArtifactLinks("connector1","artifact1");
  assertEquals(1,links1.size());
  assertEquals("Created in test case",links1.get(0).getComment());
  assertNull(links1.get(0).getSourceRevision());
  assertNotNull(links1.get(0).getId());
  List<RepositoryArtifactLinkEntity> links2=dao.getOutgoingArtifactLinks("connector2","artifact2");
  assertEquals(0,links2.size());
  List<RepositoryArtifactLinkEntity> links3=dao.getIncomingArtifactLinks("connector1","artifact1");
  assertEquals(0,links3.size());
  List<RepositoryArtifactLinkEntity> links4=dao.getIncomingArtifactLinks("connector2","artifact2");
  assertEquals(1,links4.size());
  assertEquals("Created in test case",links4.get(0).getComment());
  assertEquals(links1.get(0).getId(),links4.get(0).getId());
  dao.deleteArtifactLink(links1.get(0).getId());
  List<RepositoryArtifactLinkEntity> links5=dao.getIncomingArtifactLinks("connector2","artifact2");
  assertEquals(0,links5.size());
}
