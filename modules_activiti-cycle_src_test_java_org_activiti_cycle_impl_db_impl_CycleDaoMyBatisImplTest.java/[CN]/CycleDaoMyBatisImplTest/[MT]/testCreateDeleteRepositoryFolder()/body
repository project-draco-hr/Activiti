{
  VirtualRepositoryFolderEntity vf1=new VirtualRepositoryFolderEntity();
  vf1.setConnectorId("vfs");
  vf1.setLabel("Management");
  vf1.setReferencedNodeId("/ps1/Management");
  vf1.setType("Management");
  VirtualRepositoryFolderEntity vf2=new VirtualRepositoryFolderEntity();
  vf2.setConnectorId("vfs");
  vf2.setLabel("Requirements");
  vf2.setReferencedNodeId("/ps1/Requirements");
  vf2.setType("Requirements");
  ProcessSolutionEntity ps=new ProcessSolutionEntity();
  ps.setLabel("My Process Solution");
  ps.setState(ProcessSolutionState.IN_SPECIFICATION);
  ps=dao.saveProcessSolution(ps);
  List<VirtualRepositoryFolderEntity> folders=new ArrayList<VirtualRepositoryFolderEntity>();
  folders.add(vf1);
  folders.add(vf2);
  folders=dao.addVirtualFoldersToSolution(ps.getId(),folders);
  for (  VirtualRepositoryFolderEntity virtualRepositoryFolderEntity : folders) {
    VirtualRepositoryFolderEntity storedFolder=dao.getVirtualRepositoryFolderById(virtualRepositoryFolderEntity.getId());
    assertNotNull(storedFolder);
    assertEquals(virtualRepositoryFolderEntity.getConnectorId(),storedFolder.getConnectorId());
    assertEquals(virtualRepositoryFolderEntity.getLabel(),storedFolder.getLabel());
    assertEquals(virtualRepositoryFolderEntity.getReferencedNodeId(),storedFolder.getReferencedNodeId());
    assertEquals(virtualRepositoryFolderEntity.getType(),storedFolder.getType());
    assertEquals(virtualRepositoryFolderEntity.getProcessSolutionId(),storedFolder.getProcessSolutionId());
    dao.deleteVirtualRepositoryFolderById(storedFolder.getId());
  }
  assertTrue(dao.getVirtualForldersByProcessSolutionId(ps.getId()).size() == 0);
  dao.deleteProcessSolutionById(ps.getId());
}
