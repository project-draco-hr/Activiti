{
  if (!isInitialized) {
    if (processEngines == null) {
      processEngines=new HashMap<String,ProcessEngine>();
    }
    ClassLoader classLoader=ReflectUtil.getClassLoader();
    Enumeration<URL> resources=null;
    try {
      resources=classLoader.getResources("activiti.cfg.xml");
    }
 catch (    IOException e) {
      throw new ActivitiException("can't find activiti.cfg.xml resources on the classpath: " + System.getProperty("java.class.path"),e);
    }
    while (resources.hasMoreElements()) {
      URL resource=resources.nextElement();
      initProcessEnginFromResource(resource);
    }
    String springConfigurationResource="activiti-context.xml";
    InputStream activitiContextInputStream=ReflectUtil.getResourceAsStream(springConfigurationResource);
    if (activitiContextInputStream != null) {
      try {
        Class<?> springConfigurationHelperClass=ReflectUtil.loadClass("org.activiti.spring.SpringConfigurationHelper");
        Method method=springConfigurationHelperClass.getMethod("buildProcessEngine",new Class<?>[]{String.class});
        method.invoke(null,new Object[]{springConfigurationResource});
      }
 catch (      Exception e) {
        throw new ActivitiException("couldn't initialize process engine from spring configuration resource " + springConfigurationResource + ": "+ e.getMessage(),e);
      }
    }
    isInitialized=true;
  }
 else {
    log.info("Process engines already initialized");
  }
}
