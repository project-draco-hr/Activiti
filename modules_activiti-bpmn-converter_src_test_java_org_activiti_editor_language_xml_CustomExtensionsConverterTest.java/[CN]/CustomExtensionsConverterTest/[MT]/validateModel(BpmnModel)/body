{
  Process process=model.getMainProcess();
  assertNotNull(process.getAttributes());
  assertEquals(1,process.getAttributes().size());
  List<ExtensionAttribute> attributes=process.getAttributes().get("version");
  assertNotNull(attributes);
  assertEquals(1,attributes.size());
  ExtensionAttribute attribute=attributes.get(0);
  assertNotNull(attribute);
  assertEquals("http://custom.org/bpmn",attribute.getNamespace());
  assertEquals("custom",attribute.getNamespacePrefix());
  assertEquals("version",attribute.getName());
  assertEquals("9",attribute.getValue());
  List<ActivitiListener> listeners=model.getMainProcess().getExecutionListeners();
  validateExecutionListeners(listeners);
  Map<String,List<ExtensionElement>> extensionElementMap=model.getMainProcess().getExtensionElements();
  validateExtensionElements(extensionElementMap);
  FlowElement flowElement=model.getMainProcess().getFlowElement("servicetask");
  assertNotNull(flowElement);
  assertTrue(flowElement instanceof ServiceTask);
  assertEquals("servicetask",flowElement.getId());
  ServiceTask serviceTask=(ServiceTask)flowElement;
  assertEquals("servicetask",serviceTask.getId());
  assertEquals("Service task",serviceTask.getName());
  List<FieldExtension> fields=serviceTask.getFieldExtensions();
  assertEquals(2,fields.size());
  FieldExtension field=(FieldExtension)fields.get(0);
  assertEquals("testField",field.getFieldName());
  assertEquals("test",field.getStringValue());
  field=(FieldExtension)fields.get(1);
  assertEquals("testField2",field.getFieldName());
  assertEquals("${test}",field.getExpression());
  listeners=serviceTask.getExecutionListeners();
  validateExecutionListeners(listeners);
  extensionElementMap=serviceTask.getExtensionElements();
  validateExtensionElements(extensionElementMap);
  assertEquals(1,serviceTask.getBoundaryEvents().size());
  BoundaryEvent boundaryEvent=serviceTask.getBoundaryEvents().get(0);
  assertEquals("timerEvent",boundaryEvent.getId());
  assertEquals(1,boundaryEvent.getEventDefinitions().size());
  assertTrue(boundaryEvent.getEventDefinitions().get(0) instanceof TimerEventDefinition);
  extensionElementMap=boundaryEvent.getEventDefinitions().get(0).getExtensionElements();
  validateExtensionElements(extensionElementMap);
}
