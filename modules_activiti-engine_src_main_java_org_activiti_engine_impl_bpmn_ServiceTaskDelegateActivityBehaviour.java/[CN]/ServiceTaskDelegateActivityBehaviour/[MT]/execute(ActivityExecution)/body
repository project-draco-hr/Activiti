{
  Object object=null;
  if (activityBehaviorType != null) {
    object=activityBehaviorType.newInstance();
  }
 else {
    object=expression.getValue(execution);
    if (object instanceof String) {
      String className=(String)object;
      if (className != null) {
        object=ReflectUtil.instantiate(className);
      }
    }
  }
  if (object instanceof ActivityBehavior) {
    ActivityBehavior activityBehavior=(ActivityBehavior)object;
    injectFields(execution,object);
    activityBehavior.execute(execution);
  }
 else {
    throw new ActivitiException("Service " + object + " is used in a serviceTask, but does not"+ " implement the "+ ActivityBehavior.class.getCanonicalName()+ " interface");
  }
}
