{
  InterpretableExecution interpretableExecution=(InterpretableExecution)execution;
  ActivityImpl activity=interpretableExecution.getProcessDefinition().findActivity(activityId);
  ActivityExecution outgoingExecution=execution;
  if (isInterrupting) {
    ScopeUtil.destroyScope(execution,"Event subprocess triggered using activity " + activityId);
  }
 else {
    outgoingExecution=execution.createExecution();
    outgoingExecution.setActive(true);
    outgoingExecution.setScope(false);
    outgoingExecution.setConcurrent(true);
  }
  ((InterpretableExecution)outgoingExecution).setActivity(activity);
  outgoingExecution.takeAll(activity.getOutgoingTransitions(),Collections.EMPTY_LIST);
}
